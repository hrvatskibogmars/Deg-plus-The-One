/* BORDER RADIUS */
/*------------------------
	Bounds
------------------------*/
/*------------------------
	Range definitions
------------------------*/
/*--------------------------------
	Media Query range templates
---------------------------------*/
/*------------------------
	Media Queries
------------------------*/
/* TRANSFORM  */
html, body, input, button {
  -webkit-text-size-adjust: none;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility; }

body, h1, h2, h3, h4, h5, h6, ul, ol, p, hr, form {
  margin: 0;
  padding: 0;
  border: none; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

hr {
  float: left;
  width: 100%;
  height: 1px; }

ul, ol {
  list-style: none; }

::-moz-selection {
  background: #000000;
  color: #ffffff; }

::selection {
  background: #000000;
  color: #ffffff; }

::-moz-selection {
  background: #000000;
  color: #ffffff; }

input {
  width: auto; }

input[type="text"],
input[type="password"],
input[type="email"],
input[type="search"],
textarea {
  width: 100%;
  float: left;
  margin: 0;
  padding: 0;
  border: none;
  box-sizing: border-box;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box; }

textarea {
  resize: vertical; }

input:focus, textarea:focus, select:focus {
  outline: none; }

figure {
  padding: 0;
  margin: 0; }

fieldset {
  border: none;
  padding: 0;
  outline: 0; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

*:before, *:after, * {
  box-sizing: border-box;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box; }

/*
 *  Remodal - v1.1.0
 *  Responsive, lightweight, fast, synchronized with CSS animations, fully customizable modal window plugin with declarative configuration and hash tracking.
 *  http://vodkabears.github.io/remodal/
 *
 *  Made by Ilya Makarov
 *  Under MIT License
 */
/* ==========================================================================
   Remodal's necessary styles
   ========================================================================== */
/* Hide scroll bar */
html.remodal-is-locked {
  overflow: hidden;
  -ms-touch-action: none;
  touch-action: none; }

/* Anti FOUC */
.remodal,
[data-remodal-id] {
  display: none; }

/* Necessary styles of the overlay */
.remodal-overlay {
  position: fixed;
  z-index: 9999;
  top: -5000px;
  right: -5000px;
  bottom: -5000px;
  left: -5000px;
  display: none; }

/* Necessary styles of the wrapper */
.remodal-wrapper {
  position: fixed;
  z-index: 10000;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  display: none;
  overflow: auto;
  text-align: center;
  -webkit-overflow-scrolling: touch; }

.remodal-wrapper:after {
  display: inline-block;
  height: 100%;
  margin-left: -0.05em;
  content: ""; }

/* Fix iPad, iPhone glitches */
.remodal-overlay,
.remodal-wrapper {
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden; }

/* Necessary styles of the modal dialog */
.remodal {
  position: relative;
  outline: none;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  text-size-adjust: 100%; }

.remodal-is-initialized {
  /* Disable Anti-FOUC */
  display: inline-block; }

/*
 *  Remodal - v1.1.0
 *  Responsive, lightweight, fast, synchronized with CSS animations, fully customizable modal window plugin with declarative configuration and hash tracking.
 *  http://vodkabears.github.io/remodal/
 *
 *  Made by Ilya Makarov
 *  Under MIT License
 */
/* ==========================================================================
   Remodal's default mobile first theme
   ========================================================================== */
/* Default theme styles for the background */
.remodal-bg.remodal-is-opening,
.remodal-bg.remodal-is-opened {
  -webkit-filter: blur(3px);
  filter: blur(3px); }

/* Default theme styles of the overlay */
.remodal-overlay {
  background: rgba(43, 46, 56, 0.9); }

.remodal-overlay.remodal-is-opening,
.remodal-overlay.remodal-is-closing {
  -webkit-animation-duration: 0.3s;
  animation-duration: 0.3s;
  -webkit-animation-fill-mode: forwards;
  animation-fill-mode: forwards; }

.remodal-overlay.remodal-is-opening {
  -webkit-animation-name: remodal-overlay-opening-keyframes;
  animation-name: remodal-overlay-opening-keyframes; }

.remodal-overlay.remodal-is-closing {
  -webkit-animation-name: remodal-overlay-closing-keyframes;
  animation-name: remodal-overlay-closing-keyframes; }

/* Default theme styles of the wrapper */
.remodal-wrapper {
  padding: 10px 10px 0; }

/* Default theme styles of the modal dialog */
.remodal {
  box-sizing: border-box;
  width: 100%;
  margin-bottom: 10px;
  padding: 35px;
  -webkit-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
  color: #2b2e38;
  background: #fff; }

.remodal.remodal-is-opening,
.remodal.remodal-is-closing {
  -webkit-animation-duration: 0.3s;
  animation-duration: 0.3s;
  -webkit-animation-fill-mode: forwards;
  animation-fill-mode: forwards; }

.remodal.remodal-is-opening {
  -webkit-animation-name: remodal-opening-keyframes;
  animation-name: remodal-opening-keyframes; }

.remodal.remodal-is-closing {
  -webkit-animation-name: remodal-closing-keyframes;
  animation-name: remodal-closing-keyframes; }

/* Vertical align of the modal dialog */
.remodal,
.remodal-wrapper:after {
  vertical-align: middle; }

/* Close button */
.remodal-close {
  position: absolute;
  top: 0;
  left: 0;
  display: block;
  overflow: visible;
  width: 35px;
  height: 35px;
  margin: 0;
  padding: 0;
  cursor: pointer;
  transition: color 0.2s;
  text-decoration: none;
  color: #95979c;
  border: 0;
  outline: 0;
  background: transparent; }

.remodal-close:hover,
.remodal-close:focus {
  color: #2b2e38; }

.remodal-close:before {
  font-family: Arial, "Helvetica CY", "Nimbus Sans L", sans-serif !important;
  font-size: 25px;
  line-height: 35px;
  position: absolute;
  top: 0;
  left: 0;
  display: block;
  width: 35px;
  content: "\00d7";
  text-align: center; }

/* Dialog buttons */
.remodal-confirm,
.remodal-cancel {
  font: inherit;
  display: inline-block;
  overflow: visible;
  min-width: 110px;
  margin: 0;
  padding: 12px 0;
  cursor: pointer;
  transition: background 0.2s;
  text-align: center;
  vertical-align: middle;
  text-decoration: none;
  border: 0;
  outline: 0; }

.remodal-confirm {
  color: #fff;
  background: #81c784; }

.remodal-confirm:hover,
.remodal-confirm:focus {
  background: #66bb6a; }

.remodal-cancel {
  color: #fff;
  background: #e57373; }

.remodal-cancel:hover,
.remodal-cancel:focus {
  background: #ef5350; }

/* Remove inner padding and border in Firefox 4+ for the button tag. */
.remodal-confirm::-moz-focus-inner,
.remodal-cancel::-moz-focus-inner,
.remodal-close::-moz-focus-inner {
  padding: 0;
  border: 0; }

/* Keyframes
   ========================================================================== */
@-webkit-keyframes remodal-opening-keyframes {
  from {
    -webkit-transform: scale(1.05);
    transform: scale(1.05);
    opacity: 0; }
  to {
    -webkit-transform: none;
    transform: none;
    opacity: 1; } }

@keyframes remodal-opening-keyframes {
  from {
    -webkit-transform: scale(1.05);
    transform: scale(1.05);
    opacity: 0; }
  to {
    -webkit-transform: none;
    transform: none;
    opacity: 1; } }

@-webkit-keyframes remodal-closing-keyframes {
  from {
    -webkit-transform: scale(1);
    transform: scale(1);
    opacity: 1; }
  to {
    -webkit-transform: scale(0.95);
    transform: scale(0.95);
    opacity: 0; } }

@keyframes remodal-closing-keyframes {
  from {
    -webkit-transform: scale(1);
    transform: scale(1);
    opacity: 1; }
  to {
    -webkit-transform: scale(0.95);
    transform: scale(0.95);
    opacity: 0; } }

@-webkit-keyframes remodal-overlay-opening-keyframes {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }

@keyframes remodal-overlay-opening-keyframes {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }

@-webkit-keyframes remodal-overlay-closing-keyframes {
  from {
    opacity: 1; }
  to {
    opacity: 0; } }

@keyframes remodal-overlay-closing-keyframes {
  from {
    opacity: 1; }
  to {
    opacity: 0; } }

/* Media queries
   ========================================================================== */
@media only screen and (min-width: 641px) {
  .remodal {
    max-width: 700px; } }

/* IE8
   ========================================================================== */
.lt-ie9 .remodal-overlay {
  background: #2b2e38; }

.lt-ie9 .remodal {
  width: 700px; }

.ubuntu-b, .form-item label, .products__title, .products__buy .products__price, .signup__data h2, .p-bidding .tables__position, .p-bidding .tables__price, .horiz__title {
  font-family: "Ubuntu", sans-serif;
  font-weight: 700; }

.ubuntu-r, .p-bidding .reset__anchor, .thank-you__title {
  font-family: "Ubuntu", sans-serif;
  font-weight: 400; }

.rale-b {
  font-family: "Raleway", sans-serif;
  font-weight: 700; }

.rale-r, .btn, .products__desc, .signup__data p, .p-home .cover h1, .p-bidding .cover h1, .p-bidding .tables__pricing, .p-bidding .tables__order, .thank-you__text, .remodal-confirm, .horiz__contact p, .horiz__contact a, .horiz__type, .horiz__desc {
  font-family: "Raleway", sans-serif;
  font-weight: 400; }

@font-face {
  font-family: 'FI-icons';
  src: url("../fonts/FI-icons.eot?516kv6");
  src: url("../fonts/FI-icons.eot?516kv6#iefix") format("embedded-opentype"), url("../fonts/FI-icons.woff2?516kv6") format("woff2"), url("../fonts/FI-icons.ttf?516kv6") format("truetype"), url("../fonts/FI-icons.woff?516kv6") format("woff"), url("../fonts/FI-icons.svg?516kv6#FI-icons") format("svg");
  font-weight: normal;
  font-style: normal; }

[class^="icon-"], [class*=" icon-"] {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'FI-icons' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.icon-fb:before {
  content: "\e900"; }

.icon-g-plus:before {
  content: "\e901"; }

.icon-twitter:before {
  content: "\e902"; }

.p-full {
  height: 100vh;
  width: 100%; }

.form-item {
  margin-top: 30px;
  overflow: hidden; }
  .form-item label {
    font-size: 1.2rem;
    color: #b7b7b7;
    text-transform: uppercase; }

.btn {
  font-size: 1.4rem;
  text-transform: uppercase;
  padding: 10px 40px; }
  .btn-red {
    background: white;
    color: #de3838;
    border: 1px solid #de3838;
    text-decoration: none; }
  .btn-black {
    background: white;
    color: black;
    text-decoration: none;
    border: 1px solid black;
    float: right; }

.navigation {
  width: 91.66667%;
  float: left;
  margin-left: auto;
  margin-right: auto;
  padding-left: 0;
  padding-right: 0;
  float: none;
  overflow: hidden;
  position: relative;
  top: 30px;
  height: 50px; }

.products {
  width: 91.66667%;
  float: left;
  float: none;
  margin: 80px auto;
  padding-left: 0;
  padding-right: 0; }
  .products__item {
    width: 33.33333%;
    float: left;
    padding: 2.08333%;
    height: 400px; }
    .products__item:nth-child(3n + 1) {
      margin-left: 0;
      margin-right: -100%;
      clear: both; }
    .products__item:nth-child(3n + 2) {
      margin-left: 33.33333%;
      margin-right: -100%;
      clear: none; }
    .products__item:nth-child(3n + 3) {
      margin-left: 66.66667%;
      margin-right: -100%;
      clear: none; }
  .products__image {
    height: 200px;
    width: 100%; }
  .products__source {
    height: 100%;
    width: 100%;
    object-fit: cover; }
  .products__title {
    font-size: 2rem;
    line-height: 1.25;
    margin-top: 20px; }
  .products__desc {
    font-size: 1.2rem;
    line-height: 1.66667;
    margin: 15px 0 10px;
    height: 20px;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis; }
  .products__buy {
    overflow: hidden;
    position: relative; }
    .products__buy .products__price {
      font-size: 2rem;
      line-height: 1;
      float: left;
      position: absolute;
      left: 0;
      top: 50%;
      -webkit-transform: translateY(-50%);
      -ms-transform: translateY(-50%);
      transform: translateY(-50%); }
    .products__buy .btn {
      float: right; }

.container {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto; }
  .container:after {
    content: " ";
    display: block;
    clear: both; }

input[type="text"], input[type="password"] {
  border-bottom: 1px solid #dddddd !important;
  height: 25px; }

html {
  font-size: 10px; }

.signup {
  background: #373737;
  position: relative; }
  .signup__container {
    width: 50%;
    float: left;
    margin-left: auto;
    margin-right: auto;
    position: absolute;
    left: 0;
    right: 0;
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
    height: 600px;
    background: white;
    overflow: hidden; }
  .signup__data {
    width: 63.63636%;
    float: left;
    padding: 13.63636% 9.09091% 9.09091%; }
    .signup__data h2 {
      font-size: 3rem; }
    .signup__data p {
      font-size: 1.2rem;
      margin-top: 12px; }
  .signup__submit:hover {
    cursor: pointer; }
  .signup__cover {
    width: 36.36364%;
    float: left; }
  .signup__source {
    width: auto;
    height: 100%;
    object-fit: cover; }
  .signup__inner {
    margin-top: 20px; }

.p-home {
  background: white; }
  .p-home .cover {
    width: 91.66667%;
    float: left;
    margin-left: auto;
    margin-right: auto;
    padding-left: 0;
    padding-right: 0;
    float: none;
    left: 0;
    right: 0;
    height: calc(100vh - 100px);
    top: 50px;
    position: relative;
    background-image: url("../../static/img/cover.jpg");
    background-size: cover;
    background-repeat: no-repeat; }
    .p-home .cover h1 {
      color: white;
      width: 45.83333%;
      float: left;
      font-size: 4.5rem;
      line-height: 1.22222;
      text-transform: uppercase;
      letter-spacing: 0.2rem;
      position: absolute;
      bottom: 12.5%;
      left: 12.5%; }

.p-bidding .cover {
  width: 91.66667%;
  float: left;
  float: none;
  margin: 0 auto; }
  .p-bidding .cover h1 {
    color: #818181;
    font-size: 5.5rem;
    line-height: 1.14545;
    margin-bottom: 20px;
    border-bottom: 1px solid #DDDDDD; }

.p-bidding .tables {
  width: 91.66667%;
  float: left;
  float: none;
  margin: 0 auto; }
  .p-bidding .tables__list {
    margin-top: 50px;
    clear: both;
    overflow: hidden;
    padding: 5px 5px; }
    .p-bidding .tables__list--offset {
      padding-left: 40px; }
  .p-bidding .tables__item {
    border-radius: 5px;
    box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.24);
    overflow: hidden;
    margin-left: 10px; }
    .p-bidding .tables__item a {
      text-decoration: none; }
    .p-bidding .tables__item:first-of-type {
      margin-left: 0; }
  .p-bidding .tables__anchor {
    transition: all 0.3s; }
  .p-bidding .tables__anchor--active .tables__order {
    background: #60b73e; }
  .p-bidding .tables__anchor--occupied .tables__order {
    background: #d0393f; }
  .p-bidding .tables__item-top {
    width: 9.09091%;
    float: left; }
  .p-bidding .tables__info {
    padding: 10px; }
  .p-bidding .tables__position {
    color: #373737;
    font-size: 1.1rem;
    line-height: 1.18182;
    text-transform: uppercase;
    margin-bottom: 5px; }
  .p-bidding .tables__pricing {
    color: #818181;
    font-size: 1.1rem;
    line-height: 1.18182;
    margin-bottom: 2px; }
  .p-bidding .tables__price {
    color: #d0393f;
    font-size: 1.1rem;
    line-height: 1.18182; }
  .p-bidding .tables__order {
    box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.24);
    background: #373737;
    color: white;
    text-align: center;
    padding: 7px 0;
    text-transform: uppercase;
    transition: all 0.3s; }

.p-bidding .offer {
  width: 37.5%;
  float: left;
  float: none;
  margin: 40px auto 0;
  overflow: hidden; }
  .p-bidding .offer__form {
    overflow: hidden; }
  .p-bidding .offer__input {
    width: 57.14286%;
    float: left;
    border: 1px solid #dddddd;
    padding: 5px 20px;
    height: 38px; }
  .p-bidding .offer__submit {
    width: 28.57143%;
    float: left; }
    .p-bidding .offer__submit:hover {
      cursor: pointer; }

.p-bidding .reset {
  width: 91.66667%;
  float: left;
  float: none;
  margin: 0 auto; }
  .p-bidding .reset__inner {
    float: right;
    margin-bottom: 10px; }
  .p-bidding .reset__anchor {
    color: #818181;
    font-size: 1.4rem;
    line-height: 1; }

.thank-you__title {
  color: #373737;
  font-size: 2.4rem;
  line-height: 1.45833; }

.thank-you__text {
  color: #818181;
  font-size: 1.3rem;
  line-height: 1.38462; }

.remodal-confirm {
  font-size: 1.3rem;
  line-height: 1.38462; }

.search {
  width: 25%;
  float: left;
  float: right; }
  .search .search__input {
    width: 66.66667%;
    float: left; }
  .search__submit {
    font-size: 1.1rem;
    text-transform: uppercase;
    padding: 5px 15px;
    width: 33.33333%;
    float: left;
    float: right;
    border: 1px solid #dddddd;
    color: #818181; }
    .search__submit:hover {
      cursor: pointer; }

.horiz {
  width: 91.66667%;
  float: left;
  float: none;
  margin: 0 auto;
  margin-top: 60px;
  padding-bottom: 40px; }
  .horiz .btn-red {
    color: #de3838 !important; }
  .horiz__btn {
    width: 100%;
    padding: 5px 0;
    text-align: center;
    display: block;
    margin-bottom: 15px; }
  .horiz .filter {
    margin-bottom: 20px;
    float: left;
    margin-right: 20px; }
  .horiz__item {
    border-bottom: 1px solid #dddddd;
    padding: 15px 10px;
    width: 100%;
    overflow: hidden; }
    .horiz__item:first-of-type {
      border-top: 1px solid #dddddd; }
  .horiz__image {
    float: left;
    width: 13.63636%;
    float: left;
    overflow: hidden; }
  .horiz__source {
    width: 100%;
    height: 100%;
    object-fit: cover; }
  .horiz__info {
    margin-left: 9.09091%;
    width: 50%;
    float: left; }
  .horiz__contact {
    width: 9.09091%;
    float: left;
    float: right;
    text-align: left; }
    .horiz__contact p {
      font-size: 1.2rem;
      line-height: 2; }
    .horiz__contact a {
      font-size: 1.2rem;
      line-height: 2;
      color: #818181; }
  .horiz__type {
    font-size: 1.1rem;
    line-height: 1.18182;
    text-transform: uppercase;
    color: #818181; }
  .horiz__title {
    font-size: 1.4rem;
    line-height: 1.14286;
    color: #e8323b;
    margin-top: 8px; }
  .horiz__desc {
    font-size: 1.2rem;
    line-height: 1.5;
    color: #373737;
    margin-top: 10px; }
  .horiz .load-more {
    width: 22.72727%;
    float: left;
    float: none;
    margin: 20px auto 0;
    overflow: hidden; }

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlbHBlcnMvbWl4aW5zL19ib3JkZXIuc2NzcyIsImhlbHBlcnMvbWl4aW5zL19yZXNwb25zaXZlTVEuc2NzcyIsImhlbHBlcnMvbWl4aW5zL190cmFuc2Zvcm0uc2NzcyIsImJhc2UvcmVzZXQvX3Jlc2V0LnNjc3MiLCJ2YXJpYWJsZXMvX3NlbGVjdGlvbi5zY3NzIiwiaGVscGVycy9taXhpbnMvX2JveC5zY3NzIiwiZnJhbWV3b3Jrcy9fcmVtb2RhbC5zY3NzIiwiZnJhbWV3b3Jrcy9fcmVtb2RhbC1kZWZhdWx0LXRoZW1lLnNjc3MiLCJiYXNlL3R5cG9ncmFwaHkvX3R5cG9ncmFwaHkuc2NzcyIsImJhc2UvdHlwb2dyYXBoeS9faWNvbnMuc2NzcyIsIm1haW4uY3NzIiwibGF5b3V0L19sYXlvdXQuc2NzcyIsIi4uLy4uL2Jvd2VyX2NvbXBvbmVudHMvc3VzeS9zYXNzL3N1c3kvb3V0cHV0L3N1cHBvcnQvX3JlbS5zY3NzIiwiLi4vLi4vYm93ZXJfY29tcG9uZW50cy9zdXN5L3Nhc3Mvc3VzeS9sYW5ndWFnZS9zdXN5L19zcGFuLnNjc3MiLCIuLi8uLi9ib3dlcl9jb21wb25lbnRzL3N1c3kvc2Fzcy9zdXN5L291dHB1dC9zaGFyZWQvX2RpcmVjdGlvbi5zY3NzIiwiLi4vLi4vYm93ZXJfY29tcG9uZW50cy9zdXN5L3Nhc3Mvc3VzeS9sYW5ndWFnZS9zdXN5L19pc29sYXRlLnNjc3MiLCIuLi8uLi9ib3dlcl9jb21wb25lbnRzL3N1c3kvc2Fzcy9zdXN5L2xhbmd1YWdlL3N1c3kvX2dhbGxlcnkuc2NzcyIsIi4uLy4uL2Jvd2VyX2NvbXBvbmVudHMvc3VzeS9zYXNzL3N1c3kvbGFuZ3VhZ2Uvc3VzeS9fcm93cy5zY3NzIiwiaGVscGVycy9taXhpbnMvX2ZvbnQuc2NzcyIsImxheW91dC9fY29udGFpbmVycy5zY3NzIiwiLi4vLi4vYm93ZXJfY29tcG9uZW50cy9zdXN5L3Nhc3Mvc3VzeS9sYW5ndWFnZS9zdXN5L19jb250YWluZXIuc2NzcyIsIi4uLy4uL2Jvd2VyX2NvbXBvbmVudHMvc3VzeS9zYXNzL3N1c3kvb3V0cHV0L3N1cHBvcnQvX2NsZWFyZml4LnNjc3MiLCJwYWdlcy9fcmVnaXN0ZXIuc2NzcyIsInZhcmlhYmxlcy9fY29sb3JzLnNjc3MiLCJwYWdlcy9faG9tZS5zY3NzIiwicGFnZXMvX2JpZGRpbmcuc2NzcyIsInBhZ2VzL19saXN0LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsbUJBQW1CO0FDQW5COzswQkFFMEI7QUFnQjFCOzswQkFFMEI7QUF3QjFCOzttQ0FFbUM7QUFlbkM7OzBCQUUwQjtBQy9EMUIsZ0JBQWdCO0FDQWhCO0VBQ0ksK0JBQStCO0VBQy9CLG9DQUFvQztFQUNwQyxtQ0FBbUMsRUFDdEM7O0FBRUQ7RUFDSSxVQUFVO0VBQ1YsV0FBVztFQUNYLGFBQWEsRUFDaEI7O0FBRUQsaURBQWlEO0FBQ2pEOztFQUVJLGVBQWUsRUFDbEI7O0FBRUQ7RUFBYyxZQUFZO0VBQUUsWUFBWTtFQUFFLFlBQVksRUFBSTs7QUFDMUQ7RUFBYyxpQkFBaUIsRUFBSTs7QUFHbkM7RUFBYyxvQkNyQndCO0VEcUJtQixlQ3RCN0IsRURzQjJEOztBQUF2RjtFQUFjLG9CQ3JCd0I7RURxQm1CLGVDdEI3QixFRHNCMkQ7O0FBQ3ZGO0VBQW1CLG9CQ3RCbUI7RURzQndCLGVDdkJsQyxFRHVCZ0U7O0FBRzVGO0VBQVEsWUFBWSxFQUFJOztBQUN4Qjs7Ozs7RUFLSSxZQUFZO0VBQ1osWUFBWTtFQUNaLFVBQVU7RUFDVixXQUFXO0VBQ1gsYUFBYTtFRTVCVCx1QkFBdUI7RUFDdkIsNEJBQTRCO0VBQzVCLCtCQUErQixFRjhCdEM7O0FBQ0Q7RUFBVyxpQkFBaUIsRUFBSTs7QUFDaEM7RUFBNEMsY0FBYyxFQUFJOztBQUU5RDtFQUNJLFdBQVc7RUFDWCxVQUFVLEVBQ2I7O0FBRUQ7RUFDSSxhQUFhO0VBQ2IsV0FBVztFQUNYLFdBQVcsRUFDZDs7QUFFRDtFQUNJLDBCQUEwQjtFQUMxQixrQkFBa0IsRUFDckI7O0FBRUQ7RUVwRFEsdUJBQXVC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O0VBbENMO0lBb0NRLFlBQVk7SUFDWixhQUFhO0lBQ2Isa0JBQWtCLEVBQ3JCO0VBdkNMO0lkQUksc0JDd0lvQjtJRHhJcEIsV0N3SW9CO0lEeElwQixZRUE0RCxFWTJDM0Q7RUEzQ0w7SWRBSSxnQkN3SW9CO0lEeElwQixZRUE0RDtJWThDeEQsYUFBWTtJQUNaLGlCQUFpQixFQVVwQjtJQXpETDtNUjRCSSxrQlFzQmlDO01SckJqQyxlQUE4QixFUXNCekI7SUFuRFQ7TVI0Qkksa0JRMEJpQztNUnpCakMsZUFBOEI7TVEwQnRCLGVIOUNHLEVHK0NOO0VBeERUO0lSNEJJLGtCUWdDNkI7SVIvQjdCLHFCQUE4QjtJUWdDMUIsMEJBQTBCO0lBQzFCLGVIckRPLEVHc0RWO0VBL0RMO0lSNEJJLGtCUXNDNkI7SVJyQzdCLHFCQUE4QjtJUXNDMUIsZUFBZTtJQUNmLGdCQUFnQixFQUNuQjtFQXJFTDtJUjRCSSxrQlE0QzZCO0lSM0M3QixpQkFBOEI7SVE0QzFCLGVIbEVNO0lHbUVOLGlCQUFpQixFQUNwQjtFQTNFTDtJZEFJLGlCQ3dJb0I7SUR4SXBCLFlFQTREO0lZOEV4RCxZQUFXO0lBQ1gsb0JBQW9CO0lBQ3BCLGlCQUFpQixFQUNwQiIsImZpbGUiOiJtYWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIEJPUkRFUiBSQURJVVMgKi9cbkBtaXhpbiBib3JkZXItcmFkaXVzKCRyYWRpdXM6IDVweCkge1xuICAgIEBpbmNsdWRlIGNzczMtcHJlZml4KCdib3JkZXItcmFkaXVzJywgJHJhZGl1cyk7XG59IiwiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblx0Qm91bmRzXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG5AZnVuY3Rpb24gbG93ZXItYm91bmQoJHJhbmdlKXtcbiAgICBAaWYgbGVuZ3RoKCRyYW5nZSkgPD0gMCB7XG4gICAgICAgIEByZXR1cm4gMDtcbiAgICB9XG4gICAgQHJldHVybiBudGgoJHJhbmdlLDEpO1xufVxuXG5AZnVuY3Rpb24gdXBwZXItYm91bmQoJHJhbmdlKSB7XG4gICAgQGlmIGxlbmd0aCgkcmFuZ2UpIDwgMiB7XG4gICAgICAgIEByZXR1cm4gOTk5OTk5OTk5OTk5O1xuICAgIH1cbiAgICBAcmV0dXJuIG50aCgkcmFuZ2UsIDIpO1xufVxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXHRSYW5nZSBkZWZpbml0aW9uc1xuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuLy9Nb2JpbGVcbiRtb2JpbGU6IFx0XHQoMCwgNjAwcHgpO1xuJG1vYmlsZS1TOiBcdFx0KDAsIDMxOXB4KTtcbiRtb2JpbGUtTTogXHRcdCgzMjBweCwgNDc5cHgpO1xuJG1vYmlsZS1TTTogICAgICgwLCA0NzlweCk7XG4kbW9iaWxlLUw6IFx0XHQoNDgwcHgsIDU5OXB4KTtcblxuLy9UYWJsZXRcbiR0YWJsZXQ6IFx0XHQoNjAwcHgsIDEwMjRweCk7XG4kdGFibGV0LVM6IFx0XHQoNjAwcHgsIDc2N3B4KTtcbiR0YWJsZXQtTTogXHRcdCg3NjdweCwgOTc5cHgpO1xuJHRhYmxldC1TTTogXHQoNjAwcHgsIDk3OXB4KTtcbiR0YWJsZXQtTDogXHRcdCg3NjhweCwgMTAyNHB4KTtcblxuLy9EZXNrdG9wXG4kZGVza3RvcDogXHRcdCgxMDI1cHgpO1xuJGRlc2t0b3AtUzogXHQoMTAyNXB4LCAxMjE5cHgpO1xuJGRlc2t0b3AtTTogXHQoMTIyMHB4LCAxNDM5cHgpO1xuJGRlc2t0b3AtTDogXHQoMTQ0MHB4LCAxNTk5cHgpO1xuJGRlc2t0b3AtWEw6IFx0KDE2MDBweCk7XG5cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXHRNZWRpYSBRdWVyeSByYW5nZSB0ZW1wbGF0ZXNcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbkBtaXhpbiBNUS1yYW5nZS1ib3VuZCgkbWluLCAkbWF4KSB7XG5cbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICN7bG93ZXItYm91bmQoJG1pbil9KSBhbmQgKG1heC13aWR0aDogI3t1cHBlci1ib3VuZCgkbWF4KX0pIHtAY29udGVudH1cblxufVxuXG5AbWl4aW4gTVEtcmFuZ2UtZnJvbSgkbWluKSB7XG5cbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICN7bG93ZXItYm91bmQoJG1pbil9KSB7QGNvbnRlbnR9XG5cbn1cblxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXHRNZWRpYSBRdWVyaWVzXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG5AbWl4aW4gTVEoJGNhbnZhcywgJG1heG1pbjogbWF4LXdpZHRoLCAkc2l6ZTogMCkge1xuXG4gICAgQGlmICRjYW52YXMgPT0gbW9iaWxlICBcdFx0ICAgICAgICB7QGluY2x1ZGUgTVEtcmFuZ2UtYm91bmQgXHQoJG1vYmlsZSwgJG1vYmlsZSkgXHRcdFx0e0Bjb250ZW50fX1cbiAgICBAZWxzZSBpZiAkY2FudmFzID09IG1vYmlsZS1TXHRcdHtAaW5jbHVkZSBNUS1yYW5nZS1ib3VuZCBcdCgkbW9iaWxlLVMsICRtb2JpbGUtUykgXHRcdHtAY29udGVudH19XG4gICAgQGVsc2UgaWYgJGNhbnZhcyA9PSBtb2JpbGUtTVx0XHR7QGluY2x1ZGUgTVEtcmFuZ2UtYm91bmQgXHQoJG1vYmlsZS1NLCAkbW9iaWxlLU0pIFx0XHR7QGNvbnRlbnR9fVxuICAgIEBlbHNlIGlmICRjYW52YXMgPT0gbW9iaWxlLUxcdFx0e0BpbmNsdWRlIE1RLXJhbmdlLWJvdW5kIFx0KCRtb2JpbGUtTCwgJG1vYmlsZS1MKSBcdFx0e0Bjb250ZW50fX1cbiAgICBAZWxzZSBpZiAkY2FudmFzID09IG1vYmlsZS1MLVx0XHR7QGluY2x1ZGUgTVEtcmFuZ2UtYm91bmQgICAgKCRtb2JpbGUtTC0sICRtb2JpbGUtTC0pIFx0e0Bjb250ZW50fX1cblxuICAgIEBlbHNlIGlmICRjYW52YXMgPT0gbW9iaWxlLSBcdFx0e0BpbmNsdWRlIE1RLXJhbmdlLWZyb20gXHQoJHRhYmxldCkgXHRcdFx0XHRcdHtAY29udGVudH19XG5cbiAgICBAZWxzZSBpZiAkY2FudmFzID09IHRhYmxldFx0XHQgICAge0BpbmNsdWRlIE1RLXJhbmdlLWJvdW5kIFx0KCR0YWJsZXQsICR0YWJsZXQpIFx0XHRcdHtAY29udGVudH19XG4gICAgQGVsc2UgaWYgJGNhbnZhcyA9PSB0YWJsZXQtU1x0XHR7QGluY2x1ZGUgTVEtcmFuZ2UtYm91bmQgXHQoJHRhYmxldC1TLCAkdGFibGV0LVMpIFx0XHR7QGNvbnRlbnR9fVxuICAgIEBlbHNlIGlmICRjYW52YXMgPT0gdGFibGV0LU1cdFx0e0BpbmNsdWRlIE1RLXJhbmdlLWJvdW5kIFx0KCR0YWJsZXQtTSwgJHRhYmxldC1NKSBcdFx0e0Bjb250ZW50fX1cbiAgICBAZWxzZSBpZiAkY2FudmFzID09IHRhYmxldC1MXHRcdHtAaW5jbHVkZSBNUS1yYW5nZS1ib3VuZCBcdCgkdGFibGV0LUwsICR0YWJsZXQtTCkgXHRcdHtAY29udGVudH19XG5cbiAgICBAZWxzZSBpZiAkY2FudmFzID09IGRlc2t0b3AtIFx0ICAgIHtAaW5jbHVkZSBNUS1yYW5nZS1ib3VuZCBcdCgkbW9iaWxlLCAkdGFibGV0KSBcdFx0XHR7QGNvbnRlbnR9fVxuXG4gICAgQGVsc2UgaWYgJGNhbnZhcyA9PSBkZXNrdG9wXHRcdCAgICB7QGluY2x1ZGUgTVEtcmFuZ2UtZnJvbSBcdCgkZGVza3RvcCkgXHRcdFx0XHRcdHtAY29udGVudH19XG4gICAgQGVsc2UgaWYgJGNhbnZhcyA9PSBkZXNrdG9wLVNcdCAgICB7QGluY2x1ZGUgTVEtcmFuZ2UtYm91bmQgXHQoJGRlc2t0b3AtUywgJGRlc2t0b3AtUykgXHR7QGNvbnRlbnR9fVxuICAgIEBlbHNlIGlmICRjYW52YXMgPT0gZGVza3RvcC1NXHQgICAge0BpbmNsdWRlIE1RLXJhbmdlLWJvdW5kIFx0KCRkZXNrdG9wLU0sICRkZXNrdG9wLU0pIFx0e0Bjb250ZW50fX1cbiAgICBAZWxzZSBpZiAkY2FudmFzID09IGRlc2t0b3AtTFx0ICAgIHtAaW5jbHVkZSBNUS1yYW5nZS1ib3VuZCBcdCgkZGVza3RvcC1MLCAkZGVza3RvcC1MKSBcdHtAY29udGVudH19XG4gICAgQGVsc2UgaWYgJGNhbnZhcyA9PSBkZXNrdG9wLVhMXHQgICAge0BpbmNsdWRlIE1RLXJhbmdlLWZyb20gXHQoJGRlc2t0b3AtWEwpIFx0XHRcdFx0e0Bjb250ZW50fX1cblxuICAgIEBlbHNlIHtcblxuICAgICAgICBAbWVkaWEgKCRtYXhtaW46ICRjYW52YXMpIHtcbiAgICAgICAgICAgIEBjb250ZW50O1xuICAgICAgICB9XG4gICAgfVxufVxuXG5AaW5jbHVkZSBNUShkZXNrdG9wKSB7XG5cbn0iLCIvKiBUUkFOU0ZPUk0gICovXG5AbWl4aW4gdHJhbnNmb3JtKCRwYXJhbXMpIHtcbiAgICBAaW5jbHVkZSBjc3MzLXByZWZpeCgndHJhbnNmb3JtJywgJHBhcmFtcyk7XG59XG5cbkBtaXhpbiB0cmFuc2Zvcm0tc2NhbGUoJHNpemVYOiAxLCAkc2l6ZVk6ICRzaXplWCkge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgkc2l6ZVgsICRzaXplWSk7XG4gICAgLW1vei10cmFuc2Zvcm06IHNjYWxlKCRzaXplWCwgJHNpemVZKTtcbiAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZSgkc2l6ZVgsICRzaXplWSk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZSgkc2l6ZVgsICRzaXplWSk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgkc2l6ZVgsICRzaXplWSk7XG59XG5cbkBtaXhpbiB0cmFuc2Zvcm0tb3JpZ2luKCRvcmlnaW4pIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46ICN7JG9yaWdpbn07XG4gICAgLW1vei10cmFuc2Zvcm0tb3JpZ2luOiAjeyRvcmlnaW59O1xuICAgIC1tcy10cmFuc2Zvcm0tb3JpZ2luOiAjeyRvcmlnaW59O1xuICAgIC1vLXRyYW5zZm9ybS1vcmlnaW46ICN7JG9yaWdpbn07XG4gICAgdHJhbnNmb3JtLW9yaWdpbjogI3skb3JpZ2lufTtcbn1cblxuQG1peGluIHJvdGF0ZSgkZGVncmVlczogMCkge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoI3skZGVncmVlc31kZWcpO1xuICAgIC1tb3otdHJhbnNmb3JtOiByb3RhdGUoI3skZGVncmVlc31kZWcpO1xuICAgIC1tcy10cmFuc2Zvcm06IHJvdGF0ZSgjeyRkZWdyZWVzfWRlZyk7XG4gICAgLW8tdHJhbnNmb3JtOiByb3RhdGUoI3skZGVncmVlc31kZWcpO1xuICAgIHRyYW5zZm9ybTogcm90YXRlKCN7JGRlZ3JlZXN9ZGVnKTtcbn1cblxuQG1peGluIHJvdGF0ZS1zY2FsZSgkZGVncmVlczogMCwgJHNpemVYOiAxLCAkc2l6ZVk6ICRzaXplWCkge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoI3skZGVncmVlc31kZWcpIHNjYWxlKCRzaXplWCwgJHNpemVZKTtcbiAgICAtbW96LXRyYW5zZm9ybTogcm90YXRlKCN7JGRlZ3JlZXN9ZGVnKSBzY2FsZSgkc2l6ZVgsICRzaXplWSk7XG4gICAgLW1zLXRyYW5zZm9ybTogcm90YXRlKCN7JGRlZ3JlZXN9ZGVnKSBzY2FsZSgkc2l6ZVgsICRzaXplWSk7XG4gICAgLW8tdHJhbnNmb3JtOiByb3RhdGUoI3skZGVncmVlc31kZWcpIHNjYWxlKCRzaXplWCwgJHNpemVZKTtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgjeyRkZWdyZWVzfWRlZykgc2NhbGUoJHNpemVYLCAkc2l6ZVkpO1xufSIsImh0bWwsYm9keSxpbnB1dCxidXR0b24ge1xuICAgIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogbm9uZTtcbiAgICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVMZWdpYmlsaXR5O1xufVxuXG5ib2R5LGgxLGgyLGgzLGg0LGg1LGg2LHVsLG9sLHAsaHIsZm9ybSB7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgYm9yZGVyOiBub25lO1xufVxuXG4vKiBIVE1MNSBkaXNwbGF5LXJvbGUgcmVzZXQgZm9yIG9sZGVyIGJyb3dzZXJzICovXG5hcnRpY2xlLCBhc2lkZSwgZGV0YWlscywgZmlnY2FwdGlvbiwgZmlndXJlLFxuZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgbWVudSwgbmF2LCBzZWN0aW9uIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbn1cblxuaHIgICAgICAgICAgeyBmbG9hdDogbGVmdDsgd2lkdGg6IDEwMCU7IGhlaWdodDogMXB4OyB9XG51bCxvbCAgICAgICB7IGxpc3Qtc3R5bGU6IG5vbmU7IH1cblxuLy90ZXh0IHNlbGVjdGlvblxuOjpzZWxlY3Rpb24geyBiYWNrZ3JvdW5kOiAkaHRtbHNlbGVjdGlvbmJhY2tncm91bmRjb2xvcjsgY29sb3I6ICRodG1sc2VsZWN0aW9uY29sb3I7IH1cbjo6LW1vei1zZWxlY3Rpb24geyBiYWNrZ3JvdW5kOiAkaHRtbHNlbGVjdGlvbmJhY2tncm91bmRjb2xvcjsgY29sb3I6ICRodG1sc2VsZWN0aW9uY29sb3I7IH1cblxuLy9pbnB1dHNcbmlucHV0IHsgd2lkdGg6IGF1dG87IH1cbmlucHV0W3R5cGU9XCJ0ZXh0XCJdLFxuaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdLFxuaW5wdXRbdHlwZT1cImVtYWlsXCJdLFxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXSxcbnRleHRhcmVhIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBmbG9hdDogbGVmdDtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbiAgICBib3JkZXI6IG5vbmU7XG5cbiAgICAvL1lvdSBjYW4gZWFzaWx5IHVzZSBib3JkZXIgd2l0aG91dCBtZXNzaW5nIHVwIHRoZSBsYXlvdXQgd2l0aCB0aGlzXG4gICAgQGluY2x1ZGUgYm9yZGVyLWJveCgpO1xufVxudGV4dGFyZWEgeyByZXNpemU6IHZlcnRpY2FsOyB9XG5pbnB1dDpmb2N1cywgdGV4dGFyZWE6Zm9jdXMsIHNlbGVjdDpmb2N1cyB7IG91dGxpbmU6IG5vbmU7IH1cblxuZmlndXJlIHtcbiAgICBwYWRkaW5nOiAwO1xuICAgIG1hcmdpbjogMDtcbn1cblxuZmllbGRzZXQge1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBwYWRkaW5nOiAwO1xuICAgIG91dGxpbmU6IDA7XG59XG5cbnRhYmxlIHtcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICAgIGJvcmRlci1zcGFjaW5nOiAwO1xufVxuXG4qOmJlZm9yZSwgKjphZnRlciwgKiB7XG4gICAgQGluY2x1ZGUgYm9yZGVyLWJveCgpO1xufVxuXG4iLCIkaHRtbHNlbGVjdGlvbmNvbG9yOiAjZmZmZmZmO1xuJGh0bWxzZWxlY3Rpb25iYWNrZ3JvdW5kY29sb3I6ICMwMDAwMDA7IiwiQG1peGluIGJhY2tmYWNlLXZpc2liaWxpdHkoJGJhY2tmYWNlLXZpc2liaWxpdHk6IGluaGVyaXQpIHtcbiAgICAtd2Via2l0LWJhY2tmYWNlLXZpc2liaWxpdHk6ICRiYWNrZmFjZS12aXNpYmlsaXR5O1xuICAgIC1tb3otYmFja2ZhY2UtdmlzaWJpbGl0eTogJGJhY2tmYWNlLXZpc2liaWxpdHk7XG4gICAgYmFja2ZhY2UtdmlzaWJpbGl0eTogJGJhY2tmYWNlLXZpc2liaWxpdHk7XG59XG5cbkBtaXhpbiBib3JkZXItYm94KCR2YXI6IHRydWUpIHtcbiAgICBAaWYgKCR2YXIpIHtcbiAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAgICAgLW1vei1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgfSBAZWxzZSB7XG4gICAgICAgIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAgICAgICAtbW96LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAgICAgICAtd2Via2l0LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAgIH1cbn1cblxuQG1peGluIGJvcmRlci1yYWRpdXMoJHJhZGl1czogMCwgJHBvc2l0aW9uOiBhbGwsICR0b3AtbGVmdDogJHJhZGl1cywgJHRvcC1yaWdodDogJHJhZGl1cywgJGJvdHRvbS1yaWdodDogJHJhZGl1cywgJGJvdHRvbS1sZWZ0OiAkcmFkaXVzKSB7XG4gICAgQGlmICRyYWRpdXMgPT0gJ2NpcmNsZScge1xuICAgICAgICBib3JkZXItcmFkaXVzOiAxMDAlO1xuICAgICAgICAtbW96LWJvcmRlci1yYWRpdXM6IDEwMCU7XG4gICAgICAgIC13ZWJraXQtYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgICB9IEBlbHNlIHtcbiAgICAgICAgQGlmICRwb3NpdGlvbiA9PSAnYWxsJyB7XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAkcmFkaXVzO1xuICAgICAgICAgICAgLW1vei1ib3JkZXItcmFkaXVzOiAkcmFkaXVzO1xuICAgICAgICAgICAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAkcmFkaXVzO1xuICAgICAgICB9XG4gICAgICAgIEBlbHNlIGlmICRwb3NpdGlvbiA9PSAndG9wJyB7XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAkcmFkaXVzICRyYWRpdXMgMCAwO1xuICAgICAgICAgICAgLW1vei1ib3JkZXItcmFkaXVzOiAkcmFkaXVzICRyYWRpdXMgMCAwO1xuICAgICAgICAgICAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAkcmFkaXVzICRyYWRpdXMgMCAwO1xuICAgICAgICB9XG4gICAgICAgIEBlbHNlIGlmICRwb3NpdGlvbiA9PSAnYm90dG9tJyB7XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAwIDAgJHJhZGl1cyAkcmFkaXVzO1xuICAgICAgICAgICAgLW1vei1ib3JkZXItcmFkaXVzOiAwIDAgJHJhZGl1cyAkcmFkaXVzO1xuICAgICAgICAgICAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAwIDAgJHJhZGl1cyAkcmFkaXVzO1xuICAgICAgICB9XG4gICAgICAgIEBlbHNlIGlmICRwb3NpdGlvbiA9PSAnbGVmdCcge1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogJHJhZGl1cyAwIDAgJHJhZGl1cztcbiAgICAgICAgICAgIC1tb3otYm9yZGVyLXJhZGl1czogJHJhZGl1cyAwIDAgJHJhZGl1cztcbiAgICAgICAgICAgIC13ZWJraXQtYm9yZGVyLXJhZGl1czogJHJhZGl1cyAwIDAgJHJhZGl1cztcbiAgICAgICAgfVxuICAgICAgICBAZWxzZSBpZiAkcG9zaXRpb24gPT0gJ3JpZ2h0JyB7XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAwICRyYWRpdXMgJHJhZGl1cyAwO1xuICAgICAgICAgICAgLW1vei1ib3JkZXItcmFkaXVzOiAwICRyYWRpdXMgJHJhZGl1cyAwO1xuICAgICAgICAgICAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAwICRyYWRpdXMgJHJhZGl1cyAwO1xuICAgICAgICB9XG4gICAgICAgIEBlbHNlIHtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6ICR0b3AtbGVmdCAkdG9wLXJpZ2h0ICRib3R0b20tcmlnaHQgJGJvdHRvbS1sZWZ0O1xuICAgICAgICAgICAgLW1vei1ib3JkZXItcmFkaXVzOiAkdG9wLWxlZnQgJHRvcC1yaWdodCAkYm90dG9tLXJpZ2h0ICRib3R0b20tbGVmdDtcbiAgICAgICAgICAgIC13ZWJraXQtYm9yZGVyLXJhZGl1czogJHRvcC1sZWZ0ICR0b3AtcmlnaHQgJGJvdHRvbS1yaWdodCAkYm90dG9tLWxlZnQ7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbkBtaXhpbiBib3gtc2hhZG93KCRjb2xvcjogdHJhbnNwYXJlbnQsICRoLXNoYWRvdzogMCwgJHYtc2hhZG93OiAwLCAkYmx1cjogMCwgJHNwcmVhZDogMCwgJHR5cGU6IG5vbmUpIHtcbiAgICBAaWYgJHR5cGUgPT0gXCJpbnNldFwiIHtcbiAgICAgICAgYm94LXNoYWRvdzogJGgtc2hhZG93ICR2LXNoYWRvdyAkYmx1ciAkc3ByZWFkICRjb2xvciBpbnNldDtcbiAgICAgICAgLW1vei1ib3gtc2hhZG93OiAkaC1zaGFkb3cgJHYtc2hhZG93ICRibHVyICRzcHJlYWQgJGNvbG9yIGluc2V0O1xuICAgICAgICAtd2Via2l0LWJveC1zaGFkb3c6ICRoLXNoYWRvdyAkdi1zaGFkb3cgJGJsdXIgJHNwcmVhZCAkY29sb3IgaW5zZXQ7XG4gICAgfSBAZWxzZSB7XG4gICAgICAgIGJveC1zaGFkb3c6ICRoLXNoYWRvdyAkdi1zaGFkb3cgJGJsdXIgJHNwcmVhZCAkY29sb3I7XG4gICAgICAgIC1tb3otYm94LXNoYWRvdzogJGgtc2hhZG93ICR2LXNoYWRvdyAkYmx1ciAkc3ByZWFkICRjb2xvcjtcbiAgICAgICAgLXdlYmtpdC1ib3gtc2hhZG93OiAkaC1zaGFkb3cgJHYtc2hhZG93ICRibHVyICRzcHJlYWQgJGNvbG9yO1xuICAgIH1cbn0iLCIvKlxuICogIFJlbW9kYWwgLSB2MS4xLjBcbiAqICBSZXNwb25zaXZlLCBsaWdodHdlaWdodCwgZmFzdCwgc3luY2hyb25pemVkIHdpdGggQ1NTIGFuaW1hdGlvbnMsIGZ1bGx5IGN1c3RvbWl6YWJsZSBtb2RhbCB3aW5kb3cgcGx1Z2luIHdpdGggZGVjbGFyYXRpdmUgY29uZmlndXJhdGlvbiBhbmQgaGFzaCB0cmFja2luZy5cbiAqICBodHRwOi8vdm9ka2FiZWFycy5naXRodWIuaW8vcmVtb2RhbC9cbiAqXG4gKiAgTWFkZSBieSBJbHlhIE1ha2Fyb3ZcbiAqICBVbmRlciBNSVQgTGljZW5zZVxuICovXG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICBSZW1vZGFsJ3MgbmVjZXNzYXJ5IHN0eWxlc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyogSGlkZSBzY3JvbGwgYmFyICovXG5cbmh0bWwucmVtb2RhbC1pcy1sb2NrZWQge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuXG4gIC1tcy10b3VjaC1hY3Rpb246IG5vbmU7XG4gIHRvdWNoLWFjdGlvbjogbm9uZTtcbn1cblxuLyogQW50aSBGT1VDICovXG5cbi5yZW1vZGFsLFxuW2RhdGEtcmVtb2RhbC1pZF0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKiBOZWNlc3Nhcnkgc3R5bGVzIG9mIHRoZSBvdmVybGF5ICovXG5cbi5yZW1vZGFsLW92ZXJsYXkge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHotaW5kZXg6IDk5OTk7XG4gIHRvcDogLTUwMDBweDtcbiAgcmlnaHQ6IC01MDAwcHg7XG4gIGJvdHRvbTogLTUwMDBweDtcbiAgbGVmdDogLTUwMDBweDtcblxuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKiBOZWNlc3Nhcnkgc3R5bGVzIG9mIHRoZSB3cmFwcGVyICovXG5cbi5yZW1vZGFsLXdyYXBwZXIge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHotaW5kZXg6IDEwMDAwO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG5cbiAgZGlzcGxheTogbm9uZTtcbiAgb3ZlcmZsb3c6IGF1dG87XG5cbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuXG4gIC13ZWJraXQtb3ZlcmZsb3ctc2Nyb2xsaW5nOiB0b3VjaDtcbn1cblxuLnJlbW9kYWwtd3JhcHBlcjphZnRlciB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcblxuICBoZWlnaHQ6IDEwMCU7XG4gIG1hcmdpbi1sZWZ0OiAtMC4wNWVtO1xuXG4gIGNvbnRlbnQ6IFwiXCI7XG59XG5cbi8qIEZpeCBpUGFkLCBpUGhvbmUgZ2xpdGNoZXMgKi9cblxuLnJlbW9kYWwtb3ZlcmxheSxcbi5yZW1vZGFsLXdyYXBwZXIge1xuICAtd2Via2l0LWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xufVxuXG4vKiBOZWNlc3Nhcnkgc3R5bGVzIG9mIHRoZSBtb2RhbCBkaWFsb2cgKi9cblxuLnJlbW9kYWwge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgb3V0bGluZTogbm9uZTtcblxuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICB0ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xufVxuXG4ucmVtb2RhbC1pcy1pbml0aWFsaXplZCB7XG4gIC8qIERpc2FibGUgQW50aS1GT1VDICovXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cbiIsIi8qXG4gKiAgUmVtb2RhbCAtIHYxLjEuMFxuICogIFJlc3BvbnNpdmUsIGxpZ2h0d2VpZ2h0LCBmYXN0LCBzeW5jaHJvbml6ZWQgd2l0aCBDU1MgYW5pbWF0aW9ucywgZnVsbHkgY3VzdG9taXphYmxlIG1vZGFsIHdpbmRvdyBwbHVnaW4gd2l0aCBkZWNsYXJhdGl2ZSBjb25maWd1cmF0aW9uIGFuZCBoYXNoIHRyYWNraW5nLlxuICogIGh0dHA6Ly92b2RrYWJlYXJzLmdpdGh1Yi5pby9yZW1vZGFsL1xuICpcbiAqICBNYWRlIGJ5IElseWEgTWFrYXJvdlxuICogIFVuZGVyIE1JVCBMaWNlbnNlXG4gKi9cblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgIFJlbW9kYWwncyBkZWZhdWx0IG1vYmlsZSBmaXJzdCB0aGVtZVxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyogRGVmYXVsdCB0aGVtZSBzdHlsZXMgZm9yIHRoZSBiYWNrZ3JvdW5kICovXG5cbi5yZW1vZGFsLWJnLnJlbW9kYWwtaXMtb3BlbmluZyxcbi5yZW1vZGFsLWJnLnJlbW9kYWwtaXMtb3BlbmVkIHtcbiAgLXdlYmtpdC1maWx0ZXI6IGJsdXIoM3B4KTtcbiAgZmlsdGVyOiBibHVyKDNweCk7XG59XG5cbi8qIERlZmF1bHQgdGhlbWUgc3R5bGVzIG9mIHRoZSBvdmVybGF5ICovXG5cbi5yZW1vZGFsLW92ZXJsYXkge1xuICBiYWNrZ3JvdW5kOiByZ2JhKDQzLCA0NiwgNTYsIDAuOSk7XG59XG5cbi5yZW1vZGFsLW92ZXJsYXkucmVtb2RhbC1pcy1vcGVuaW5nLFxuLnJlbW9kYWwtb3ZlcmxheS5yZW1vZGFsLWlzLWNsb3Npbmcge1xuICAtd2Via2l0LWFuaW1hdGlvbi1kdXJhdGlvbjogMC4zcztcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjNzO1xuICAtd2Via2l0LWFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzO1xuICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcbn1cblxuLnJlbW9kYWwtb3ZlcmxheS5yZW1vZGFsLWlzLW9wZW5pbmcge1xuICAtd2Via2l0LWFuaW1hdGlvbi1uYW1lOiByZW1vZGFsLW92ZXJsYXktb3BlbmluZy1rZXlmcmFtZXM7XG4gIGFuaW1hdGlvbi1uYW1lOiByZW1vZGFsLW92ZXJsYXktb3BlbmluZy1rZXlmcmFtZXM7XG59XG5cbi5yZW1vZGFsLW92ZXJsYXkucmVtb2RhbC1pcy1jbG9zaW5nIHtcbiAgLXdlYmtpdC1hbmltYXRpb24tbmFtZTogcmVtb2RhbC1vdmVybGF5LWNsb3Npbmcta2V5ZnJhbWVzO1xuICBhbmltYXRpb24tbmFtZTogcmVtb2RhbC1vdmVybGF5LWNsb3Npbmcta2V5ZnJhbWVzO1xufVxuXG4vKiBEZWZhdWx0IHRoZW1lIHN0eWxlcyBvZiB0aGUgd3JhcHBlciAqL1xuXG4ucmVtb2RhbC13cmFwcGVyIHtcbiAgcGFkZGluZzogMTBweCAxMHB4IDA7XG59XG5cbi8qIERlZmF1bHQgdGhlbWUgc3R5bGVzIG9mIHRoZSBtb2RhbCBkaWFsb2cgKi9cblxuLnJlbW9kYWwge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgcGFkZGluZzogMzVweDtcblxuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7XG5cbiAgY29sb3I6ICMyYjJlMzg7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG59XG5cbi5yZW1vZGFsLnJlbW9kYWwtaXMtb3BlbmluZyxcbi5yZW1vZGFsLnJlbW9kYWwtaXMtY2xvc2luZyB7XG4gIC13ZWJraXQtYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjNzO1xuICBhbmltYXRpb24tZHVyYXRpb246IDAuM3M7XG4gIC13ZWJraXQtYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XG4gIGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzO1xufVxuXG4ucmVtb2RhbC5yZW1vZGFsLWlzLW9wZW5pbmcge1xuICAtd2Via2l0LWFuaW1hdGlvbi1uYW1lOiByZW1vZGFsLW9wZW5pbmcta2V5ZnJhbWVzO1xuICBhbmltYXRpb24tbmFtZTogcmVtb2RhbC1vcGVuaW5nLWtleWZyYW1lcztcbn1cblxuLnJlbW9kYWwucmVtb2RhbC1pcy1jbG9zaW5nIHtcbiAgLXdlYmtpdC1hbmltYXRpb24tbmFtZTogcmVtb2RhbC1jbG9zaW5nLWtleWZyYW1lcztcbiAgYW5pbWF0aW9uLW5hbWU6IHJlbW9kYWwtY2xvc2luZy1rZXlmcmFtZXM7XG59XG5cbi8qIFZlcnRpY2FsIGFsaWduIG9mIHRoZSBtb2RhbCBkaWFsb2cgKi9cblxuLnJlbW9kYWwsXG4ucmVtb2RhbC13cmFwcGVyOmFmdGVyIHtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cblxuLyogQ2xvc2UgYnV0dG9uICovXG5cbi5yZW1vZGFsLWNsb3NlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG5cbiAgZGlzcGxheTogYmxvY2s7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuXG4gIHdpZHRoOiAzNXB4O1xuICBoZWlnaHQ6IDM1cHg7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcblxuICBjdXJzb3I6IHBvaW50ZXI7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogY29sb3IgMC4ycztcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4ycztcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXG4gIGNvbG9yOiAjOTU5NzljO1xuICBib3JkZXI6IDA7XG4gIG91dGxpbmU6IDA7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xufVxuXG4ucmVtb2RhbC1jbG9zZTpob3Zlcixcbi5yZW1vZGFsLWNsb3NlOmZvY3VzIHtcbiAgY29sb3I6ICMyYjJlMzg7XG59XG5cbi5yZW1vZGFsLWNsb3NlOmJlZm9yZSB7XG4gIGZvbnQtZmFtaWx5OiBBcmlhbCwgXCJIZWx2ZXRpY2EgQ1lcIiwgXCJOaW1idXMgU2FucyBMXCIsIHNhbnMtc2VyaWYgIWltcG9ydGFudDtcbiAgZm9udC1zaXplOiAyNXB4O1xuICBsaW5lLWhlaWdodDogMzVweDtcblxuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcblxuICBkaXNwbGF5OiBibG9jaztcblxuICB3aWR0aDogMzVweDtcblxuICBjb250ZW50OiBcIlxcMDBkN1wiO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi8qIERpYWxvZyBidXR0b25zICovXG5cbi5yZW1vZGFsLWNvbmZpcm0sXG4ucmVtb2RhbC1jYW5jZWwge1xuICBmb250OiBpbmhlcml0O1xuXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgb3ZlcmZsb3c6IHZpc2libGU7XG5cbiAgbWluLXdpZHRoOiAxMTBweDtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAxMnB4IDA7XG5cbiAgY3Vyc29yOiBwb2ludGVyO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGJhY2tncm91bmQgMC4ycztcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjJzO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcblxuICBib3JkZXI6IDA7XG4gIG91dGxpbmU6IDA7XG59XG5cbi5yZW1vZGFsLWNvbmZpcm0ge1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZDogIzgxYzc4NDtcbn1cblxuLnJlbW9kYWwtY29uZmlybTpob3Zlcixcbi5yZW1vZGFsLWNvbmZpcm06Zm9jdXMge1xuICBiYWNrZ3JvdW5kOiAjNjZiYjZhO1xufVxuXG4ucmVtb2RhbC1jYW5jZWwge1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZDogI2U1NzM3Mztcbn1cblxuLnJlbW9kYWwtY2FuY2VsOmhvdmVyLFxuLnJlbW9kYWwtY2FuY2VsOmZvY3VzIHtcbiAgYmFja2dyb3VuZDogI2VmNTM1MDtcbn1cblxuLyogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIGJvcmRlciBpbiBGaXJlZm94IDQrIGZvciB0aGUgYnV0dG9uIHRhZy4gKi9cblxuLnJlbW9kYWwtY29uZmlybTo6LW1vei1mb2N1cy1pbm5lcixcbi5yZW1vZGFsLWNhbmNlbDo6LW1vei1mb2N1cy1pbm5lcixcbi5yZW1vZGFsLWNsb3NlOjotbW96LWZvY3VzLWlubmVyIHtcbiAgcGFkZGluZzogMDtcblxuICBib3JkZXI6IDA7XG59XG5cbi8qIEtleWZyYW1lc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuQC13ZWJraXQta2V5ZnJhbWVzIHJlbW9kYWwtb3BlbmluZy1rZXlmcmFtZXMge1xuICBmcm9tIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMS4wNSk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjA1KTtcblxuICAgIG9wYWNpdHk6IDA7XG4gIH1cbiAgdG8ge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBub25lO1xuICAgIHRyYW5zZm9ybTogbm9uZTtcblxuICAgIG9wYWNpdHk6IDE7XG4gIH1cbn1cblxuQGtleWZyYW1lcyByZW1vZGFsLW9wZW5pbmcta2V5ZnJhbWVzIHtcbiAgZnJvbSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDEuMDUpO1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wNSk7XG5cbiAgICBvcGFjaXR5OiAwO1xuICB9XG4gIHRvIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogbm9uZTtcbiAgICB0cmFuc2Zvcm06IG5vbmU7XG5cbiAgICBvcGFjaXR5OiAxO1xuICB9XG59XG5cbkAtd2Via2l0LWtleWZyYW1lcyByZW1vZGFsLWNsb3Npbmcta2V5ZnJhbWVzIHtcbiAgZnJvbSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDEpO1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XG5cbiAgICBvcGFjaXR5OiAxO1xuICB9XG4gIHRvIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMC45NSk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjk1KTtcblxuICAgIG9wYWNpdHk6IDA7XG4gIH1cbn1cblxuQGtleWZyYW1lcyByZW1vZGFsLWNsb3Npbmcta2V5ZnJhbWVzIHtcbiAgZnJvbSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDEpO1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XG5cbiAgICBvcGFjaXR5OiAxO1xuICB9XG4gIHRvIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMC45NSk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjk1KTtcblxuICAgIG9wYWNpdHk6IDA7XG4gIH1cbn1cblxuQC13ZWJraXQta2V5ZnJhbWVzIHJlbW9kYWwtb3ZlcmxheS1vcGVuaW5nLWtleWZyYW1lcyB7XG4gIGZyb20ge1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbiAgdG8ge1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbn1cblxuQGtleWZyYW1lcyByZW1vZGFsLW92ZXJsYXktb3BlbmluZy1rZXlmcmFtZXMge1xuICBmcm9tIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG4gIHRvIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG59XG5cbkAtd2Via2l0LWtleWZyYW1lcyByZW1vZGFsLW92ZXJsYXktY2xvc2luZy1rZXlmcmFtZXMge1xuICBmcm9tIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG4gIHRvIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG59XG5cbkBrZXlmcmFtZXMgcmVtb2RhbC1vdmVybGF5LWNsb3Npbmcta2V5ZnJhbWVzIHtcbiAgZnJvbSB7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxuICB0byB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxufVxuXG4vKiBNZWRpYSBxdWVyaWVzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MXB4KSB7XG4gIC5yZW1vZGFsIHtcbiAgICBtYXgtd2lkdGg6IDcwMHB4O1xuICB9XG59XG5cbi8qIElFOFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLmx0LWllOSAucmVtb2RhbC1vdmVybGF5IHtcbiAgYmFja2dyb3VuZDogIzJiMmUzODtcbn1cblxuLmx0LWllOSAucmVtb2RhbCB7XG4gIHdpZHRoOiA3MDBweDtcbn1cbiIsIi8vIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xuLy8jIyBGT05UIFZBUklBQkxFUyAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXG4vLyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcblxuXG4vLyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcbi8vIyMgRk9OVCBGQUNFIEdFTkVSQVRPUiAjIyMjIyMjIyMjIyMjIyMjI1xuLy8jIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXG5cblxuLy8jIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXG4vLyMjIFNJWkVTICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcbi8vIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xuXG4udWJ1bnR1LWJ7XG4gICAgZm9udC1mYW1pbHk6XCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgICBmb250LXdlaWdodDogNzAwO1xufVxuLnVidW50dS1ye1xuICAgIGZvbnQtZmFtaWx5OlwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbn1cbi5yYWxlLWJ7XG4gICAgZm9udC1mYW1pbHk6XCJSYWxld2F5XCIsIHNhbnMtc2VyaWY7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cbi5yYWxlLXJ7XG4gICAgZm9udC1mYW1pbHk6XCJSYWxld2F5XCIsIHNhbnMtc2VyaWY7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbn0iLCIvLyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcbi8vIyMgRk9OVCBGQUNFIElDT05TICMjIyMjIyMjIyMjIyMjIyMjIyMjI1xuLy8jIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXG5cbkBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiAnRkktaWNvbnMnO1xuICAgIHNyYzogICAgdXJsKCcuLi9mb250cy9GSS1pY29ucy5lb3Q/NTE2a3Y2Jyk7XG4gICAgc3JjOiAgICB1cmwoJy4uL2ZvbnRzL0ZJLWljb25zLmVvdD81MTZrdjYjaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXG4gICAgdXJsKCcuLi9mb250cy9GSS1pY29ucy53b2ZmMj81MTZrdjYnKSBmb3JtYXQoJ3dvZmYyJyksXG4gICAgdXJsKCcuLi9mb250cy9GSS1pY29ucy50dGY/NTE2a3Y2JykgZm9ybWF0KCd0cnVldHlwZScpLFxuICAgIHVybCgnLi4vZm9udHMvRkktaWNvbnMud29mZj81MTZrdjYnKSBmb3JtYXQoJ3dvZmYnKSxcbiAgICB1cmwoJy4uL2ZvbnRzL0ZJLWljb25zLnN2Zz81MTZrdjYjRkktaWNvbnMnKSBmb3JtYXQoJ3N2ZycpO1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuXG5bY2xhc3NePVwiaWNvbi1cIl0sIFtjbGFzcyo9XCIgaWNvbi1cIl0ge1xuICAgIC8qIHVzZSAhaW1wb3J0YW50IHRvIHByZXZlbnQgaXNzdWVzIHdpdGggYnJvd3NlciBleHRlbnNpb25zIHRoYXQgY2hhbmdlIGZvbnRzICovXG4gICAgZm9udC1mYW1pbHk6ICdGSS1pY29ucycgIWltcG9ydGFudDtcbiAgICBzcGVhazogbm9uZTtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICBmb250LXZhcmlhbnQ6IG5vcm1hbDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbiAgICBsaW5lLWhlaWdodDogMTtcblxuICAgIC8qIEJldHRlciBGb250IFJlbmRlcmluZyA9PT09PT09PT09PSAqL1xuICAgIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICAgIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XG59XG5cbi5pY29uLWZiOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGU5MDBcIjtcbn1cbi5pY29uLWctcGx1czpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXFxlOTAxXCI7XG59XG4uaWNvbi10d2l0dGVyOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGU5MDJcIjtcbn1cblxuIiwiLyogQk9SREVSIFJBRElVUyAqL1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblx0Qm91bmRzXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblx0UmFuZ2UgZGVmaW5pdGlvbnNcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cdE1lZGlhIFF1ZXJ5IHJhbmdlIHRlbXBsYXRlc1xuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cdE1lZGlhIFF1ZXJpZXNcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKiBUUkFOU0ZPUk0gICovXG5odG1sLCBib2R5LCBpbnB1dCwgYnV0dG9uIHtcbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiBub25lO1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplTGVnaWJpbGl0eTsgfVxuXG5ib2R5LCBoMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCB1bCwgb2wsIHAsIGhyLCBmb3JtIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXI6IG5vbmU7IH1cblxuLyogSFRNTDUgZGlzcGxheS1yb2xlIHJlc2V0IGZvciBvbGRlciBicm93c2VycyAqL1xuYXJ0aWNsZSwgYXNpZGUsIGRldGFpbHMsIGZpZ2NhcHRpb24sIGZpZ3VyZSxcbmZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsIG1lbnUsIG5hdiwgc2VjdGlvbiB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbmhyIHtcbiAgZmxvYXQ6IGxlZnQ7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDFweDsgfVxuXG51bCwgb2wge1xuICBsaXN0LXN0eWxlOiBub25lOyB9XG5cbjo6c2VsZWN0aW9uIHtcbiAgYmFja2dyb3VuZDogIzAwMDAwMDtcbiAgY29sb3I6ICNmZmZmZmY7IH1cblxuOjotbW96LXNlbGVjdGlvbiB7XG4gIGJhY2tncm91bmQ6ICMwMDAwMDA7XG4gIGNvbG9yOiAjZmZmZmZmOyB9XG5cbmlucHV0IHtcbiAgd2lkdGg6IGF1dG87IH1cblxuaW5wdXRbdHlwZT1cInRleHRcIl0sXG5pbnB1dFt0eXBlPVwicGFzc3dvcmRcIl0sXG5pbnB1dFt0eXBlPVwiZW1haWxcIl0sXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdLFxudGV4dGFyZWEge1xuICB3aWR0aDogMTAwJTtcbiAgZmxvYXQ6IGxlZnQ7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiBub25lO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAtbW96LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuXG50ZXh0YXJlYSB7XG4gIHJlc2l6ZTogdmVydGljYWw7IH1cblxuaW5wdXQ6Zm9jdXMsIHRleHRhcmVhOmZvY3VzLCBzZWxlY3Q6Zm9jdXMge1xuICBvdXRsaW5lOiBub25lOyB9XG5cbmZpZ3VyZSB7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDsgfVxuXG5maWVsZHNldCB7XG4gIGJvcmRlcjogbm9uZTtcbiAgcGFkZGluZzogMDtcbiAgb3V0bGluZTogMDsgfVxuXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwOyB9XG5cbio6YmVmb3JlLCAqOmFmdGVyLCAqIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLW1vei1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cblxuLypcbiAqICBSZW1vZGFsIC0gdjEuMS4wXG4gKiAgUmVzcG9uc2l2ZSwgbGlnaHR3ZWlnaHQsIGZhc3QsIHN5bmNocm9uaXplZCB3aXRoIENTUyBhbmltYXRpb25zLCBmdWxseSBjdXN0b21pemFibGUgbW9kYWwgd2luZG93IHBsdWdpbiB3aXRoIGRlY2xhcmF0aXZlIGNvbmZpZ3VyYXRpb24gYW5kIGhhc2ggdHJhY2tpbmcuXG4gKiAgaHR0cDovL3ZvZGthYmVhcnMuZ2l0aHViLmlvL3JlbW9kYWwvXG4gKlxuICogIE1hZGUgYnkgSWx5YSBNYWthcm92XG4gKiAgVW5kZXIgTUlUIExpY2Vuc2VcbiAqL1xuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgIFJlbW9kYWwncyBuZWNlc3Nhcnkgc3R5bGVzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyogSGlkZSBzY3JvbGwgYmFyICovXG5odG1sLnJlbW9kYWwtaXMtbG9ja2VkIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgLW1zLXRvdWNoLWFjdGlvbjogbm9uZTtcbiAgdG91Y2gtYWN0aW9uOiBub25lOyB9XG5cbi8qIEFudGkgRk9VQyAqL1xuLnJlbW9kYWwsXG5bZGF0YS1yZW1vZGFsLWlkXSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLyogTmVjZXNzYXJ5IHN0eWxlcyBvZiB0aGUgb3ZlcmxheSAqL1xuLnJlbW9kYWwtb3ZlcmxheSB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgei1pbmRleDogOTk5OTtcbiAgdG9wOiAtNTAwMHB4O1xuICByaWdodDogLTUwMDBweDtcbiAgYm90dG9tOiAtNTAwMHB4O1xuICBsZWZ0OiAtNTAwMHB4O1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi8qIE5lY2Vzc2FyeSBzdHlsZXMgb2YgdGhlIHdyYXBwZXIgKi9cbi5yZW1vZGFsLXdyYXBwZXIge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHotaW5kZXg6IDEwMDAwO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIG92ZXJmbG93OiBhdXRvO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIC13ZWJraXQtb3ZlcmZsb3ctc2Nyb2xsaW5nOiB0b3VjaDsgfVxuXG4ucmVtb2RhbC13cmFwcGVyOmFmdGVyIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBoZWlnaHQ6IDEwMCU7XG4gIG1hcmdpbi1sZWZ0OiAtMC4wNWVtO1xuICBjb250ZW50OiBcIlwiOyB9XG5cbi8qIEZpeCBpUGFkLCBpUGhvbmUgZ2xpdGNoZXMgKi9cbi5yZW1vZGFsLW92ZXJsYXksXG4ucmVtb2RhbC13cmFwcGVyIHtcbiAgLXdlYmtpdC1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjsgfVxuXG4vKiBOZWNlc3Nhcnkgc3R5bGVzIG9mIHRoZSBtb2RhbCBkaWFsb2cgKi9cbi5yZW1vZGFsIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdXRsaW5lOiBub25lO1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICB0ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyB9XG5cbi5yZW1vZGFsLWlzLWluaXRpYWxpemVkIHtcbiAgLyogRGlzYWJsZSBBbnRpLUZPVUMgKi9cbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG5cbi8qXG4gKiAgUmVtb2RhbCAtIHYxLjEuMFxuICogIFJlc3BvbnNpdmUsIGxpZ2h0d2VpZ2h0LCBmYXN0LCBzeW5jaHJvbml6ZWQgd2l0aCBDU1MgYW5pbWF0aW9ucywgZnVsbHkgY3VzdG9taXphYmxlIG1vZGFsIHdpbmRvdyBwbHVnaW4gd2l0aCBkZWNsYXJhdGl2ZSBjb25maWd1cmF0aW9uIGFuZCBoYXNoIHRyYWNraW5nLlxuICogIGh0dHA6Ly92b2RrYWJlYXJzLmdpdGh1Yi5pby9yZW1vZGFsL1xuICpcbiAqICBNYWRlIGJ5IElseWEgTWFrYXJvdlxuICogIFVuZGVyIE1JVCBMaWNlbnNlXG4gKi9cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICBSZW1vZGFsJ3MgZGVmYXVsdCBtb2JpbGUgZmlyc3QgdGhlbWVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKiBEZWZhdWx0IHRoZW1lIHN0eWxlcyBmb3IgdGhlIGJhY2tncm91bmQgKi9cbi5yZW1vZGFsLWJnLnJlbW9kYWwtaXMtb3BlbmluZyxcbi5yZW1vZGFsLWJnLnJlbW9kYWwtaXMtb3BlbmVkIHtcbiAgLXdlYmtpdC1maWx0ZXI6IGJsdXIoM3B4KTtcbiAgZmlsdGVyOiBibHVyKDNweCk7IH1cblxuLyogRGVmYXVsdCB0aGVtZSBzdHlsZXMgb2YgdGhlIG92ZXJsYXkgKi9cbi5yZW1vZGFsLW92ZXJsYXkge1xuICBiYWNrZ3JvdW5kOiByZ2JhKDQzLCA0NiwgNTYsIDAuOSk7IH1cblxuLnJlbW9kYWwtb3ZlcmxheS5yZW1vZGFsLWlzLW9wZW5pbmcsXG4ucmVtb2RhbC1vdmVybGF5LnJlbW9kYWwtaXMtY2xvc2luZyB7XG4gIC13ZWJraXQtYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjNzO1xuICBhbmltYXRpb24tZHVyYXRpb246IDAuM3M7XG4gIC13ZWJraXQtYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XG4gIGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzOyB9XG5cbi5yZW1vZGFsLW92ZXJsYXkucmVtb2RhbC1pcy1vcGVuaW5nIHtcbiAgLXdlYmtpdC1hbmltYXRpb24tbmFtZTogcmVtb2RhbC1vdmVybGF5LW9wZW5pbmcta2V5ZnJhbWVzO1xuICBhbmltYXRpb24tbmFtZTogcmVtb2RhbC1vdmVybGF5LW9wZW5pbmcta2V5ZnJhbWVzOyB9XG5cbi5yZW1vZGFsLW92ZXJsYXkucmVtb2RhbC1pcy1jbG9zaW5nIHtcbiAgLXdlYmtpdC1hbmltYXRpb24tbmFtZTogcmVtb2RhbC1vdmVybGF5LWNsb3Npbmcta2V5ZnJhbWVzO1xuICBhbmltYXRpb24tbmFtZTogcmVtb2RhbC1vdmVybGF5LWNsb3Npbmcta2V5ZnJhbWVzOyB9XG5cbi8qIERlZmF1bHQgdGhlbWUgc3R5bGVzIG9mIHRoZSB3cmFwcGVyICovXG4ucmVtb2RhbC13cmFwcGVyIHtcbiAgcGFkZGluZzogMTBweCAxMHB4IDA7IH1cblxuLyogRGVmYXVsdCB0aGVtZSBzdHlsZXMgb2YgdGhlIG1vZGFsIGRpYWxvZyAqL1xuLnJlbW9kYWwge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgcGFkZGluZzogMzVweDtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xuICBjb2xvcjogIzJiMmUzODtcbiAgYmFja2dyb3VuZDogI2ZmZjsgfVxuXG4ucmVtb2RhbC5yZW1vZGFsLWlzLW9wZW5pbmcsXG4ucmVtb2RhbC5yZW1vZGFsLWlzLWNsb3Npbmcge1xuICAtd2Via2l0LWFuaW1hdGlvbi1kdXJhdGlvbjogMC4zcztcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjNzO1xuICAtd2Via2l0LWFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzO1xuICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkczsgfVxuXG4ucmVtb2RhbC5yZW1vZGFsLWlzLW9wZW5pbmcge1xuICAtd2Via2l0LWFuaW1hdGlvbi1uYW1lOiByZW1vZGFsLW9wZW5pbmcta2V5ZnJhbWVzO1xuICBhbmltYXRpb24tbmFtZTogcmVtb2RhbC1vcGVuaW5nLWtleWZyYW1lczsgfVxuXG4ucmVtb2RhbC5yZW1vZGFsLWlzLWNsb3Npbmcge1xuICAtd2Via2l0LWFuaW1hdGlvbi1uYW1lOiByZW1vZGFsLWNsb3Npbmcta2V5ZnJhbWVzO1xuICBhbmltYXRpb24tbmFtZTogcmVtb2RhbC1jbG9zaW5nLWtleWZyYW1lczsgfVxuXG4vKiBWZXJ0aWNhbCBhbGlnbiBvZiB0aGUgbW9kYWwgZGlhbG9nICovXG4ucmVtb2RhbCxcbi5yZW1vZGFsLXdyYXBwZXI6YWZ0ZXIge1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG5cbi8qIENsb3NlIGJ1dHRvbiAqL1xuLnJlbW9kYWwtY2xvc2Uge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICB3aWR0aDogMzVweDtcbiAgaGVpZ2h0OiAzNXB4O1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBjb2xvciAwLjJzO1xuICB0cmFuc2l0aW9uOiBjb2xvciAwLjJzO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiAjOTU5NzljO1xuICBib3JkZXI6IDA7XG4gIG91dGxpbmU6IDA7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50OyB9XG5cbi5yZW1vZGFsLWNsb3NlOmhvdmVyLFxuLnJlbW9kYWwtY2xvc2U6Zm9jdXMge1xuICBjb2xvcjogIzJiMmUzODsgfVxuXG4ucmVtb2RhbC1jbG9zZTpiZWZvcmUge1xuICBmb250LWZhbWlseTogQXJpYWwsIFwiSGVsdmV0aWNhIENZXCIsIFwiTmltYnVzIFNhbnMgTFwiLCBzYW5zLXNlcmlmICFpbXBvcnRhbnQ7XG4gIGZvbnQtc2l6ZTogMjVweDtcbiAgbGluZS1oZWlnaHQ6IDM1cHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDM1cHg7XG4gIGNvbnRlbnQ6IFwiXFwwMGQ3XCI7XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuXG4vKiBEaWFsb2cgYnV0dG9ucyAqL1xuLnJlbW9kYWwtY29uZmlybSxcbi5yZW1vZGFsLWNhbmNlbCB7XG4gIGZvbnQ6IGluaGVyaXQ7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIG1pbi13aWR0aDogMTEwcHg7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMTJweCAwO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjJzO1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDAuMnM7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBib3JkZXI6IDA7XG4gIG91dGxpbmU6IDA7IH1cblxuLnJlbW9kYWwtY29uZmlybSB7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kOiAjODFjNzg0OyB9XG5cbi5yZW1vZGFsLWNvbmZpcm06aG92ZXIsXG4ucmVtb2RhbC1jb25maXJtOmZvY3VzIHtcbiAgYmFja2dyb3VuZDogIzY2YmI2YTsgfVxuXG4ucmVtb2RhbC1jYW5jZWwge1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZDogI2U1NzM3MzsgfVxuXG4ucmVtb2RhbC1jYW5jZWw6aG92ZXIsXG4ucmVtb2RhbC1jYW5jZWw6Zm9jdXMge1xuICBiYWNrZ3JvdW5kOiAjZWY1MzUwOyB9XG5cbi8qIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBib3JkZXIgaW4gRmlyZWZveCA0KyBmb3IgdGhlIGJ1dHRvbiB0YWcuICovXG4ucmVtb2RhbC1jb25maXJtOjotbW96LWZvY3VzLWlubmVyLFxuLnJlbW9kYWwtY2FuY2VsOjotbW96LWZvY3VzLWlubmVyLFxuLnJlbW9kYWwtY2xvc2U6Oi1tb3otZm9jdXMtaW5uZXIge1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXI6IDA7IH1cblxuLyogS2V5ZnJhbWVzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuQC13ZWJraXQta2V5ZnJhbWVzIHJlbW9kYWwtb3BlbmluZy1rZXlmcmFtZXMge1xuICBmcm9tIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMS4wNSk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjA1KTtcbiAgICBvcGFjaXR5OiAwOyB9XG4gIHRvIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogbm9uZTtcbiAgICB0cmFuc2Zvcm06IG5vbmU7XG4gICAgb3BhY2l0eTogMTsgfSB9XG5cbkBrZXlmcmFtZXMgcmVtb2RhbC1vcGVuaW5nLWtleWZyYW1lcyB7XG4gIGZyb20ge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxLjA1KTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMDUpO1xuICAgIG9wYWNpdHk6IDA7IH1cbiAgdG8ge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBub25lO1xuICAgIHRyYW5zZm9ybTogbm9uZTtcbiAgICBvcGFjaXR5OiAxOyB9IH1cblxuQC13ZWJraXQta2V5ZnJhbWVzIHJlbW9kYWwtY2xvc2luZy1rZXlmcmFtZXMge1xuICBmcm9tIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMSk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgICBvcGFjaXR5OiAxOyB9XG4gIHRvIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMC45NSk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjk1KTtcbiAgICBvcGFjaXR5OiAwOyB9IH1cblxuQGtleWZyYW1lcyByZW1vZGFsLWNsb3Npbmcta2V5ZnJhbWVzIHtcbiAgZnJvbSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDEpO1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XG4gICAgb3BhY2l0eTogMTsgfVxuICB0byB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDAuOTUpO1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC45NSk7XG4gICAgb3BhY2l0eTogMDsgfSB9XG5cbkAtd2Via2l0LWtleWZyYW1lcyByZW1vZGFsLW92ZXJsYXktb3BlbmluZy1rZXlmcmFtZXMge1xuICBmcm9tIHtcbiAgICBvcGFjaXR5OiAwOyB9XG4gIHRvIHtcbiAgICBvcGFjaXR5OiAxOyB9IH1cblxuQGtleWZyYW1lcyByZW1vZGFsLW92ZXJsYXktb3BlbmluZy1rZXlmcmFtZXMge1xuICBmcm9tIHtcbiAgICBvcGFjaXR5OiAwOyB9XG4gIHRvIHtcbiAgICBvcGFjaXR5OiAxOyB9IH1cblxuQC13ZWJraXQta2V5ZnJhbWVzIHJlbW9kYWwtb3ZlcmxheS1jbG9zaW5nLWtleWZyYW1lcyB7XG4gIGZyb20ge1xuICAgIG9wYWNpdHk6IDE7IH1cbiAgdG8ge1xuICAgIG9wYWNpdHk6IDA7IH0gfVxuXG5Aa2V5ZnJhbWVzIHJlbW9kYWwtb3ZlcmxheS1jbG9zaW5nLWtleWZyYW1lcyB7XG4gIGZyb20ge1xuICAgIG9wYWNpdHk6IDE7IH1cbiAgdG8ge1xuICAgIG9wYWNpdHk6IDA7IH0gfVxuXG4vKiBNZWRpYSBxdWVyaWVzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDFweCkge1xuICAucmVtb2RhbCB7XG4gICAgbWF4LXdpZHRoOiA3MDBweDsgfSB9XG5cbi8qIElFOFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi5sdC1pZTkgLnJlbW9kYWwtb3ZlcmxheSB7XG4gIGJhY2tncm91bmQ6ICMyYjJlMzg7IH1cblxuLmx0LWllOSAucmVtb2RhbCB7XG4gIHdpZHRoOiA3MDBweDsgfVxuXG4udWJ1bnR1LWIsIC5mb3JtLWl0ZW0gbGFiZWwsIC5wcm9kdWN0c19fdGl0bGUsIC5wcm9kdWN0c19fYnV5IC5wcm9kdWN0c19fcHJpY2UsIC5zaWdudXBfX2RhdGEgaDIsIC5wLWJpZGRpbmcgLnRhYmxlc19fcG9zaXRpb24sIC5wLWJpZGRpbmcgLnRhYmxlc19fcHJpY2UsIC5ob3Jpel9fdGl0bGUge1xuICBmb250LWZhbWlseTogXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDcwMDsgfVxuXG4udWJ1bnR1LXIsIC5wLWJpZGRpbmcgLnJlc2V0X19hbmNob3IsIC50aGFuay15b3VfX3RpdGxlIHtcbiAgZm9udC1mYW1pbHk6IFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7IH1cblxuLnJhbGUtYiB7XG4gIGZvbnQtZmFtaWx5OiBcIlJhbGV3YXlcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDcwMDsgfVxuXG4ucmFsZS1yLCAuYnRuLCAucHJvZHVjdHNfX2Rlc2MsIC5zaWdudXBfX2RhdGEgcCwgLnAtaG9tZSAuY292ZXIgaDEsIC5wLWJpZGRpbmcgLmNvdmVyIGgxLCAucC1iaWRkaW5nIC50YWJsZXNfX3ByaWNpbmcsIC5wLWJpZGRpbmcgLnRhYmxlc19fb3JkZXIsIC50aGFuay15b3VfX3RleHQsIC5yZW1vZGFsLWNvbmZpcm0sIC5ob3Jpel9fY29udGFjdCBwLCAuaG9yaXpfX2NvbnRhY3QgYSwgLmhvcml6X190eXBlLCAuaG9yaXpfX2Rlc2Mge1xuICBmb250LWZhbWlseTogXCJSYWxld2F5XCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnRkktaWNvbnMnO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL0ZJLWljb25zLmVvdD81MTZrdjZcIik7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvRkktaWNvbnMuZW90PzUxNmt2NiNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgdXJsKFwiLi4vZm9udHMvRkktaWNvbnMud29mZjI/NTE2a3Y2XCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250cy9GSS1pY29ucy50dGY/NTE2a3Y2XCIpIGZvcm1hdChcInRydWV0eXBlXCIpLCB1cmwoXCIuLi9mb250cy9GSS1pY29ucy53b2ZmPzUxNmt2NlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIuLi9mb250cy9GSS1pY29ucy5zdmc/NTE2a3Y2I0ZJLWljb25zXCIpIGZvcm1hdChcInN2Z1wiKTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsOyB9XG5cbltjbGFzc149XCJpY29uLVwiXSwgW2NsYXNzKj1cIiBpY29uLVwiXSB7XG4gIC8qIHVzZSAhaW1wb3J0YW50IHRvIHByZXZlbnQgaXNzdWVzIHdpdGggYnJvd3NlciBleHRlbnNpb25zIHRoYXQgY2hhbmdlIGZvbnRzICovXG4gIGZvbnQtZmFtaWx5OiAnRkktaWNvbnMnICFpbXBvcnRhbnQ7XG4gIHNwZWFrOiBub25lO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtdmFyaWFudDogbm9ybWFsO1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIC8qIEJldHRlciBGb250IFJlbmRlcmluZyA9PT09PT09PT09PSAqL1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTsgfVxuXG4uaWNvbi1mYjpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZTkwMFwiOyB9XG5cbi5pY29uLWctcGx1czpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZTkwMVwiOyB9XG5cbi5pY29uLXR3aXR0ZXI6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGU5MDJcIjsgfVxuXG4ucC1mdWxsIHtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgd2lkdGg6IDEwMCU7IH1cblxuLmZvcm0taXRlbSB7XG4gIG1hcmdpbi10b3A6IDMwcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47IH1cbiAgLmZvcm0taXRlbSBsYWJlbCB7XG4gICAgZm9udC1zaXplOiAxLjJyZW07XG4gICAgY29sb3I6ICNiN2I3Yjc7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuXG4uYnRuIHtcbiAgZm9udC1zaXplOiAxLjRyZW07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIHBhZGRpbmc6IDEwcHggNDBweDsgfVxuICAuYnRuLXJlZCB7XG4gICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgY29sb3I6ICNkZTM4Mzg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2RlMzgzODtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cbiAgLmJ0bi1ibGFjayB7XG4gICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgY29sb3I6IGJsYWNrO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcbiAgICBmbG9hdDogcmlnaHQ7IH1cblxuLm5hdmlnYXRpb24ge1xuICB3aWR0aDogOTEuNjY2NjclO1xuICBmbG9hdDogbGVmdDtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbiAgcGFkZGluZy1sZWZ0OiAwO1xuICBwYWRkaW5nLXJpZ2h0OiAwO1xuICBmbG9hdDogbm9uZTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IDMwcHg7XG4gIGhlaWdodDogNTBweDsgfVxuXG4ucHJvZHVjdHMge1xuICB3aWR0aDogOTEuNjY2NjclO1xuICBmbG9hdDogbGVmdDtcbiAgZmxvYXQ6IG5vbmU7XG4gIG1hcmdpbjogODBweCBhdXRvO1xuICBwYWRkaW5nLWxlZnQ6IDA7XG4gIHBhZGRpbmctcmlnaHQ6IDA7IH1cbiAgLnByb2R1Y3RzX19pdGVtIHtcbiAgICB3aWR0aDogMzMuMzMzMzMlO1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIHBhZGRpbmc6IDIuMDgzMzMlO1xuICAgIGhlaWdodDogNDAwcHg7IH1cbiAgICAucHJvZHVjdHNfX2l0ZW06bnRoLWNoaWxkKDNuICsgMSkge1xuICAgICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgICBtYXJnaW4tcmlnaHQ6IC0xMDAlO1xuICAgICAgY2xlYXI6IGJvdGg7IH1cbiAgICAucHJvZHVjdHNfX2l0ZW06bnRoLWNoaWxkKDNuICsgMikge1xuICAgICAgbWFyZ2luLWxlZnQ6IDMzLjMzMzMzJTtcbiAgICAgIG1hcmdpbi1yaWdodDogLTEwMCU7XG4gICAgICBjbGVhcjogbm9uZTsgfVxuICAgIC5wcm9kdWN0c19faXRlbTpudGgtY2hpbGQoM24gKyAzKSB7XG4gICAgICBtYXJnaW4tbGVmdDogNjYuNjY2NjclO1xuICAgICAgbWFyZ2luLXJpZ2h0OiAtMTAwJTtcbiAgICAgIGNsZWFyOiBub25lOyB9XG4gIC5wcm9kdWN0c19faW1hZ2Uge1xuICAgIGhlaWdodDogMjAwcHg7XG4gICAgd2lkdGg6IDEwMCU7IH1cbiAgLnByb2R1Y3RzX19zb3VyY2Uge1xuICAgIGhlaWdodDogMTAwJTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBvYmplY3QtZml0OiBjb3ZlcjsgfVxuICAucHJvZHVjdHNfX3RpdGxlIHtcbiAgICBmb250LXNpemU6IDJyZW07XG4gICAgbGluZS1oZWlnaHQ6IDEuMjU7XG4gICAgbWFyZ2luLXRvcDogMjBweDsgfVxuICAucHJvZHVjdHNfX2Rlc2Mge1xuICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjY2NjY3O1xuICAgIG1hcmdpbjogMTVweCAwIDEwcHg7XG4gICAgaGVpZ2h0OiAyMHB4O1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpczsgfVxuICAucHJvZHVjdHNfX2J1eSB7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgICAucHJvZHVjdHNfX2J1eSAucHJvZHVjdHNfX3ByaWNlIHtcbiAgICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgdG9wOiA1MCU7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7IH1cbiAgICAucHJvZHVjdHNfX2J1eSAuYnRuIHtcbiAgICAgIGZsb2F0OiByaWdodDsgfVxuXG4uY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvOyB9XG4gIC5jb250YWluZXI6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiIFwiO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGNsZWFyOiBib3RoOyB9XG5cbmlucHV0W3R5cGU9XCJ0ZXh0XCJdLCBpbnB1dFt0eXBlPVwicGFzc3dvcmRcIl0ge1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RkZGRkZCAhaW1wb3J0YW50O1xuICBoZWlnaHQ6IDI1cHg7IH1cblxuaHRtbCB7XG4gIGZvbnQtc2l6ZTogMTBweDsgfVxuXG4uc2lnbnVwIHtcbiAgYmFja2dyb3VuZDogIzM3MzczNztcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC5zaWdudXBfX2NvbnRhaW5lciB7XG4gICAgd2lkdGg6IDUwJTtcbiAgICBmbG9hdDogbGVmdDtcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgdG9wOiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICAgIGhlaWdodDogNjAwcHg7XG4gICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuICAuc2lnbnVwX19kYXRhIHtcbiAgICB3aWR0aDogNjMuNjM2MzYlO1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIHBhZGRpbmc6IDEzLjYzNjM2JSA5LjA5MDkxJSA5LjA5MDkxJTsgfVxuICAgIC5zaWdudXBfX2RhdGEgaDIge1xuICAgICAgZm9udC1zaXplOiAzcmVtOyB9XG4gICAgLnNpZ251cF9fZGF0YSBwIHtcbiAgICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xuICAgICAgbWFyZ2luLXRvcDogMTJweDsgfVxuICAuc2lnbnVwX19zdWJtaXQ6aG92ZXIge1xuICAgIGN1cnNvcjogcG9pbnRlcjsgfVxuICAuc2lnbnVwX19jb3ZlciB7XG4gICAgd2lkdGg6IDM2LjM2MzY0JTtcbiAgICBmbG9hdDogbGVmdDsgfVxuICAuc2lnbnVwX19zb3VyY2Uge1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBvYmplY3QtZml0OiBjb3ZlcjsgfVxuICAuc2lnbnVwX19pbm5lciB7XG4gICAgbWFyZ2luLXRvcDogMjBweDsgfVxuXG4ucC1ob21lIHtcbiAgYmFja2dyb3VuZDogd2hpdGU7IH1cbiAgLnAtaG9tZSAuY292ZXIge1xuICAgIHdpZHRoOiA5MS42NjY2NyU7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICAgIHBhZGRpbmctbGVmdDogMDtcbiAgICBwYWRkaW5nLXJpZ2h0OiAwO1xuICAgIGZsb2F0OiBub25lO1xuICAgIGxlZnQ6IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gMTAwcHgpO1xuICAgIHRvcDogNTBweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vLi4vc3RhdGljL2ltZy9jb3Zlci5qcGdcIik7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0OyB9XG4gICAgLnAtaG9tZSAuY292ZXIgaDEge1xuICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgd2lkdGg6IDQ1LjgzMzMzJTtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgZm9udC1zaXplOiA0LjVyZW07XG4gICAgICBsaW5lLWhlaWdodDogMS4yMjIyMjtcbiAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICBsZXR0ZXItc3BhY2luZzogMC4ycmVtO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgYm90dG9tOiAxMi41JTtcbiAgICAgIGxlZnQ6IDEyLjUlOyB9XG5cbi5wLWJpZGRpbmcgLmNvdmVyIHtcbiAgd2lkdGg6IDkxLjY2NjY3JTtcbiAgZmxvYXQ6IGxlZnQ7XG4gIGZsb2F0OiBub25lO1xuICBtYXJnaW46IDAgYXV0bzsgfVxuICAucC1iaWRkaW5nIC5jb3ZlciBoMSB7XG4gICAgY29sb3I6ICM4MTgxODE7XG4gICAgZm9udC1zaXplOiA1LjVyZW07XG4gICAgbGluZS1oZWlnaHQ6IDEuMTQ1NDU7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI0RERERERDsgfVxuXG4ucC1iaWRkaW5nIC50YWJsZXMge1xuICB3aWR0aDogOTEuNjY2NjclO1xuICBmbG9hdDogbGVmdDtcbiAgZmxvYXQ6IG5vbmU7XG4gIG1hcmdpbjogMCBhdXRvOyB9XG4gIC5wLWJpZGRpbmcgLnRhYmxlc19fbGlzdCB7XG4gICAgbWFyZ2luLXRvcDogNTBweDtcbiAgICBjbGVhcjogYm90aDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHBhZGRpbmc6IDVweCA1cHg7IH1cbiAgICAucC1iaWRkaW5nIC50YWJsZXNfX2xpc3QtLW9mZnNldCB7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDQwcHg7IH1cbiAgLnAtYmlkZGluZyAudGFibGVzX19pdGVtIHtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgYm94LXNoYWRvdzogMHB4IDBweCA1cHggMHB4IHJnYmEoMCwgMCwgMCwgMC4yNCk7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBtYXJnaW4tbGVmdDogMTBweDsgfVxuICAgIC5wLWJpZGRpbmcgLnRhYmxlc19faXRlbSBhIHtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuICAgIC5wLWJpZGRpbmcgLnRhYmxlc19faXRlbTpmaXJzdC1vZi10eXBlIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAwOyB9XG4gIC5wLWJpZGRpbmcgLnRhYmxlc19fYW5jaG9yIHtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4zczsgfVxuICAucC1iaWRkaW5nIC50YWJsZXNfX2FuY2hvci0tYWN0aXZlIC50YWJsZXNfX29yZGVyIHtcbiAgICBiYWNrZ3JvdW5kOiAjNjBiNzNlOyB9XG4gIC5wLWJpZGRpbmcgLnRhYmxlc19fYW5jaG9yLS1vY2N1cGllZCAudGFibGVzX19vcmRlciB7XG4gICAgYmFja2dyb3VuZDogI2QwMzkzZjsgfVxuICAucC1iaWRkaW5nIC50YWJsZXNfX2l0ZW0tdG9wIHtcbiAgICB3aWR0aDogOS4wOTA5MSU7XG4gICAgZmxvYXQ6IGxlZnQ7IH1cbiAgLnAtYmlkZGluZyAudGFibGVzX19pbmZvIHtcbiAgICBwYWRkaW5nOiAxMHB4OyB9XG4gIC5wLWJpZGRpbmcgLnRhYmxlc19fcG9zaXRpb24ge1xuICAgIGNvbG9yOiAjMzczNzM3O1xuICAgIGZvbnQtc2l6ZTogMS4xcmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjE4MTgyO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgbWFyZ2luLWJvdHRvbTogNXB4OyB9XG4gIC5wLWJpZGRpbmcgLnRhYmxlc19fcHJpY2luZyB7XG4gICAgY29sb3I6ICM4MTgxODE7XG4gICAgZm9udC1zaXplOiAxLjFyZW07XG4gICAgbGluZS1oZWlnaHQ6IDEuMTgxODI7XG4gICAgbWFyZ2luLWJvdHRvbTogMnB4OyB9XG4gIC5wLWJpZGRpbmcgLnRhYmxlc19fcHJpY2Uge1xuICAgIGNvbG9yOiAjZDAzOTNmO1xuICAgIGZvbnQtc2l6ZTogMS4xcmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjE4MTgyOyB9XG4gIC5wLWJpZGRpbmcgLnRhYmxlc19fb3JkZXIge1xuICAgIGJveC1zaGFkb3c6IDBweCAwcHggNXB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMjQpO1xuICAgIGJhY2tncm91bmQ6ICMzNzM3Mzc7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBwYWRkaW5nOiA3cHggMDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIHRyYW5zaXRpb246IGFsbCAwLjNzOyB9XG5cbi5wLWJpZGRpbmcgLm9mZmVyIHtcbiAgd2lkdGg6IDM3LjUlO1xuICBmbG9hdDogbGVmdDtcbiAgZmxvYXQ6IG5vbmU7XG4gIG1hcmdpbjogNDBweCBhdXRvIDA7XG4gIG92ZXJmbG93OiBoaWRkZW47IH1cbiAgLnAtYmlkZGluZyAub2ZmZXJfX2Zvcm0ge1xuICAgIG92ZXJmbG93OiBoaWRkZW47IH1cbiAgLnAtYmlkZGluZyAub2ZmZXJfX2lucHV0IHtcbiAgICB3aWR0aDogNTcuMTQyODYlO1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGRkZGQ7XG4gICAgcGFkZGluZzogNXB4IDIwcHg7XG4gICAgaGVpZ2h0OiAzOHB4OyB9XG4gIC5wLWJpZGRpbmcgLm9mZmVyX19zdWJtaXQge1xuICAgIHdpZHRoOiAyOC41NzE0MyU7XG4gICAgZmxvYXQ6IGxlZnQ7IH1cbiAgICAucC1iaWRkaW5nIC5vZmZlcl9fc3VibWl0OmhvdmVyIHtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjsgfVxuXG4ucC1iaWRkaW5nIC5yZXNldCB7XG4gIHdpZHRoOiA5MS42NjY2NyU7XG4gIGZsb2F0OiBsZWZ0O1xuICBmbG9hdDogbm9uZTtcbiAgbWFyZ2luOiAwIGF1dG87IH1cbiAgLnAtYmlkZGluZyAucmVzZXRfX2lubmVyIHtcbiAgICBmbG9hdDogcmlnaHQ7XG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDsgfVxuICAucC1iaWRkaW5nIC5yZXNldF9fYW5jaG9yIHtcbiAgICBjb2xvcjogIzgxODE4MTtcbiAgICBmb250LXNpemU6IDEuNHJlbTtcbiAgICBsaW5lLWhlaWdodDogMTsgfVxuXG4udGhhbmsteW91X190aXRsZSB7XG4gIGNvbG9yOiAjMzczNzM3O1xuICBmb250LXNpemU6IDIuNHJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNDU4MzM7IH1cblxuLnRoYW5rLXlvdV9fdGV4dCB7XG4gIGNvbG9yOiAjODE4MTgxO1xuICBmb250LXNpemU6IDEuM3JlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMzg0NjI7IH1cblxuLnJlbW9kYWwtY29uZmlybSB7XG4gIGZvbnQtc2l6ZTogMS4zcmVtO1xuICBsaW5lLWhlaWdodDogMS4zODQ2MjsgfVxuXG4uc2VhcmNoIHtcbiAgd2lkdGg6IDI1JTtcbiAgZmxvYXQ6IGxlZnQ7XG4gIGZsb2F0OiByaWdodDsgfVxuICAuc2VhcmNoIC5zZWFyY2hfX2lucHV0IHtcbiAgICB3aWR0aDogNjYuNjY2NjclO1xuICAgIGZsb2F0OiBsZWZ0OyB9XG4gIC5zZWFyY2hfX3N1Ym1pdCB7XG4gICAgZm9udC1zaXplOiAxLjFyZW07XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBwYWRkaW5nOiA1cHggMTVweDtcbiAgICB3aWR0aDogMzMuMzMzMzMlO1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIGZsb2F0OiByaWdodDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZGRkZGRkO1xuICAgIGNvbG9yOiAjODE4MTgxOyB9XG4gICAgLnNlYXJjaF9fc3VibWl0OmhvdmVyIHtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjsgfVxuXG4uaG9yaXoge1xuICB3aWR0aDogOTEuNjY2NjclO1xuICBmbG9hdDogbGVmdDtcbiAgZmxvYXQ6IG5vbmU7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBtYXJnaW4tdG9wOiA2MHB4O1xuICBwYWRkaW5nLWJvdHRvbTogNDBweDsgfVxuICAuaG9yaXogLmJ0bi1yZWQge1xuICAgIGNvbG9yOiAjZGUzODM4ICFpbXBvcnRhbnQ7IH1cbiAgLmhvcml6X19idG4ge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IDVweCAwO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4OyB9XG4gIC5ob3JpeiAuZmlsdGVyIHtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIG1hcmdpbi1yaWdodDogMjBweDsgfVxuICAuaG9yaXpfX2l0ZW0ge1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGRkZGRkO1xuICAgIHBhZGRpbmc6IDE1cHggMTBweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBvdmVyZmxvdzogaGlkZGVuOyB9XG4gICAgLmhvcml6X19pdGVtOmZpcnN0LW9mLXR5cGUge1xuICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNkZGRkZGQ7IH1cbiAgLmhvcml6X19pbWFnZSB7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgd2lkdGg6IDEzLjYzNjM2JTtcbiAgICBmbG9hdDogbGVmdDtcbiAgICBvdmVyZmxvdzogaGlkZGVuOyB9XG4gIC5ob3Jpel9fc291cmNlIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgb2JqZWN0LWZpdDogY292ZXI7IH1cbiAgLmhvcml6X19pbmZvIHtcbiAgICBtYXJnaW4tbGVmdDogOS4wOTA5MSU7XG4gICAgd2lkdGg6IDUwJTtcbiAgICBmbG9hdDogbGVmdDsgfVxuICAuaG9yaXpfX2NvbnRhY3Qge1xuICAgIHdpZHRoOiA5LjA5MDkxJTtcbiAgICBmbG9hdDogbGVmdDtcbiAgICBmbG9hdDogcmlnaHQ7XG4gICAgdGV4dC1hbGlnbjogbGVmdDsgfVxuICAgIC5ob3Jpel9fY29udGFjdCBwIHtcbiAgICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xuICAgICAgbGluZS1oZWlnaHQ6IDI7IH1cbiAgICAuaG9yaXpfX2NvbnRhY3QgYSB7XG4gICAgICBmb250LXNpemU6IDEuMnJlbTtcbiAgICAgIGxpbmUtaGVpZ2h0OiAyO1xuICAgICAgY29sb3I6ICM4MTgxODE7IH1cbiAgLmhvcml6X190eXBlIHtcbiAgICBmb250LXNpemU6IDEuMXJlbTtcbiAgICBsaW5lLWhlaWdodDogMS4xODE4MjtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGNvbG9yOiAjODE4MTgxOyB9XG4gIC5ob3Jpel9fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMS40cmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjE0Mjg2O1xuICAgIGNvbG9yOiAjZTgzMjNiO1xuICAgIG1hcmdpbi10b3A6IDhweDsgfVxuICAuaG9yaXpfX2Rlc2Mge1xuICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjU7XG4gICAgY29sb3I6ICMzNzM3Mzc7XG4gICAgbWFyZ2luLXRvcDogMTBweDsgfVxuICAuaG9yaXogLmxvYWQtbW9yZSB7XG4gICAgd2lkdGg6IDIyLjcyNzI3JTtcbiAgICBmbG9hdDogbGVmdDtcbiAgICBmbG9hdDogbm9uZTtcbiAgICBtYXJnaW46IDIwcHggYXV0byAwO1xuICAgIG92ZXJmbG93OiBoaWRkZW47IH1cbiIsIi5wLWZ1bGx7XG4gICAgaGVpZ2h0OjEwMHZoO1xuICAgIHdpZHRoOjEwMCU7XG59XG4uZm9ybS1pdGVte1xuICAgIG1hcmdpbi10b3A6IDMwcHg7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBsYWJlbHtcbiAgICAgICAgQGV4dGVuZCAudWJ1bnR1LWI7XG4gICAgICAgIGZvbnQtc2l6ZToxLjJyZW07XG4gICAgICAgIGNvbG9yOiNiN2I3Yjc7XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgfVxufVxuLmJ0bntcbiAgICBAZXh0ZW5kIC5yYWxlLXI7XG4gICAgZm9udC1zaXplOjEuNHJlbTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIHBhZGRpbmc6IDEwcHggNDBweDtcbiAgICAmLXJlZHtcbiAgICAgICAgYmFja2dyb3VuZDp3aGl0ZTtcbiAgICAgICAgY29sb3I6I2RlMzgzODtcbiAgICAgICAgYm9yZGVyOjFweCBzb2xpZCAjZGUzODM4O1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgfVxuICAgICYtYmxhY2t7XG4gICAgICAgIGJhY2tncm91bmQ6d2hpdGU7XG4gICAgICAgIGNvbG9yOmJsYWNrO1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgIGJvcmRlcjoxcHggc29saWQgYmxhY2s7XG4gICAgICAgIGZsb2F0OnJpZ2h0O1xuICAgIH1cbn1cbi5uYXZpZ2F0aW9ue1xuICAgIEBpbmNsdWRlIHNwYW4oMjIgb2YgMjQpO1xuICAgIG1hcmdpbi1sZWZ0OmF1dG87XG4gICAgbWFyZ2luLXJpZ2h0OmF1dG87XG4gICAgcGFkZGluZy1sZWZ0OjA7XG4gICAgcGFkZGluZy1yaWdodDowO1xuICAgIGZsb2F0Om5vbmU7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdG9wOjMwcHg7XG4gICAgaGVpZ2h0OjUwcHg7XG59XG4ucHJvZHVjdHN7XG4gICAgQGluY2x1ZGUgc3BhbigyMiBvZiAyNCk7XG4gICAgZmxvYXQ6bm9uZTtcbiAgICBtYXJnaW46ODBweCBhdXRvO1xuICAgIHBhZGRpbmctbGVmdDowO1xuICAgIHBhZGRpbmctcmlnaHQ6MDtcbiAgICAmX19pdGVte1xuICAgICAgICBAaW5jbHVkZSBnYWxsZXJ5KDggb2YgMjQpO1xuICAgICAgICBwYWRkaW5nOnNwYW4oMS8yIG9mIDI0KTtcbiAgICAgICAgaGVpZ2h0OiA0MDBweDtcbiAgICB9XG4gICAgJl9faW1hZ2V7XG4gICAgICAgIGhlaWdodDoyMDBweDtcbiAgICAgICAgd2lkdGg6MTAwJTtcbiAgICB9XG4gICAgJl9fc291cmNle1xuICAgICAgICBoZWlnaHQ6MTAwJTtcbiAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgfVxuICAgICZfX3RpdGxle1xuICAgICAgICBAZXh0ZW5kIC51YnVudHUtYjtcbiAgICAgICAgQGluY2x1ZGUgZm9udC1zaXplKDJyZW0sIDIuNXJlbSk7XG4gICAgICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gICAgfVxuICAgICZfX2Rlc2N7XG4gICAgICAgIEBleHRlbmQgLnJhbGUtcjtcbiAgICAgICAgQGluY2x1ZGUgZm9udC1zaXplKDEuMnJlbSwgMnJlbSk7XG4gICAgICAgIG1hcmdpbjogMTVweCAwIDEwcHg7XG4gICAgICAgIGhlaWdodDogMjBweDtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICAgICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgfVxuICAgICZfX2J1eXtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAucHJvZHVjdHNfX3ByaWNle1xuICAgICAgICAgICAgQGV4dGVuZCAudWJ1bnR1LWI7XG4gICAgICAgICAgICBAaW5jbHVkZSBmb250LXNpemUoMnJlbSwgMnJlbSk7XG4gICAgICAgICAgICBmbG9hdDpsZWZ0O1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgbGVmdDowO1xuICAgICAgICAgICAgdG9wOjUwJTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgICAgICAgfVxuICAgICAgICAuYnRue1xuICAgICAgICAgICAgZmxvYXQ6cmlnaHQ7XG4gICAgICAgIH1cbiAgICB9XG59IiwiLy8gcmVtIFN1cHBvcnRcbi8vID09PT09PT09PT09XG5cbi8vIHJlbVxuLy8gLS0tXG4vLyBDaGVjayBmb3IgYW4gZXhpc3Rpbmcgc3VwcG9ydCBtaXhpbiwgb3Igb3V0cHV0IGRpcmVjdGx5LlxuLy8gLSAkcHJvcCAgOiA8Y3NzIHByb3BlcnR5PlxuLy8gLSAkdmFsICAgOiA8Y3NzIHZhbHVlPlxuQG1peGluIHN1c3ktcmVtKFxuICAkcHJvcCxcbiAgJHZhbFxuKSB7XG4gICRfcmVxczogKFxuICAgIHZhcmlhYmxlOiByaHl0aG0tdW5pdCByZW0td2l0aC1weC1mYWxsYmFjayxcbiAgICBtaXhpbjogcmVtLFxuICApO1xuICBAaWYgc3VzeS1zdXBwb3J0KHJlbSwgJF9yZXFzLCAkd2FybjogZmFsc2UpIGFuZCAkcmh5dGhtLXVuaXQgPT0gcmVtIHtcbiAgICBAaW5jbHVkZSByZW0oJHByb3AsICR2YWwpO1xuICB9IEBlbHNlIHtcbiAgICAjeyRwcm9wfTogJHZhbDtcbiAgfVxufVxuIiwiLy8gU3BhbiBTeW50YXhcbi8vID09PT09PT09PT09XG5cbi8vIFNwYW4gW21peGluXVxuLy8gLS0tLS0tLS0tLS0tXG4vLyBTZXQgYSBzcGFubmluZyBlbGVtZW50IHVzaW5nIHNob3J0aGFuZCBzeW50YXguXG4vLyAtICRzcGFuICA6IDxzcGFuPlxuQG1peGluIHNwYW4oXG4gICRzcGFuXG4pIHtcbiAgJGluc3BlY3Q6ICRzcGFuO1xuICAkc3BhbjogcGFyc2Utc3Bhbigkc3Bhbik7XG4gICRvdXRwdXQ6IHNwYW4tbWF0aCgkc3Bhbik7XG4gICRuZXN0aW5nOiBzdXN5LWdldChzcGFuLCAkc3Bhbik7XG4gICRjbGVhcjogc3VzeS1nZXQoY2xlYXIsICRzcGFuKTtcblxuICAkYm94OiBzdXN5LWdldChib3gtc2l6aW5nLCAkc3Bhbik7XG4gICRjb250ZW50LWJveDogaWYoc3VzeS1nZXQoZ2xvYmFsLWJveC1zaXppbmcpICE9ICdib3JkZXItYm94JywgdHJ1ZSwgZmFsc2UpO1xuICAkYm94OiAkYm94IG9yIGlmKGlzLWluc2lkZSgkc3BhbikgYW5kICRjb250ZW50LWJveCwgYm9yZGVyLWJveCwgbnVsbCk7XG5cbiAgQGlmICRjbGVhciA9PSBicmVhayB7XG4gICAgQGluY2x1ZGUgYnJlYWs7XG4gIH0gQGVsc2UgaWYgJGNsZWFyID09IG5vYnJlYWsge1xuICAgIEBpbmNsdWRlIG5vYnJlYWs7XG4gIH1cblxuICBAaW5jbHVkZSBzdXN5LWluc3BlY3Qoc3BhbiwgJGluc3BlY3QpO1xuICBAaW5jbHVkZSBvdXRwdXQoKGJveC1zaXppbmc6ICRib3gpKTtcbiAgQGluY2x1ZGUgZmxvYXQtc3Bhbi1vdXRwdXQoJG91dHB1dC4uLik7XG5cbiAgQGlmIHZhbGlkLWNvbHVtbnMoJG5lc3RpbmcsIHNpbGVudCkge1xuICAgIEBpbmNsdWRlIG5lc3RlZCgkc3BhbikgeyBAY29udGVudDsgfVxuICB9IEBlbHNlIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG4vLyBTcGFuIFtmdW5jdGlvbl1cbi8vIC0tLS0tLS0tLS0tLS0tLVxuLy8gUmV0dXJuIHRoZSB3aWR0aCBvZiBhIHNwYW4uXG4vLyAtICRzcGFuICA6IDxzcGFuPlxuQGZ1bmN0aW9uIHNwYW4oXG4gICRzcGFuXG4pIHtcbiAgQHJldHVybiBnZXQtc3Bhbi13aWR0aCgkc3Bhbik7XG59XG5cbi8vIFNwYW4gTWF0aFxuLy8gLS0tLS0tLS0tXG4vLyBHZXQgYWxsIHRoZSBzcGFuIHJlc3VsdHMuXG4vLyAtICRzcGFuOiA8bWFwPlxuQGZ1bmN0aW9uIHNwYW4tbWF0aChcbiAgJHNwYW5cbikge1xuICAkbmVzdCAgICAgICAgICAgICA6IGlmKHN1c3ktZ2V0KHJvbGUsICRzcGFuKSA9PSBuZXN0LCB0cnVlLCBmYWxzZSk7XG4gICRzcGxpdC1uZXN0ICAgICAgIDogaWYoaXMtc3BsaXQoJHNwYW4pIGFuZCAkbmVzdCwgdHJ1ZSwgZmFsc2UpO1xuICAkZWRnZSAgICAgICAgICAgICA6IGdldC1lZGdlKCRzcGFuKTtcbiAgJGxvY2F0aW9uICAgICAgICAgOiBnZXQtbG9jYXRpb24oJHNwYW4pO1xuXG4gICRmbG9hdCAgICAgICAgICAgIDogZnJvbTtcbiAgJHBhZGRpbmctYmVmb3JlICAgOiBudWxsO1xuICAkcGFkZGluZy1hZnRlciAgICA6IG51bGw7XG4gICRtYXJnaW4tYmVmb3JlICAgIDogbnVsbDtcbiAgJG1hcmdpbi1hZnRlciAgICAgOiBudWxsO1xuXG4gIC8vIGNhbGN1bGF0ZSB3aWR0aHNcbiAgJHNwcmVhZDogaW5kZXgobWFwLXZhbHVlcygkc3BhbiksIHNwcmVhZCk7XG4gICRzcGFuOiBpZigkc3BsaXQtbmVzdCBhbmQgbm90KCRzcHJlYWQpLCBtYXAtbWVyZ2UoJHNwYW4sIChzcHJlYWQ6IHdpZGUpKSwgJHNwYW4pO1xuICAkd2lkdGg6IGdldC1zcGFuLXdpZHRoKCRzcGFuKTtcbiAgJGd1dHRlcnM6IGdldC1ndXR0ZXJzKCRzcGFuKTtcblxuICAvLyBhcHBseSBndXR0ZXJzXG4gIEBpZiBpcy1pbnNpZGUoJHNwYW4pIHtcbiAgICBAaWYgbm90KHN1c3ktZ2V0KHJvbGUsICRzcGFuKSkge1xuICAgICAgJHBhZGRpbmctYmVmb3JlOiBtYXAtZ2V0KCRndXR0ZXJzLCBiZWZvcmUpO1xuICAgICAgJHBhZGRpbmctYWZ0ZXI6IG1hcC1nZXQoJGd1dHRlcnMsIGFmdGVyKTtcbiAgICB9XG4gIH0gQGVsc2Uge1xuICAgIEBpZiBub3QoJHNwbGl0LW5lc3QpIHtcbiAgICAgICRtYXJnaW4tYmVmb3JlOiBtYXAtZ2V0KCRndXR0ZXJzLCBiZWZvcmUpO1xuICAgICAgJG1hcmdpbi1hZnRlcjogbWFwLWdldCgkZ3V0dGVycywgYWZ0ZXIpO1xuICAgIH1cbiAgfVxuXG4gIC8vIHNwZWNpYWwgbWFyZ2luIGhhbmRsaW5nXG4gIEBpZiBzdXN5LWdldChvdXRwdXQsICRzcGFuKSA9PSBpc29sYXRlIGFuZCAkbG9jYXRpb24ge1xuICAgICRtYXJnaW4tYmVmb3JlOiBnZXQtaXNvbGF0aW9uKCRzcGFuKTtcbiAgICAkbWFyZ2luLWFmdGVyOiAtMTAwJTtcbiAgfSBAZWxzZSBpZiAkZWRnZSB7XG4gICAgJGlzLXNwbGl0OiBpcy1zcGxpdCgkc3Bhbik7XG4gICAgJHBvczogc3VzeS1nZXQoZ3V0dGVyLXBvc2l0aW9uLCAkc3Bhbik7XG5cbiAgICBAaWYgJGVkZ2UgPT0gbGFzdCB7XG4gICAgICAkZmxvYXQ6IHN1c3ktZ2V0KGxhc3QtZmxvdywgJHNwYW4pO1xuICAgIH1cblxuICAgIEBpZiBub3QoJGlzLXNwbGl0KSB7XG4gICAgICBAaWYgJGVkZ2UgPT0gZnVsbCBvciAoJGVkZ2UgPT0gZmlyc3QgYW5kICRwb3MgPT0gYmVmb3JlKSB7XG4gICAgICAgICRtYXJnaW4tYmVmb3JlOiAwO1xuICAgICAgfVxuICAgICAgQGlmICRlZGdlID09IGZ1bGwgb3IgKCRlZGdlID09IGxhc3QgYW5kICRwb3MgPT0gYWZ0ZXIpIHtcbiAgICAgICAgJG1hcmdpbi1hZnRlcjogMDtcbiAgICAgIH1cbiAgICB9XG5cbiAgfVxuXG4gIEByZXR1cm4gKFxuICAgIHdpZHRoICAgICAgICAgICA6ICR3aWR0aCxcbiAgICBmbG9hdCAgICAgICAgICAgOiAkZmxvYXQsXG4gICAgbWFyZ2luLWJlZm9yZSAgIDogJG1hcmdpbi1iZWZvcmUsXG4gICAgbWFyZ2luLWFmdGVyICAgIDogJG1hcmdpbi1hZnRlcixcbiAgICBwYWRkaW5nLWJlZm9yZSAgOiAkcGFkZGluZy1iZWZvcmUsXG4gICAgcGFkZGluZy1hZnRlciAgIDogJHBhZGRpbmctYWZ0ZXIsXG4gICAgZmxvdyAgICAgICAgICAgIDogc3VzeS1nZXQoZmxvdywgJHNwYW4pLFxuICApO1xufVxuXG4vLyBHZXQgU3BhbiBXaWR0aFxuLy8gLS0tLS0tLS0tLS0tLS1cbi8vIFJldHVybiBzcGFuIHdpZHRoLlxuLy8gLSAkc3BhbjogPG1hcD5cbkBmdW5jdGlvbiBnZXQtc3Bhbi13aWR0aChcbiAgJHNwYW5cbikge1xuICAkc3BhbiAgICAgOiBwYXJzZS1zcGFuKCRzcGFuKTtcblxuICAkbiAgICAgICAgOiBzdXN5LWdldChzcGFuLCAkc3Bhbik7XG4gICRsb2NhdGlvbiA6IGdldC1sb2NhdGlvbigkc3Bhbik7XG4gICRjb2x1bW5zICA6IHN1c3ktZ2V0KGNvbHVtbnMsICRzcGFuKTtcbiAgJGd1dHRlcnMgIDogc3VzeS1nZXQoZ3V0dGVycywgJHNwYW4pO1xuICAkc3ByZWFkICAgOiBzdXN5LWdldChzcHJlYWQsICRzcGFuKTtcblxuICAkY29udGV4dCAgOiBudWxsO1xuICAkc3Bhbi1zdW0gOiBudWxsO1xuICAkd2lkdGggICAgOiBudWxsO1xuXG4gIEBpZiAkbiA9PSAnZnVsbCcge1xuICAgICRwb3M6IHN1c3ktZ2V0KGd1dHRlci1wb3NpdGlvbiwgJHNwYW4pO1xuICAgICRyb2xlOiBzdXN5LWdldChyb2xlLCAkc3Bhbik7XG4gICAgJG46IGlmKCRwb3MgPT0gc3BsaXQgYW5kICRyb2xlICE9IG5lc3QsIHN1c3ktY291bnQoJGNvbHVtbnMpLCAxMDAlKTtcbiAgfVxuXG4gIEBpZiB0eXBlLW9mKCRuKSAhPSBudW1iZXIge1xuICAgIEB3YXJuIFwiKCN7dHlwZS1vZigkbil9KSAjeyRufSBpcyBub3QgYSB2YWxpZCBzcGFuLlwiO1xuICB9IEBlbHNlIGlmIHVuaXRsZXNzKCRuKSB7XG4gICAgJGNvbnRleHQ6IHN1c3ktc3VtKCRjb2x1bW5zLCAkZ3V0dGVycywgaWYoaXMtc3BsaXQoJHNwYW4pLCB3aWRlLCBuYXJyb3cpKTtcbiAgICAkc3ByZWFkOiBpZihpcy1pbnNpZGUoJHNwYW4pLCAkc3ByZWFkIG9yIHdpZGUsICRzcHJlYWQpO1xuICAgICRzcGFuLXN1bTogc3VzeSgkbiwgJGxvY2F0aW9uLCAkY29sdW1ucywgJGd1dHRlcnMsICRzcHJlYWQpO1xuXG4gICAgJF9tYXRoOiBzdXN5LWdldChtYXRoLCAkc3Bhbik7XG4gICAgJF9jb2x1bW4td2lkdGg6IHN1c3ktZ2V0KGNvbHVtbi13aWR0aCwgJHNwYW4pO1xuICAgIEBpZiAkX21hdGggPT0gc3RhdGljIHtcbiAgICAgICR3aWR0aDogJHNwYW4tc3VtICogdmFsaWQtY29sdW1uLW1hdGgoJF9tYXRoLCAkX2NvbHVtbi13aWR0aCk7XG4gICAgfSBAZWxzZSB7XG4gICAgICAkd2lkdGg6IHBlcmNlbnRhZ2UoJHNwYW4tc3VtIC8gJGNvbnRleHQpO1xuICAgIH1cbiAgfSBAZWxzZSB7XG4gICAgJHdpZHRoOiAkbjtcbiAgfVxuXG4gIEByZXR1cm4gJHdpZHRoO1xufVxuIiwiLy8gRGlyZWN0aW9uIEhlbHBlcnNcbi8vID09PT09PT09PT09PT09PT09XG5cbi8vIFN1c3kgRmxvdyBEZWZhdWx0c1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAtIFBSSVZBVEVcbkBpbmNsdWRlIHN1c3ktZGVmYXVsdHMoKFxuICBmbG93OiBsdHIsXG4pKTtcblxuLy8gR2V0IERpcmVjdGlvblxuLy8gLS0tLS0tLS0tLS0tLVxuLy8gUmV0dXJuIHRoZSAnZnJvbScgb3IgJ3RvJyBkaXJlY3Rpb24gb2YgYSBsdHIgb3IgcnRsIGZsb3cuXG4vLyAtIFskZmxvd10gIDogbHRyIHwgcnRsXG4vLyAtIFska2V5XSAgIDogZnJvbSB8IHRvXG5AZnVuY3Rpb24gZ2V0LWRpcmVjdGlvbihcbiAgJGZsb3c6IG1hcC1nZXQoJHN1c3ktZGVmYXVsdHMsIGZsb3cpLFxuICAka2V5OiBmcm9tXG4pIHtcbiAgJHJldHVybjogaWYoJGZsb3cgPT0gcnRsLCAoZnJvbTogcmlnaHQsIHRvOiBsZWZ0KSwgKGZyb206IGxlZnQsIHRvOiByaWdodCkpO1xuICBAcmV0dXJuIG1hcC1nZXQoJHJldHVybiwgJGtleSk7XG59XG5cbi8vIFRvXG4vLyAtLVxuLy8gUmV0dXJuIHRoZSAndG8nIGRpcmVjdGlvbiBvZiBhIGZsb3dcbi8vIC0gWyRmbG93XSAgOiBsdHIgfCBydGxcbkBmdW5jdGlvbiB0byhcbiAgJGZsb3c6IG1hcC1nZXQoJHN1c3ktZGVmYXVsdHMsIGZsb3cpXG4pIHtcbiAgQHJldHVybiBnZXQtZGlyZWN0aW9uKCRmbG93LCB0byk7XG59XG5cbi8vIEZyb21cbi8vIC0tLS1cbi8vIFJldHVybiB0aGUgJ2Zyb20nIGRpcmVjdGlvbiBvZiBhIGZsb3dcbi8vIC0gWyRmbG93XSAgOiBsdHIgfCBydGxcbkBmdW5jdGlvbiBmcm9tKFxuICAkZmxvdzogbWFwLWdldCgkc3VzeS1kZWZhdWx0cywgZmxvdylcbikge1xuICBAcmV0dXJuIGdldC1kaXJlY3Rpb24oJGZsb3csIGZyb20pO1xufVxuIiwiLy8gSXNvbGF0aW9uIFN5bnRheFxuLy8gPT09PT09PT09PT09PT09PVxuXG5cbi8vIElzb2xhdGUgW01peGluXVxuLy8gLS0tLS0tLS0tLS0tLS0tXG4vLyBTZXQgaXNvbGF0aW9uIGFzIGFuIG92ZXJyaWRlLlxuLy8gLSAkbG9jYXRpb246IDxzcGFuPlxuQG1peGluIGlzb2xhdGUoXG4gICRpc29sYXRlOiAxXG4pIHtcbiAgJGluc3BlY3Q6ICRpc29sYXRlO1xuXG4gICRvdXRwdXQ6IChcbiAgICBwdXNoOiBpc29sYXRlKCRpc29sYXRlKSxcbiAgICBmbG93OiBzdXN5LWdldChmbG93LCAkaXNvbGF0ZSksXG4gICk7XG5cbiAgQGluY2x1ZGUgc3VzeS1pbnNwZWN0KGlzb2xhdGUsICRpbnNwZWN0KTtcbiAgQGluY2x1ZGUgaXNvbGF0ZS1vdXRwdXQoJG91dHB1dC4uLik7XG59XG5cblxuLy8gSXNvbGF0ZSBbZnVuY3Rpb25dXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFJldHVybiBhbiBpc29sYXRpb24gb2Zmc2V0IHdpZHRoLlxuLy8gLSAkbG9jYXRpb246IDxzcGFuPlxuQGZ1bmN0aW9uIGlzb2xhdGUoXG4gICRpc29sYXRlOiAxXG4pIHtcbiAgJGlzb2xhdGU6IHBhcnNlLXNwYW4oJGlzb2xhdGUpO1xuICAkaXNvbGF0aW9uOiBzdXN5LWdldChzcGFuLCAkaXNvbGF0ZSk7XG5cbiAgQGlmICRpc29sYXRpb24gYW5kIG5vdChnZXQtbG9jYXRpb24oJGlzb2xhdGUpKSB7XG4gICAgJG5ldzogKFxuICAgICAgc3BhbjogbnVsbCxcbiAgICAgIGxvY2F0aW9uOiAkaXNvbGF0aW9uLFxuICAgICk7XG4gICAgJGlzb2xhdGU6IG1hcC1tZXJnZSgkaXNvbGF0ZSwgJG5ldyk7XG4gIH1cblxuICBAcmV0dXJuIGdldC1pc29sYXRpb24oJGlzb2xhdGUpO1xufVxuXG5cbi8vIEdldCBJc29sYXRpb25cbi8vIC0tLS0tLS0tLS0tLS1cbi8vIFJldHVybiB0aGUgaXNvbGF0aW9uIG9mZnNldCB3aWR0aFxuLy8gLSAkaW5wdXQ6IDxtYXA+XG5AZnVuY3Rpb24gZ2V0LWlzb2xhdGlvbihcbiAgJGlucHV0XG4pIHtcbiAgJGxvY2F0aW9uICAgOiBnZXQtbG9jYXRpb24oJGlucHV0KTtcbiAgJGNvbHVtbnMgICAgOiBzdXN5LWdldChjb2x1bW5zLCAkaW5wdXQpO1xuICAkd2lkdGggICAgICA6IG51bGw7XG5cbiAgQGlmIHR5cGUtb2YoJGxvY2F0aW9uKSA9PSBudW1iZXIgYW5kIG5vdCh1bml0bGVzcygkbG9jYXRpb24pKSB7XG4gICAgJHdpZHRoOiAkbG9jYXRpb247XG4gIH0gQGVsc2UgaWYgJGxvY2F0aW9uIHtcbiAgICAkcHVzaDogJGxvY2F0aW9uIC0gMTtcbiAgICBAaWYgJHB1c2ggPiAwIHtcbiAgICAgICRwdXNoOiBtYXAtbWVyZ2UoJGlucHV0LCAoXG4gICAgICAgIHNwYW46ICRwdXNoLFxuICAgICAgICBsb2NhdGlvbjogMSxcbiAgICAgICAgc3ByZWFkOiB3aWRlLFxuICAgICAgKSk7XG4gICAgICAkd2lkdGg6IGdldC1zcGFuLXdpZHRoKCRwdXNoKTtcbiAgICB9XG4gIH1cblxuICBAaWYgc3VzeS1nZXQoZ3V0dGVyLXBvc2l0aW9uLCAkaW5wdXQpID09IHNwbGl0XG4gICAgICBhbmQgc3VzeS1nZXQoZ3V0dGVycywgJGlucHV0KSA+IDAge1xuICAgICR3aWR0aDogaWYoJHdpZHRoID09IG51bGwsIGd1dHRlcnMoJGlucHV0KSwgJHdpZHRoICsgZ3V0dGVycygkaW5wdXQpKTtcbiAgfVxuXG4gIEByZXR1cm4gJHdpZHRoIG9yIDA7XG59XG4iLCIvLyBHYWxsZXJ5IFN5bnRheFxuLy8gPT09PT09PT09PT09PT1cblxuLy8gR2FsbGVyeVxuLy8gLS0tLS0tLVxuLy8gQ3JlYXRlIGFuIGlzb2xhdGVkIGdhbGxlcnlcbi8vIC0gJHNwYW4gICAgICAgIDogPHNwYW4+XG4vLyAtIFskc2VsZWN0b3JdICA6IGNoaWxkIHwgb2YtdHlwZVxuQG1peGluIGdhbGxlcnkoXG4gICRzcGFuLFxuICAkc2VsZWN0b3I6IGNoaWxkXG4pIHtcbiAgJGluc3BlY3QgICAgOiAkc3BhbjtcbiAgJHNwYW4gICAgICAgOiBwYXJzZS1zcGFuKCRzcGFuKTtcbiAgJHNwYW4gICAgICAgOiBtYXAtbWVyZ2UoJHNwYW4sIChsb2NhdGlvbjogMSkpO1xuXG4gICRuICAgICAgICAgICAgOiBzdXN5LWdldChzcGFuLCAkc3Bhbik7XG4gICRjb2x1bW5zICAgICAgOiBzdXN5LWdldChjb2x1bW5zLCAkc3Bhbik7XG4gICRjb250ZXh0ICAgICAgOiBzdXN5LWNvdW50KCRjb2x1bW5zKTtcbiAgJGZsb3cgICAgICAgICA6IHN1c3ktZ2V0KGZsb3csICRzcGFuKTtcblxuICAkaW5zaWRlICAgICAgIDogaXMtaW5zaWRlKCRzcGFuKTtcbiAgJGZyb20gICAgICAgICA6IGZyb20oJGZsb3cpO1xuICAkbGluZSAgICAgICAgIDogZmxvb3IoJGNvbnRleHQgLyAkbik7XG4gICRzeW1tZXRyaWNhbCAgOiBpcy1zeW1tZXRyaWNhbCgkY29sdW1ucyk7XG5cbiAgJG91dHB1dDogKFxuICAgIHdpZHRoICAgICAgICAgICAgIDogbnVsbCxcbiAgICBmbG9hdCAgICAgICAgICAgICA6IGZyb20sXG4gICAgbWFyZ2luLWJlZm9yZSAgICAgOiBudWxsLFxuICAgIG1hcmdpbi1hZnRlciAgICAgIDogbnVsbCxcbiAgICBwYWRkaW5nLWJlZm9yZSAgICA6IG51bGwsXG4gICAgcGFkZGluZy1hZnRlciAgICAgOiBudWxsLFxuICAgIGZsb3cgICAgICAgICAgICAgIDogJGZsb3csXG4gICk7XG5cbiAgQGlmICRpbnNpZGUge1xuICAgICRndXR0ZXJzOiBnZXQtZ3V0dGVycygkc3Bhbik7XG4gICAgJG91dHB1dDogbWFwLW1lcmdlKCRvdXRwdXQsIChcbiAgICAgIHBhZGRpbmctYmVmb3JlOiBtYXAtZ2V0KCRndXR0ZXJzLCBiZWZvcmUpLFxuICAgICAgcGFkZGluZy1hZnRlcjogbWFwLWdldCgkZ3V0dGVycywgYWZ0ZXIpLFxuICAgICkpO1xuICB9XG5cbiAgQGlmICRzeW1tZXRyaWNhbCB7XG4gICAgJG91dHB1dDogbWFwLW1lcmdlKCRvdXRwdXQsICh3aWR0aDogZ2V0LXNwYW4td2lkdGgoJHNwYW4pKSk7XG4gIH1cblxuICAkYm94ICAgICAgICAgIDogc3VzeS1nZXQoYm94LXNpemluZywgJHNwYW4pO1xuICAkZ2xvYmFsLWJveCAgIDogaWYoc3VzeS1nZXQoZ2xvYmFsLWJveC1zaXppbmcpID09ICdib3JkZXItYm94JywgdHJ1ZSwgZmFsc2UpO1xuXG4gIEBpbmNsdWRlIHN1c3ktaW5zcGVjdChnYWxsZXJ5LCAkaW5zcGVjdCk7XG5cbiAgLy8gQ29sbGVjdGl2ZSBPdXRwdXRcbiAgQGlmICRib3ggPT0gYm9yZGVyLWJveCBvciAoJGluc2lkZSBhbmQgbm90KCRib3gpIGFuZCBub3QoJGdsb2JhbC1ib3gpKSB7XG4gICAgQGluY2x1ZGUgb3V0cHV0KChib3gtc2l6aW5nOiBib3JkZXItYm94KSk7XG4gIH0gQGVsc2UgaWYgJGJveCA9PSBjb250ZW50LWJveCB7XG4gICAgQGluY2x1ZGUgb3V0cHV0KChib3gtc2l6aW5nOiBjb250ZW50LWJveCkpO1xuICB9XG5cbiAgQGluY2x1ZGUgZmxvYXQtc3Bhbi1vdXRwdXQoJG91dHB1dC4uLik7XG5cbiAgLy8gSW5kaXZpZHVhbCBMb29wXG4gIEBmb3IgJGl0ZW0gZnJvbSAxIHRocm91Z2ggJGxpbmUge1xuICAgICRudGg6ICcjeyRsaW5lfW4gKyAjeyRpdGVtfSc7XG4gICAgJjpudGgtI3skc2VsZWN0b3J9KCN7JG50aH0pIHtcbiAgICAgIC8vIEluZGl2aWR1YWwgUHJlcFxuICAgICAgJG91dHB1dDogKFxuICAgICAgICB3aWR0aCAgICAgICAgICAgICA6IGlmKCRzeW1tZXRyaWNhbCwgbnVsbCwgZ2V0LXNwYW4td2lkdGgoJHNwYW4pKSxcbiAgICAgICAgZmxvYXQgICAgICAgICAgICAgOiBudWxsLFxuICAgICAgICBtYXJnaW4tYmVmb3JlICAgICA6IGdldC1pc29sYXRpb24oJHNwYW4pLFxuICAgICAgICBtYXJnaW4tYWZ0ZXIgICAgICA6IC0xMDAlLFxuICAgICAgICBwYWRkaW5nLWJlZm9yZSAgICA6IG51bGwsXG4gICAgICAgIHBhZGRpbmctYWZ0ZXIgICAgIDogbnVsbCxcbiAgICAgICAgZmxvdyAgICAgICAgICAgICAgOiAkZmxvdyxcbiAgICAgICk7XG5cbiAgICAgIC8vIEluZGl2aWR1YWwgT3V0cHV0XG4gICAgICBAaW5jbHVkZSBmbG9hdC1zcGFuLW91dHB1dCgkb3V0cHV0Li4uKTtcblxuICAgICAgQGlmIGdldC1lZGdlKCRzcGFuKSA9PSBmaXJzdCB7XG4gICAgICAgIEBpbmNsdWRlIGJyZWFrO1xuICAgICAgICBAaW5jbHVkZSBmaXJzdCgkc3Bhbik7XG4gICAgICB9IEBlbHNlIHtcbiAgICAgICAgQGluY2x1ZGUgbm9icmVhaztcbiAgICAgIH1cblxuICAgICAgLy8gSW5kaXZpZHVhbCBMb2NhdGlvbiBJbmNyZW1lbnRcbiAgICAgICRsb2NhdGlvbjogZ2V0LWxvY2F0aW9uKCRzcGFuKSArICRuO1xuICAgICAgJGxvY2F0aW9uOiBpZigkbG9jYXRpb24gPiAkY29udGV4dCwgMSwgJGxvY2F0aW9uKTtcbiAgICAgICRzcGFuOiBtYXAtbWVyZ2UoJHNwYW4sIChsb2NhdGlvbjogJGxvY2F0aW9uKSk7XG4gICAgfVxuICB9XG59XG4iLCIvLyBSb3cgU3RhcnQgJiBFbmRcbi8vID09PT09PT09PT09PT09PVxuXG4vLyBCcmVha1xuLy8gLS0tLS1cbi8vIEFwcGx5IHRvIGFueSBlbGVtZW50IHRoYXQgc2hvdWxkIGZvcmNlIGEgbGluZSBicmVhay5cbkBtaXhpbiBicmVhayB7XG4gIEBpbmNsdWRlIG91dHB1dCgoY2xlYXI6IGJvdGgpKTtcbn1cblxuXG4vLyBOb0JyZWFrXG4vLyAtLS0tLS0tXG4vLyBDYW5jZWwgdGhlIGJyZWFrKCkgZWZmZWN0LCBlLmcuIHdoZW4gdXNpbmcgbWVkaWEgcXVlcmllcy5cbkBtaXhpbiBub2JyZWFrIHtcbiAgQGluY2x1ZGUgb3V0cHV0KChjbGVhcjogbm9uZSkpO1xufVxuXG5cbi8vIEZ1bGxcbi8vIC0tLS1cbi8vIC0gWyRjb250ZXh0XTogPGxheW91dCBzaG9ydGhhbmQ+XG5AbWl4aW4gZnVsbChcbiAgJGNvbnRleHQ6ICRzdXN5XG4pIHtcbiAgJGluc3BlY3QgOiAkY29udGV4dDtcbiAgQGluY2x1ZGUgc3VzeS1pbnNwZWN0KGZ1bGwsICRpbnNwZWN0KTtcbiAgQGluY2x1ZGUgc3BhbihmdWxsIG9mIHBhcnNlLWdyaWQoJGNvbnRleHQpIGJyZWFrKTtcbn1cblxuXG4vLyBGaXJzdFxuLy8gLS0tLS1cbi8vIC0gWyRjb250ZXh0XTogPHNldHRpbmdzPlxuQG1peGluIGZpcnN0KFxuICAkY29udGV4dDogJHN1c3lcbikge1xuICAkaW5zcGVjdCAgOiAkY29udGV4dDtcbiAgJGNvbnRleHQgIDogcGFyc2UtZ3JpZCgkY29udGV4dCk7XG4gICRmbG93ICAgICA6IHN1c3ktZ2V0KGZsb3csICRjb250ZXh0KTtcblxuICBAaW5jbHVkZSBzdXN5LWluc3BlY3QoZmlyc3QsICRpbnNwZWN0KTtcbiAgQGlmIG5vdChpcy1zcGxpdCgkY29udGV4dCkpIHtcbiAgICBAaW5jbHVkZSBmbG9hdC1maXJzdCgkZmxvdyk7XG4gIH1cbn1cblxuQG1peGluIGFscGhhKFxuICAkY29udGV4dDogJHN1c3lcbikge1xuICBAaW5jbHVkZSBmaXJzdCgkY29udGV4dCk7XG59XG5cblxuLy8gTGFzdFxuLy8gLS0tLVxuLy8gLSBbJGNvbnRleHRdOiA8c2V0dGluZ3M+XG5AbWl4aW4gbGFzdChcbiAgJGNvbnRleHQ6ICRzdXN5XG4pIHtcbiAgJGluc3BlY3QgIDogJGNvbnRleHQ7XG4gICRjb250ZXh0ICA6IHBhcnNlLWdyaWQoJGNvbnRleHQpO1xuXG4gIEBpbmNsdWRlIHN1c3ktaW5zcGVjdChsYXN0LCAkaW5zcGVjdCk7XG5cbiAgJG91dHB1dDogKFxuICAgIGZsb3c6IHN1c3ktZ2V0KGZsb3csICRjb250ZXh0KSxcbiAgICBsYXN0LWZsb3c6IHN1c3ktZ2V0KGxhc3QtZmxvdywgJGNvbnRleHQpLFxuICAgIG1hcmdpbjogaWYoaXMtc3BsaXQoJGNvbnRleHQpLCBudWxsLCAwKSxcbiAgKTtcblxuICBAaW5jbHVkZSBmbG9hdC1sYXN0KCRvdXRwdXQuLi4pO1xufVxuXG5AbWl4aW4gb21lZ2EoXG4gICRjb250ZXh0OiAkc3VzeVxuKSB7XG4gIEBpbmNsdWRlIGxhc3QoJGNvbnRleHQpO1xufVxuXG5cbi8vIEdldCBFZGdlXG4vLyAtLS0tLS0tLVxuLy8gQ2FsY3VsYXRlIGVkZ2UgdmFsdWUgYmFzZWQgb24gbG9jYXRpb24sIGlmIHBvc3NpYmxlXG5AZnVuY3Rpb24gZ2V0LWVkZ2UoXG4gICRzcGFuXG4pIHtcbiAgJHNwYW4gICAgICAgOiBwYXJzZS1zcGFuKCRzcGFuKTtcbiAgJGVkZ2UgICAgICAgOiBzdXN5LWdldChlZGdlLCAkc3Bhbik7XG5cbiAgQGlmIG5vdCgkZWRnZSkge1xuICAgICRjb3VudDogc3VzeS1jb3VudChzdXN5LWdldChjb2x1bW5zLCAkc3BhbikpO1xuICAgICRsb2NhdGlvbjogc3VzeS1nZXQobG9jYXRpb24sICRzcGFuKTtcbiAgICAkbjogc3VzeS1nZXQoc3BhbiwgJHNwYW4pO1xuXG4gICAgJG51bWJlcjogaWYodHlwZS1vZigkbG9jYXRpb24pID09IG51bWJlciwgdHJ1ZSwgZmFsc2UpO1xuICAgICRpbmRleDogaWYoJG51bWJlciBhbmQgdW5pdGxlc3MoJGxvY2F0aW9uKSwgdHJ1ZSwgZmFsc2UpO1xuXG4gICAgQGlmICRuID09ICRjb3VudCB7XG4gICAgICAkZWRnZTogZnVsbDtcbiAgICB9IEBlbHNlIGlmICRsb2NhdGlvbiBhbmQgJG4gYW5kICRpbmRleCB7XG4gICAgICBAaWYgJGxvY2F0aW9uID09IDEge1xuICAgICAgICAkZWRnZTogaWYoJG4gPT0gJGNvdW50LCBmdWxsLCBmaXJzdCk7XG4gICAgICB9IEBlbHNlIGlmICRsb2NhdGlvbiArICRuIC0gMSA9PSAkY291bnQge1xuICAgICAgICAkZWRnZTogbGFzdDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBAaWYgJGVkZ2UgPT0gYWxwaGEgb3IgJGVkZ2UgPT0gb21lZ2Ege1xuICAgICRlZGdlOiBpZigkZWRnZSA9PSBhbHBoYSwgZmlyc3QsIGxhc3QpO1xuICB9XG5cbiAgQHJldHVybiAkZWRnZTtcbn1cblxuXG4vLyBHZXQgTG9jYXRpb25cbi8vIC0tLS0tLS0tLS0tLVxuLy8gQ2FsY3VsYXRlIGxvY2F0aW9uIHZhbHVlIGJhc2VkIG9uIGVkZ2UsIGlmIHBvc3NpYmxlXG5AZnVuY3Rpb24gZ2V0LWxvY2F0aW9uKFxuICAkc3BhblxuKSB7XG4gICRzcGFuICAgICAgIDogcGFyc2Utc3Bhbigkc3Bhbik7XG4gICRsb2NhdGlvbiAgIDogc3VzeS1nZXQobG9jYXRpb24sICRzcGFuKTtcbiAgJGVkZ2UgICAgICAgOiBnZXQtZWRnZSgkc3Bhbik7XG4gICRuICAgICAgICAgIDogc3VzeS1nZXQoc3BhbiwgJHNwYW4pO1xuXG4gIEBpZiAkZWRnZSBhbmQgbm90KCRsb2NhdGlvbikgYW5kIHR5cGUtb2YoJG4pID09IG51bWJlciBhbmQgdW5pdGxlc3MoJG4pIHtcbiAgICBAaWYgJGVkZ2UgPT0gZmlyc3Qge1xuICAgICAgJGxvY2F0aW9uOiAxO1xuICAgIH0gQGVsc2UgaWYgJGVkZ2UgPT0gbGFzdCB7XG4gICAgICAkbG9jYXRpb246IHN1c3ktY291bnQoc3VzeS1nZXQoY29sdW1ucywgJHNwYW4pKSAtICRuICsgMTtcbiAgICB9XG4gIH1cblxuICBAcmV0dXJuICRsb2NhdGlvblxufVxuIiwiLy9TYXNzIE1peGluIGZvciB0eXBla2l0IHZhcmlhdGlvbi1zcGVjaWZpYyBmb250LWZhbWlseSBuYW1lc1xuLy9UeXBla2l0IElFNi04IFN1cHBvcnQgKGh0dHA6Ly9oZWxwLnR5cGVraXQuY29tL2N1c3RvbWVyL3BvcnRhbC9hcnRpY2xlcy82ODU1LVVzaW5nLW11bHRpcGxlLXdlaWdodHMtYW5kLXN0eWxlcylcblxuLy9CYXNlZCBvbiBodHRwczovL2dpc3QuZ2l0aHViLmNvbS9wbGFwaWVyLzM5ODg5ODRcblxuJGFyaWFsOiBBcmlhbCwgc2VyaWYsIHNhbnMtc2VyaWY7XG4kZ2VvcmdpYTogR2VvcmdpYSwgXCJUaW1lcyBOZXcgUm9tYW5cIiwgc2VyaWY7XG5cbi8vIE11c3QgaW5jbHVkZSBmYWxsYmFja3MgZm9yIEVBQ0ggdHlwZWtpdCBmb250IOKAlCBzZXQgdGhlbSBlYWNoIGFzIHZhcmlhYmxlc1xuLy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovL1xuJHR5cGVraXQtZm9udHM6ICAgICBcImJyaW0tbmFycm93LWNvbWJpbmVkLTNcIiwgXCJzYWlsXCIsIFwiYWRlbGxlLXNhbnNcIjsgIC8vIGluZGV4IFsxLCAyLCAzXVxuJHR5cGVraXQtZmFsbGJhY2tzOiAgJGdlb3JnaWEsICRnZW9yZ2lhLCAgJGFyaWFsO1xuXG5cbkBtaXhpbiBmb250KCR3ZWlnaHQ6IDQwMCwgJHN0eWxlOiBub3JtYWwsICRmb250OiAxKSB7XG4gICAgJGZvbnQtd2VpZ2h0OiAkd2VpZ2h0O1xuICAgICRmb250LXN0eWxlOiAgJHN0eWxlO1xuXG4gICAgLy8gVHJhbnNsYXRlIFdlaWdodFxuXG4gICAgQGlmICgkd2VpZ2h0ID09IDQwMCkgb3IgKCR3ZWlnaHQgPT0gbm9ybWFsKSBvciAoJHdlaWdodCA9PSByZWd1bGFyKSB7XG4gICAgICAgICR3ZWlnaHQ6IDQ7XG4gICAgfVxuICAgIEBpZiAoJHdlaWdodCA9PSA3MDApIG9yICgkd2VpZ2h0ID09IGJvbGQpIHtcbiAgICAgICAgJHdlaWdodDogNztcbiAgICB9XG5cbiAgICAvLyBUcmFuc2xhdGUgU3R5bGVcbiAgICBAaWYgJHN0eWxlID09IG5vcm1hbCB7XG4gICAgICAgICRzdHlsZTogbjtcbiAgICB9XG4gICAgQGVsc2UgaWYgJHN0eWxlID09IGl0YWxpYyB7XG4gICAgICAgICRzdHlsZTogaTtcbiAgICB9XG5cbiAgICAvLyBBc3NlbWJsZSAkZm9udC1mYW1pbHlcbiAgICAkcHJpbWFyeS1mb250OiAgIG50aCgkdHlwZWtpdC1mb250cywgJGZvbnQpICsgXCItXCIgKyAkc3R5bGUgKyAkd2VpZ2h0O1xuICAgICRzZWNvbmRhcnktZm9udDogbnRoKCR0eXBla2l0LWZvbnRzLCAkZm9udCk7XG4gICAgJGZhbGxiYWNrLWZvbnRzOiBudGgoJHR5cGVraXQtZmFsbGJhY2tzLCAkZm9udCk7XG4gICAgJGZvbnQtZmFtaWx5OiAgICBxdW90ZSgkcHJpbWFyeS1mb250KSwgcXVvdGUoJHNlY29uZGFyeS1mb250KSwgJGZhbGxiYWNrLWZvbnRzO1xuXG4gICAgZm9udC1mYW1pbHk6ICRmb250LWZhbWlseTtcbiAgICBmb250LXN0eWxlOiAgJGZvbnQtc3R5bGU7XG4gICAgZm9udC13ZWlnaHQ6ICRmb250LXdlaWdodDtcbn1cblxuQG1peGluIGZvbnQtc2l6ZSgkcHNkLWZvbnQtc2l6ZSwgJHBzZC1saW5lLWhlaWdodDogJHBzZC1mb250LXNpemUpIHtcbiAgICBmb250LXNpemU6ICRwc2QtZm9udC1zaXplO1xuICAgIGxpbmUtaGVpZ2h0OiAoJHBzZC1saW5lLWhlaWdodCkvJHBzZC1mb250LXNpemU7XG59XG5cbkBtaXhpbiBmb250LWxpbmUtaGVpZ2h0KCRwc2QtZm9udC1zaXplLCAkcHNkLWxpbmUtaGVpZ2h0OiAkcHNkLWZvbnQtc2l6ZSkge1xuICAgIGxpbmUtaGVpZ2h0OiAoJHBzZC1saW5lLWhlaWdodCkvJHBzZC1mb250LXNpemU7XG59XG5cbkBtaXhpbiBmb250LXNpemUtbWFwKCRmcy1tYXApIHtcbiAgICBAZWFjaCAkZnMtYnJlYWtwb2ludCwgJGZzLWZvbnQtc2l6ZSBpbiAkZnMtbWFwIHtcbiAgICAgICAgQGlmICRmcy1icmVha3BvaW50ID09IG51bGwge1xuICAgICAgICAgICAgZm9udC1zaXplOiAkZnMtZm9udC1zaXplO1xuICAgICAgICB9IEBlbHNlIHtcbiAgICAgICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJGZzLWJyZWFrcG9pbnQpIHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6ICRmcy1mb250LXNpemU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbkBtaXhpbiBmb250LWZhY2UoJGZvbnQtbmFtZSwgJGZvbnQtZmlsZW5hbWU6ICRmb250LW5hbWUpIHtcbiAgICBAZm9udC1mYWNlIHtcbiAgICAgICAgZm9udC1mYW1pbHk6ICcjeyRmb250LW5hbWV9JztcbiAgICAgICAgQGlmICRpbWctbGluay10eXBlID09IFwiSFRNTFwiIHtcbiAgICAgICAgICAgIHNyYzogdXJsKCcjeyRyb3V0ZUhUTUxmb250KyRmb250LWZpbGVuYW1lfS5lb3QnKTtcbiAgICAgICAgICAgIHNyYzogdXJsKCcjeyRyb3V0ZUhUTUxmb250KyRmb250LWZpbGVuYW1lfS5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuICAgICAgICAgICAgdXJsKCcjeyRyb3V0ZUhUTUxmb250KyRmb250LWZpbGVuYW1lfS53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcbiAgICAgICAgICAgIHVybCgnI3skcm91dGVIVE1MZm9udCskZm9udC1maWxlbmFtZX0ud29mZicpIGZvcm1hdCgnd29mZicpLFxuICAgICAgICAgICAgdXJsKCcjeyRyb3V0ZUhUTUxmb250KyRmb250LWZpbGVuYW1lfS50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyksXG4gICAgICAgICAgICB1cmwoJyN7JHJvdXRlSFRNTGZvbnQrJGZvbnQtZmlsZW5hbWV9LnN2ZyMjeyRmb250LW5hbWV9JykgZm9ybWF0KCdzdmcnKTtcbiAgICAgICAgfSBAZWxzZSBpZiAkaW1nLWxpbmstdHlwZSA9PSBcIlBIUFwiIHtcbiAgICAgICAgICAgIHNyYzogdXJsKCcjeyRyb3V0ZVBIUGZvbnQrJGZvbnQtZmlsZW5hbWV9LmVvdCcpO1xuICAgICAgICAgICAgc3JjOiB1cmwoJyN7JHJvdXRlUEhQZm9udCskZm9udC1maWxlbmFtZX0uZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcbiAgICAgICAgICAgIHVybCgnI3skcm91dGVQSFBmb250KyRmb250LWZpbGVuYW1lfS53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcbiAgICAgICAgICAgIHVybCgnI3skcm91dGVQSFBmb250KyRmb250LWZpbGVuYW1lfS53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXG4gICAgICAgICAgICB1cmwoJyN7JHJvdXRlUEhQZm9udCskZm9udC1maWxlbmFtZX0udHRmJykgZm9ybWF0KCd0cnVldHlwZScpLFxuICAgICAgICAgICAgdXJsKCcjeyRyb3V0ZVBIUGZvbnQrJGZvbnQtZmlsZW5hbWV9LnN2ZyMjeyRmb250LW5hbWV9JykgZm9ybWF0KCdzdmcnKTtcbiAgICAgICAgfVxuICAgICAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgfVxufVxuIiwiLmNvbnRhaW5lcntcbiAgICBAaW5jbHVkZSBjb250YWluZXIoKTtcbn1cbmlucHV0W3R5cGU9XCJ0ZXh0XCJdLGlucHV0W3R5cGU9XCJwYXNzd29yZFwiXXtcbiAgICBib3JkZXItYm90dG9tOjFweCBzb2xpZCAkbGdyZXkgIWltcG9ydGFudDtcbiAgICBoZWlnaHQ6MjVweDtcbn1cbmh0bWx7XG4gICAgZm9udC1zaXplOjEwcHg7XG59IiwiLy8gQ29udGFpbmVyIFN5bnRheFxuLy8gPT09PT09PT09PT09PT09PVxuXG4vLyBDb250YWluZXIgW21peGluXVxuLy8gLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFNldCBhIGNvbnRhaW5lciBlbGVtZW50XG4vLyAtIFskbGF5b3V0XSAgOiA8c2V0dGluZ3M+XG5AbWl4aW4gY29udGFpbmVyKFxuICAkbGF5b3V0OiAkc3VzeVxuKSB7XG4gICRpbnNwZWN0ICAgIDogJGxheW91dDtcbiAgJGxheW91dCAgICAgOiBwYXJzZS1ncmlkKCRsYXlvdXQpO1xuXG4gICRfd2lkdGggICAgIDogZ2V0LWNvbnRhaW5lci13aWR0aCgkbGF5b3V0KTtcbiAgJF9qdXN0aWZ5ICAgOiBwYXJzZS1jb250YWluZXItcG9zaXRpb24oc3VzeS1nZXQoY29udGFpbmVyLXBvc2l0aW9uLCAkbGF5b3V0KSk7XG4gICRfcHJvcGVydHkgIDogaWYoc3VzeS1nZXQobWF0aCwgJGxheW91dCkgPT0gc3RhdGljLCB3aWR0aCwgbWF4LXdpZHRoKTtcblxuICAkX2JveCAgICAgICA6IHN1c3ktZ2V0KGJveC1zaXppbmcsICRsYXlvdXQpO1xuXG4gIEBpZiAkX2JveCB7XG4gICAgQGluY2x1ZGUgb3V0cHV0KChib3gtc2l6aW5nOiAkX2JveCkpO1xuICB9XG5cbiAgQGluY2x1ZGUgc3VzeS1pbnNwZWN0KGNvbnRhaW5lciwgJGluc3BlY3QpO1xuICBAaW5jbHVkZSBmbG9hdC1jb250YWluZXIoJF93aWR0aCwgJF9qdXN0aWZ5LCAkX3Byb3BlcnR5KTtcbiAgQGluY2x1ZGUgc2hvdy1ncmlkKCRsYXlvdXQpO1xufVxuXG4vLyBDb250YWluZXIgW2Z1bmN0aW9uXVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFJldHVybiBjb250YWluZXIgd2lkdGhcbi8vIC0gWyRsYXlvdXRdICA6IDxzZXR0aW5ncz5cbkBmdW5jdGlvbiBjb250YWluZXIoXG4gICRsYXlvdXQ6ICRzdXN5XG4pIHtcbiAgJGxheW91dDogcGFyc2UtZ3JpZCgkbGF5b3V0KTtcbiAgQHJldHVybiBnZXQtY29udGFpbmVyLXdpZHRoKCRsYXlvdXQpO1xufVxuXG4vLyBHZXQgQ29udGFpbmVyIFdpZHRoXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBDYWxjdWxhdGUgdGhlIGNvbnRhaW5lciB3aWR0aFxuLy8gLSBbJGxheW91dF06IDxzZXR0aW5ncz5cbkBmdW5jdGlvbiBnZXQtY29udGFpbmVyLXdpZHRoKFxuICAkbGF5b3V0OiAkc3VzeVxuKSB7XG4gICRsYXlvdXQgICAgICAgICA6IHBhcnNlLWdyaWQoJGxheW91dCk7XG4gICRfd2lkdGggICAgICAgICA6IHN1c3ktZ2V0KGNvbnRhaW5lciwgJGxheW91dCk7XG4gICRfY29sdW1uLXdpZHRoICA6IHN1c3ktZ2V0KGNvbHVtbi13aWR0aCwgJGxheW91dCk7XG4gICRfbWF0aCAgICAgICAgICA6IHN1c3ktZ2V0KG1hdGgsICRsYXlvdXQpO1xuXG4gIEBpZiBub3QoJF93aWR0aCkgb3IgJF93aWR0aCA9PSBhdXRvIHtcbiAgICBAaWYgdmFsaWQtY29sdW1uLW1hdGgoJF9tYXRoLCAkX2NvbHVtbi13aWR0aCkge1xuICAgICAgJF9jb2x1bW5zICAgOiBzdXN5LWdldChjb2x1bW5zLCAkbGF5b3V0KTtcbiAgICAgICRfZ3V0dGVycyAgIDogc3VzeS1nZXQoZ3V0dGVycywgJGxheW91dCk7XG4gICAgICAkX3NwcmVhZCAgICA6IGlmKGlzLXNwbGl0KCRsYXlvdXQpLCB3aWRlLCBuYXJyb3cpO1xuICAgICAgJF93aWR0aCAgICAgOiBzdXN5LXN1bSgkX2NvbHVtbnMsICRfZ3V0dGVycywgJF9zcHJlYWQpICogJF9jb2x1bW4td2lkdGg7XG4gICAgfSBAZWxzZSB7XG4gICAgICAkX3dpZHRoOiAxMDAlO1xuICAgIH1cbiAgfVxuXG4gIEByZXR1cm4gJF93aWR0aDtcbn1cblxuLy8gUGFyc2UgQ29udGFpbmVyIFBvc2l0aW9uXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFBhcnNlIHRoZSAkY29udGFpbmVyLXBvc2l0aW9uIGludG8gbWFyZ2luIHZhbHVlcy5cbi8vIC0gWyRqdXN0aWZ5XSAgIDogbGVmdCB8IGNlbnRlciB8IHJpZ2h0IHwgPGxlbmd0aD4gWzxsZW5ndGg+XVxuQGZ1bmN0aW9uIHBhcnNlLWNvbnRhaW5lci1wb3NpdGlvbihcbiAgJGp1c3RpZnk6IG1hcC1nZXQoJHN1c3ktZGVmYXVsdHMsIGNvbnRhaW5lci1wb3NpdGlvbilcbikge1xuICAkX3JldHVybjogaWYoJGp1c3RpZnkgPT0gbGVmdCwgMCwgYXV0bykgaWYoJGp1c3RpZnkgPT0gcmlnaHQsIDAsIGF1dG8pO1xuXG4gIEBpZiBub3QoaW5kZXgobGVmdCByaWdodCBjZW50ZXIsICRqdXN0aWZ5KSkge1xuICAgICRfcmV0dXJuOiBudGgoJGp1c3RpZnksIDEpO1xuICAgICRfcmV0dXJuOiAkX3JldHVybiBpZihsZW5ndGgoJGp1c3RpZnkpID4gMSwgbnRoKCRqdXN0aWZ5LCAyKSwgJF9yZXR1cm4pO1xuICB9XG5cbiAgQHJldHVybiAkX3JldHVybjtcbn1cbiIsIi8vIFN1c3kgRmFsbGJhY2sgQ2xlYXJmaXhcbi8vID09PT09PT09PT09PT09PT09PT09PT1cblxuXG4vLyBDbGVhcmZpeFxuLy8gLS0tLS0tLS1cbi8vIENoZWNrIGZvciBhbiBleGlzdGluZyBzdXBwb3J0IG1peGluLCBvciBwcm92aWRlIGEgc2ltcGxlIGZhbGxiYWNrLlxuQG1peGluIHN1c3ktY2xlYXJmaXgge1xuICBAaWYgc3VzeS1zdXBwb3J0KGNsZWFyZml4LCAobWl4aW46IGNsZWFyZml4KSkge1xuICAgIEBpbmNsdWRlIGNsZWFyZml4O1xuICB9IEBlbHNlIHtcbiAgICAmOmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6IFwiIFwiO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBjbGVhcjogYm90aDtcbiAgICB9XG4gIH1cbn1cbiIsIi5zaWdudXB7XG4gICAgYmFja2dyb3VuZDogJGRncmV5O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAmX19jb250YWluZXJ7XG4gICAgICAgIEBpbmNsdWRlIHNwYW4oMTIgb2YgMjQpO1xuICAgICAgICBtYXJnaW4tbGVmdDphdXRvO1xuICAgICAgICBtYXJnaW4tcmlnaHQ6YXV0bztcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBsZWZ0OjA7XG4gICAgICAgIHJpZ2h0OjA7XG4gICAgICAgIHRvcDo1MCU7XG4gICAgICAgIHRyYW5zZm9ybTp0cmFuc2xhdGVZKC01MCUpO1xuICAgICAgICBoZWlnaHQ6IDYwMHB4O1xuICAgICAgICBiYWNrZ3JvdW5kOndoaXRlO1xuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIH1cbiAgICAmX19kYXRhe1xuICAgICAgICBAaW5jbHVkZSBzcGFuKDcgb2YgMTEpO1xuICAgICAgICBwYWRkaW5nOnNwYW4oMy8yIG9mIDExKSBzcGFuKDEgb2YgMTEpIHNwYW4oMSBvZiAxMSk7XG4gICAgICAgIGgye1xuICAgICAgICAgICAgQGV4dGVuZCAudWJ1bnR1LWI7XG4gICAgICAgICAgICBmb250LXNpemU6M3JlbTtcbiAgICAgICAgfVxuICAgICAgICBwe1xuICAgICAgICAgICAgQGV4dGVuZCAucmFsZS1yO1xuICAgICAgICAgICAgZm9udC1zaXplOjEuMnJlbTtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDEycHg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgJl9fc3VibWl0e1xuICAgICAgICAmOmhvdmVye1xuICAgICAgICAgICAgY3Vyc29yOnBvaW50ZXI7XG4gICAgICAgIH1cbiAgICB9XG4gICAgJl9fY292ZXJ7XG4gICAgICAgIEBpbmNsdWRlIHNwYW4oNCBvZiAxMSk7XG4gICAgfVxuICAgICZfX3NvdXJjZXtcbiAgICAgICAgd2lkdGg6YXV0bztcbiAgICAgICAgaGVpZ2h0OjEwMCU7XG4gICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgIH1cbiAgICAmX19pbm5lcntcbiAgICAgICAgbWFyZ2luLXRvcDogMjBweDtcbiAgICB9XG59IiwiLy9CbGFja1xuJGJsYWNrLTEwMDogXHRyZ2JhKDAsMCwwLDEpO1xuJGJsYWNrLTkwOiBcdFx0cmdiYSgwLDAsMCwwLjkpO1xuJGJsYWNrLTgwOiBcdFx0cmdiYSgwLDAsMCwwLjgpO1xuJGJsYWNrLTcwOiBcdFx0cmdiYSgwLDAsMCwwLjcpO1xuJGJsYWNrLTYwOiBcdFx0cmdiYSgwLDAsMCwwLjYpO1xuJGJsYWNrLTUwOiBcdFx0cmdiYSgwLDAsMCwwLjUpO1xuJGJsYWNrLTQwOiBcdFx0cmdiYSgwLDAsMCwwLjQpO1xuJGJsYWNrLTMwOiBcdFx0cmdiYSgwLDAsMCwwLjMpO1xuJGJsYWNrLTIwOiBcdFx0cmdiYSgwLDAsMCwwLjIpO1xuJGJsYWNrLTEwOiBcdFx0cmdiYSgwLDAsMCwwLjEpO1xuJGJsYWNrLTA6IFx0XHRyZ2JhKDAsMCwwLDApO1xuXG4vL1doaXRlXG4kd2hpdGUtMTAwOiBcdHJnYmEoMjU1LDI1NSwyNTUsMSk7XG4kd2hpdGUtOTA6IFx0XHRyZ2JhKDI1NSwyNTUsMjU1LDAuOSk7XG4kd2hpdGUtODA6IFx0XHRyZ2JhKDI1NSwyNTUsMjU1LDAuOCk7XG4kd2hpdGUtNzA6IFx0XHRyZ2JhKDI1NSwyNTUsMjU1LDAuNyk7XG4kd2hpdGUtNjA6IFx0XHRyZ2JhKDI1NSwyNTUsMjU1LDAuNik7XG4kd2hpdGUtNTA6IFx0XHRyZ2JhKDI1NSwyNTUsMjU1LDAuNSk7XG4kd2hpdGUtNDA6IFx0XHRyZ2JhKDI1NSwyNTUsMjU1LDAuNCk7XG4kd2hpdGUtMzA6IFx0XHRyZ2JhKDI1NSwyNTUsMjU1LDAuMyk7XG4kd2hpdGUtMjA6IFx0XHRyZ2JhKDI1NSwyNTUsMjU1LDAuMik7XG4kd2hpdGUtMTA6IFx0XHRyZ2JhKDI1NSwyNTUsMjU1LDAuMSk7XG4kd2hpdGUtMDogXHRcdHJnYmEoMjU1LDI1NSwyNTUsMCk7XG5cbiRkZ3JleTojMzczNzM3O1xuJGxncmV5OiAjZGRkZGRkO1xuJG1ncmV5OiAjODE4MTgxOyIsIi5wLWhvbWV7XG4gICAgYmFja2dyb3VuZDp3aGl0ZTtcbiAgICAuY292ZXJ7XG4gICAgICAgIEBpbmNsdWRlIHNwYW4oMjIgb2YgMjQpO1xuICAgICAgICBtYXJnaW4tbGVmdDphdXRvO1xuICAgICAgICBtYXJnaW4tcmlnaHQ6YXV0bztcbiAgICAgICAgcGFkZGluZy1sZWZ0OjA7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6MDtcbiAgICAgICAgZmxvYXQ6bm9uZTtcbiAgICAgICAgbGVmdDowO1xuICAgICAgICByaWdodDowO1xuICAgICAgICBoZWlnaHQ6Y2FsYygxMDB2aCAtIDEwMHB4KTtcbiAgICAgICAgdG9wOjUwcHg7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTp1cmwoXCIuLi8uLi9zdGF0aWMvaW1nL2NvdmVyLmpwZ1wiKTtcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOmNvdmVyO1xuICAgICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgICAgICBoMXtcbiAgICAgICAgICAgIEBleHRlbmQgLnJhbGUtcjtcbiAgICAgICAgICAgIGNvbG9yOndoaXRlO1xuICAgICAgICAgICAgQGluY2x1ZGUgc3BhbigxMSBvZiAyNCk7XG4gICAgICAgICAgICBAaW5jbHVkZSBmb250LXNpemUoNC41cmVtLDUuNXJlbSk7XG4gICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDAuMnJlbTtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGJvdHRvbTpzcGFuKDMgb2YgMjQpO1xuICAgICAgICAgICAgbGVmdDpzcGFuKDMgb2YgMjQpO1xuICAgICAgICB9XG4gICAgfVxufSIsIi5wLWJpZGRpbmd7XG4gICAgLmNvdmVye1xuICAgICAgICBAaW5jbHVkZSBzcGFuKDIyIG9mIDI0KTtcbiAgICAgICAgZmxvYXQ6bm9uZTtcbiAgICAgICAgbWFyZ2luOjAgYXV0bztcbiAgICAgICAgaDF7XG4gICAgICAgICAgICBAZXh0ZW5kIC5yYWxlLXI7XG4gICAgICAgICAgICBjb2xvcjokbWdyZXk7XG4gICAgICAgICAgICBAaW5jbHVkZSBmb250LXNpemUoNS41cmVtLDYuM3JlbSk7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICAgICAgICAgICAgYm9yZGVyLWJvdHRvbToxcHggc29saWQgI0RERERERDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAudGFibGVze1xuICAgICAgICBAaW5jbHVkZSBzcGFuKDIyIG9mIDI0KTtcbiAgICAgICAgZmxvYXQ6bm9uZTtcbiAgICAgICAgbWFyZ2luOjAgYXV0bztcbiAgICAgICAgJl9fbGlzdHtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDUwcHg7XG4gICAgICAgICAgICBjbGVhcjogYm90aDtcbiAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgICAgICBwYWRkaW5nOiA1cHggNXB4O1xuICAgICAgICAgICAgJi0tb2Zmc2V0e1xuICAgICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogNDBweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAmX19pdGVte1xuICAgICAgICAgICAgYXtcbiAgICAgICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOjVweDtcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IDBweCAwcHggNXB4IDBweCByZ2JhKDAsMCwwLDAuMjQpO1xuICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OjEwcHg7XG4gICAgICAgICAgICAmOmZpcnN0LW9mLXR5cGV7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfVxuICAgICAgICAmX19hbmNob3J7XG4gICAgICAgICAgICB0cmFuc2l0aW9uOmFsbCAwLjNzO1xuICAgICAgICB9XG4gICAgICAgICZfX2FuY2hvci0tYWN0aXZle1xuICAgICAgICAgICAgLnRhYmxlc19fb3JkZXJ7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDojNjBiNzNlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgICZfX2FuY2hvci0tb2NjdXBpZWR7XG4gICAgICAgICAgICAudGFibGVzX19vcmRlcntcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZDAzOTNmO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgICZfX2l0ZW0tdG9we1xuICAgICAgICAgICAgQGluY2x1ZGUgc3BhbigyIG9mIDIyKTtcbiAgICAgICAgfVxuICAgICAgICAmX19pbmZve1xuICAgICAgICAgICAgcGFkZGluZzoxMHB4O1xuICAgICAgICB9XG4gICAgICAgICZfX3Bvc2l0aW9ue1xuICAgICAgICAgICAgQGV4dGVuZCAudWJ1bnR1LWI7XG4gICAgICAgICAgICBjb2xvcjokZGdyZXk7XG4gICAgICAgICAgICBAaW5jbHVkZSBmb250LXNpemUoMS4xcmVtLDEuM3JlbSk7XG4gICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNXB4O1xuICAgICAgICB9XG4gICAgICAgICZfX3ByaWNpbmd7XG4gICAgICAgICAgICBAZXh0ZW5kIC5yYWxlLXI7XG4gICAgICAgICAgICBjb2xvcjokbWdyZXk7XG4gICAgICAgICAgICBAaW5jbHVkZSBmb250LXNpemUoMS4xcmVtLDEuM3JlbSk7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAycHg7XG5cbiAgICAgICAgfVxuICAgICAgICAmX19wcmljZXtcbiAgICAgICAgICAgIEBleHRlbmQgLnVidW50dS1iO1xuICAgICAgICAgICAgY29sb3I6ICNkMDM5M2Y7XG4gICAgICAgICAgICBAaW5jbHVkZSBmb250LXNpemUoMS4xcmVtLDEuM3JlbSk7XG4gICAgICAgIH1cblxuICAgICAgICAmX19vcmRlcntcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IDBweCAwcHggNXB4IDBweCByZ2JhKDAsMCwwLDAuMjQpO1xuICAgICAgICAgICAgYmFja2dyb3VuZDogJGRncmV5O1xuICAgICAgICAgICAgY29sb3I6d2hpdGU7XG4gICAgICAgICAgICBAZXh0ZW5kIC5yYWxlLXI7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICBwYWRkaW5nOiA3cHggMDtcbiAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgICAgICB0cmFuc2l0aW9uOmFsbCAwLjNzO1xuICAgICAgICB9XG4gICAgfVxuICAgIC5vZmZlcntcbiAgICAgICAgQGluY2x1ZGUgc3Bhbig5IG9mIDI0KTtcbiAgICAgICAgZmxvYXQ6bm9uZTtcbiAgICAgICAgbWFyZ2luOiA0MHB4IGF1dG8gMDtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgJl9fZm9ybXtcbiAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgIH1cbiAgICAgICAgJl9faW5wdXR7XG4gICAgICAgICAgICBAaW5jbHVkZSBzcGFuKDQgb2YgNyk7XG4gICAgICAgICAgICBib3JkZXI6MXB4IHNvbGlkICRsZ3JleTtcbiAgICAgICAgICAgIHBhZGRpbmc6IDVweCAyMHB4O1xuICAgICAgICAgICAgaGVpZ2h0OiAzOHB4O1xuICAgICAgICB9XG4gICAgICAgICZfX3N1Ym1pdHtcbiAgICAgICAgICAgIEBpbmNsdWRlIHNwYW4oMiBvZiA3KTtcbiAgICAgICAgICAgICY6aG92ZXJ7XG4gICAgICAgICAgICAgICAgY3Vyc29yOnBvaW50ZXI7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLnJlc2V0e1xuICAgICAgICBAaW5jbHVkZSBzcGFuKDIyIG9mIDI0KTtcbiAgICAgICAgZmxvYXQ6bm9uZTtcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICAgICZfX2lubmVye1xuICAgICAgICAgICAgZmxvYXQ6cmlnaHQ7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgICAgICB9XG4gICAgICAgJl9fYW5jaG9ye1xuICAgICAgICAgICBAZXh0ZW5kIC51YnVudHUtcjtcbiAgICAgICAgICAgY29sb3I6JG1ncmV5O1xuICAgICAgICAgICBAaW5jbHVkZSBmb250LXNpemUoMS40cmVtLDEuNHJlbSk7XG4gICAgICAgfVxuICAgIH1cblxufVxuLnRoYW5rLXlvdV9fdGl0bGV7XG4gICAgQGV4dGVuZCAudWJ1bnR1LXI7XG4gICAgY29sb3I6JGRncmV5O1xuICAgIEBpbmNsdWRlIGZvbnQtc2l6ZSgyLjRyZW0sMy41cmVtKTtcbn1cbi50aGFuay15b3VfX3RleHR7XG4gICAgQGV4dGVuZCAucmFsZS1yO1xuICAgIGNvbG9yOiRtZ3JleTtcbiAgICBAaW5jbHVkZSBmb250LXNpemUoMS4zcmVtLDEuOHJlbSk7XG59XG4ucmVtb2RhbC1jb25maXJte1xuICAgIEBleHRlbmQgLnJhbGUtcjtcbiAgICBAaW5jbHVkZSBmb250LXNpemUoMS4zcmVtLDEuOHJlbSk7XG59IiwiLnNlYXJjaHtcbiAgICBAaW5jbHVkZSBzcGFuKDYgb2YgMjQpO1xuICAgIGZsb2F0OnJpZ2h0O1xuICAgIC5zZWFyY2hfX2lucHV0e1xuICAgICAgICBAaW5jbHVkZSBzcGFuKDQgb2YgNik7XG4gICAgfVxuICAgICZfX3N1Ym1pdHtcbiAgICAgICAgZm9udC1zaXplOjEuMXJlbTtcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgcGFkZGluZzogNXB4IDE1cHg7XG4gICAgICAgIEBpbmNsdWRlIHNwYW4oMiBvZiA2KTtcbiAgICAgICAgZmxvYXQ6cmlnaHQ7XG4gICAgICAgIGJvcmRlcjoxcHggc29saWQgJGxncmV5O1xuICAgICAgICBjb2xvcjokbWdyZXk7XG4gICAgICAgICY6aG92ZXJ7XG4gICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgIH1cbiAgICB9XG59XG4uaG9yaXp7XG4gICAgQGluY2x1ZGUgc3BhbigyMiBvZiAyNCk7XG4gICAgZmxvYXQ6bm9uZTtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBtYXJnaW4tdG9wOiA2MHB4O1xuICAgIHBhZGRpbmctYm90dG9tOiA0MHB4O1xuICAgIC5idG4tcmVke1xuICAgICAgICBjb2xvcjojZGUzODM4ICFpbXBvcnRhbnRcbiAgICB9XG4gICAgJl9fYnRue1xuICAgICAgICB3aWR0aDoxMDAlO1xuICAgICAgICBwYWRkaW5nOjVweCAwO1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xuICAgIH1cbiAgICAuZmlsdGVye1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICAgICAgICBmbG9hdDpsZWZ0O1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XG4gICAgfVxuICAgICZfX2l0ZW17XG4gICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkbGdyZXk7XG4gICAgICAgIHBhZGRpbmc6MTVweCAxMHB4O1xuICAgICAgICB3aWR0aDoxMDAlO1xuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICAmOmZpcnN0LW9mLXR5cGV7XG4gICAgICAgICAgICBib3JkZXItdG9wOjFweCBzb2xpZCAkbGdyZXk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgJl9faW1hZ2V7XG4gICAgICAgIGZsb2F0OmxlZnQ7XG4gICAgICAgIEBpbmNsdWRlIHNwYW4oMyBvZiAyMik7XG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgfVxuICAgICZfX3NvdXJjZXtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgfVxuICAgICZfX2luZm97XG4gICAgICAgIEBpbmNsdWRlIHB1c2goMiBvZiAyMik7XG4gICAgICAgIEBpbmNsdWRlIHNwYW4oMTEgb2YgMjIpO1xuICAgIH1cbiAgICAmX19jb250YWN0e1xuICAgICAgICBAaW5jbHVkZSBzcGFuKDIgb2YgMjIpO1xuICAgICAgICBmbG9hdDpyaWdodDtcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgcHtcbiAgICAgICAgICAgIEBleHRlbmQgLnJhbGUtcjtcbiAgICAgICAgICAgIEBpbmNsdWRlIGZvbnQtc2l6ZSgxLjJyZW0sMi40cmVtKTtcbiAgICAgICAgfVxuICAgICAgICBhe1xuICAgICAgICAgICAgQGV4dGVuZCAucmFsZS1yO1xuICAgICAgICAgICAgQGluY2x1ZGUgZm9udC1zaXplKDEuMnJlbSwyLjRyZW0pO1xuICAgICAgICAgICAgY29sb3I6JG1ncmV5O1xuICAgICAgICB9XG4gICAgfVxuICAgICZfX3R5cGV7XG4gICAgICAgIEBleHRlbmQgLnJhbGUtcjtcbiAgICAgICAgQGluY2x1ZGUgZm9udC1zaXplKDEuMXJlbSwxLjNyZW0pO1xuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICBjb2xvcjokbWdyZXk7XG4gICAgfVxuICAgICZfX3RpdGxle1xuICAgICAgICBAZXh0ZW5kIC51YnVudHUtYjtcbiAgICAgICAgQGluY2x1ZGUgZm9udC1zaXplKDEuNHJlbSwxLjZyZW0pO1xuICAgICAgICBjb2xvcjogI2U4MzIzYjtcbiAgICAgICAgbWFyZ2luLXRvcDogOHB4O1xuICAgIH1cbiAgICAmX19kZXNje1xuICAgICAgICBAZXh0ZW5kIC5yYWxlLXI7XG4gICAgICAgIEBpbmNsdWRlIGZvbnQtc2l6ZSgxLjJyZW0sMS44cmVtKTtcbiAgICAgICAgY29sb3I6JGRncmV5O1xuICAgICAgICBtYXJnaW4tdG9wOiAxMHB4O1xuICAgIH1cbiAgICAubG9hZC1tb3Jle1xuICAgICAgICBAaW5jbHVkZSBzcGFuKDUgb2YgMjIpO1xuICAgICAgICBmbG9hdDpub25lO1xuICAgICAgICBtYXJnaW46IDIwcHggYXV0byAwO1xuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIH1cbn0iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0= */
