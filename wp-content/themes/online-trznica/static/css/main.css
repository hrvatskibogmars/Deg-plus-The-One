/* BORDER RADIUS */
/*------------------------
	Bounds
------------------------*/
/*------------------------
	Range definitions
------------------------*/
/*--------------------------------
	Media Query range templates
---------------------------------*/
/*------------------------
	Media Queries
------------------------*/
/* TRANSFORM  */
html, body, input, button {
  -webkit-text-size-adjust: none;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility; }

body, h1, h2, h3, h4, h5, h6, ul, ol, p, hr, form {
  margin: 0;
  padding: 0;
  border: none; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

hr {
  float: left;
  width: 100%;
  height: 1px; }

ul, ol {
  list-style: none; }

::-moz-selection {
  background: #000000;
  color: #ffffff; }

::selection {
  background: #000000;
  color: #ffffff; }

::-moz-selection {
  background: #000000;
  color: #ffffff; }

input {
  width: auto; }

input[type="text"],
input[type="password"],
input[type="email"],
input[type="search"],
textarea {
  width: 100%;
  float: left;
  margin: 0;
  padding: 0;
  border: none;
  box-sizing: border-box;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box; }

textarea {
  resize: vertical; }

input:focus, textarea:focus, select:focus {
  outline: none; }

figure {
  padding: 0;
  margin: 0; }

fieldset {
  border: none;
  padding: 0;
  outline: 0; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

*:before, *:after, * {
  box-sizing: border-box;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box; }

/*
 *  Remodal - v1.1.0
 *  Responsive, lightweight, fast, synchronized with CSS animations, fully customizable modal window plugin with declarative configuration and hash tracking.
 *  http://vodkabears.github.io/remodal/
 *
 *  Made by Ilya Makarov
 *  Under MIT License
 */
/* ==========================================================================
   Remodal's necessary styles
   ========================================================================== */
/* Hide scroll bar */
html.remodal-is-locked {
  overflow: hidden;
  -ms-touch-action: none;
  touch-action: none; }

/* Anti FOUC */
.remodal,
[data-remodal-id] {
  display: none; }

/* Necessary styles of the overlay */
.remodal-overlay {
  position: fixed;
  z-index: 9999;
  top: -5000px;
  right: -5000px;
  bottom: -5000px;
  left: -5000px;
  display: none; }

/* Necessary styles of the wrapper */
.remodal-wrapper {
  position: fixed;
  z-index: 10000;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  display: none;
  overflow: auto;
  text-align: center;
  -webkit-overflow-scrolling: touch; }

.remodal-wrapper:after {
  display: inline-block;
  height: 100%;
  margin-left: -0.05em;
  content: ""; }

/* Fix iPad, iPhone glitches */
.remodal-overlay,
.remodal-wrapper {
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden; }

/* Necessary styles of the modal dialog */
.remodal {
  position: relative;
  outline: none;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  text-size-adjust: 100%; }

.remodal-is-initialized {
  /* Disable Anti-FOUC */
  display: inline-block; }

/*
 *  Remodal - v1.1.0
 *  Responsive, lightweight, fast, synchronized with CSS animations, fully customizable modal window plugin with declarative configuration and hash tracking.
 *  http://vodkabears.github.io/remodal/
 *
 *  Made by Ilya Makarov
 *  Under MIT License
 */
/* ==========================================================================
   Remodal's default mobile first theme
   ========================================================================== */
/* Default theme styles for the background */
.remodal-bg.remodal-is-opening,
.remodal-bg.remodal-is-opened {
  -webkit-filter: blur(3px);
  filter: blur(3px); }

/* Default theme styles of the overlay */
.remodal-overlay {
  background: rgba(43, 46, 56, 0.9); }

.remodal-overlay.remodal-is-opening,
.remodal-overlay.remodal-is-closing {
  -webkit-animation-duration: 0.3s;
  animation-duration: 0.3s;
  -webkit-animation-fill-mode: forwards;
  animation-fill-mode: forwards; }

.remodal-overlay.remodal-is-opening {
  -webkit-animation-name: remodal-overlay-opening-keyframes;
  animation-name: remodal-overlay-opening-keyframes; }

.remodal-overlay.remodal-is-closing {
  -webkit-animation-name: remodal-overlay-closing-keyframes;
  animation-name: remodal-overlay-closing-keyframes; }

/* Default theme styles of the wrapper */
.remodal-wrapper {
  padding: 10px 10px 0; }

/* Default theme styles of the modal dialog */
.remodal {
  box-sizing: border-box;
  width: 100%;
  margin-bottom: 10px;
  padding: 35px;
  -webkit-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
  color: #2b2e38;
  background: #fff; }

.remodal.remodal-is-opening,
.remodal.remodal-is-closing {
  -webkit-animation-duration: 0.3s;
  animation-duration: 0.3s;
  -webkit-animation-fill-mode: forwards;
  animation-fill-mode: forwards; }

.remodal.remodal-is-opening {
  -webkit-animation-name: remodal-opening-keyframes;
  animation-name: remodal-opening-keyframes; }

.remodal.remodal-is-closing {
  -webkit-animation-name: remodal-closing-keyframes;
  animation-name: remodal-closing-keyframes; }

/* Vertical align of the modal dialog */
.remodal,
.remodal-wrapper:after {
  vertical-align: middle; }

/* Close button */
.remodal-close {
  position: absolute;
  top: 0;
  left: 0;
  display: block;
  overflow: visible;
  width: 35px;
  height: 35px;
  margin: 0;
  padding: 0;
  cursor: pointer;
  transition: color 0.2s;
  text-decoration: none;
  color: #95979c;
  border: 0;
  outline: 0;
  background: transparent; }

.remodal-close:hover,
.remodal-close:focus {
  color: #2b2e38; }

.remodal-close:before {
  font-family: Arial, "Helvetica CY", "Nimbus Sans L", sans-serif !important;
  font-size: 25px;
  line-height: 35px;
  position: absolute;
  top: 0;
  left: 0;
  display: block;
  width: 35px;
  content: "\00d7";
  text-align: center; }

/* Dialog buttons */
.remodal-confirm,
.remodal-cancel {
  font: inherit;
  display: inline-block;
  overflow: visible;
  min-width: 110px;
  margin: 0;
  padding: 12px 0;
  cursor: pointer;
  transition: background 0.2s;
  text-align: center;
  vertical-align: middle;
  text-decoration: none;
  border: 0;
  outline: 0; }

.remodal-confirm {
  color: #fff;
  background: #81c784; }

.remodal-confirm:hover,
.remodal-confirm:focus {
  background: #66bb6a; }

.remodal-cancel {
  color: #fff;
  background: #e57373; }

.remodal-cancel:hover,
.remodal-cancel:focus {
  background: #ef5350; }

/* Remove inner padding and border in Firefox 4+ for the button tag. */
.remodal-confirm::-moz-focus-inner,
.remodal-cancel::-moz-focus-inner,
.remodal-close::-moz-focus-inner {
  padding: 0;
  border: 0; }

/* Keyframes
   ========================================================================== */
@-webkit-keyframes remodal-opening-keyframes {
  from {
    -webkit-transform: scale(1.05);
    transform: scale(1.05);
    opacity: 0; }
  to {
    -webkit-transform: none;
    transform: none;
    opacity: 1; } }

@keyframes remodal-opening-keyframes {
  from {
    -webkit-transform: scale(1.05);
    transform: scale(1.05);
    opacity: 0; }
  to {
    -webkit-transform: none;
    transform: none;
    opacity: 1; } }

@-webkit-keyframes remodal-closing-keyframes {
  from {
    -webkit-transform: scale(1);
    transform: scale(1);
    opacity: 1; }
  to {
    -webkit-transform: scale(0.95);
    transform: scale(0.95);
    opacity: 0; } }

@keyframes remodal-closing-keyframes {
  from {
    -webkit-transform: scale(1);
    transform: scale(1);
    opacity: 1; }
  to {
    -webkit-transform: scale(0.95);
    transform: scale(0.95);
    opacity: 0; } }

@-webkit-keyframes remodal-overlay-opening-keyframes {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }

@keyframes remodal-overlay-opening-keyframes {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }

@-webkit-keyframes remodal-overlay-closing-keyframes {
  from {
    opacity: 1; }
  to {
    opacity: 0; } }

@keyframes remodal-overlay-closing-keyframes {
  from {
    opacity: 1; }
  to {
    opacity: 0; } }

/* Media queries
   ========================================================================== */
@media only screen and (min-width: 641px) {
  .remodal {
    max-width: 700px; } }

/* IE8
   ========================================================================== */
.lt-ie9 .remodal-overlay {
  background: #2b2e38; }

.lt-ie9 .remodal {
  width: 700px; }

.ubuntu-b, .form-item label, .products__opg, .products__title, .products__buy .products__price, .signup__data h2, .p-bidding .tables__position, .p-bidding .tables__price, .horiz__title, .horiz .basket__price {
  font-family: "Ubuntu", sans-serif;
  font-weight: 700; }

.ubuntu-r, .p-bidding .reset__anchor, .thank-you__title {
  font-family: "Ubuntu", sans-serif;
  font-weight: 400; }

.rale-b, .horiz__pricing {
  font-family: "Raleway", sans-serif;
  font-weight: 700; }

.rale-r, .btn, .products__desc, .signup__data p, .p-home .cover h1, .p-bidding .cover h1, .p-bidding .tables__pricing, .p-bidding .tables__order, .thank-you__text, .remodal-confirm, .horiz__heading, .horiz__contact p, .horiz__contact a, .horiz__type, .horiz__desc, .horiz .basket__label {
  font-family: "Raleway", sans-serif;
  font-weight: 400; }

@font-face {
  font-family: 'FI-icons';
  src: url("../fonts/FI-icons.eot?516kv6");
  src: url("../fonts/FI-icons.eot?516kv6#iefix") format("embedded-opentype"), url("../fonts/FI-icons.woff2?516kv6") format("woff2"), url("../fonts/FI-icons.ttf?516kv6") format("truetype"), url("../fonts/FI-icons.woff?516kv6") format("woff"), url("../fonts/FI-icons.svg?516kv6#FI-icons") format("svg");
  font-weight: normal;
  font-style: normal; }

[class^="icon-"], [class*=" icon-"] {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'FI-icons' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.icon-fb:before {
  content: "\e900"; }

.icon-g-plus:before {
  content: "\e901"; }

.icon-twitter:before {
  content: "\e902"; }

.p-full {
  height: 100vh;
  width: 100%; }

.form-item {
  margin-top: 30px;
  overflow: hidden; }
  .form-item label {
    font-size: 1.2rem;
    color: #b7b7b7;
    text-transform: uppercase; }

.btn {
  font-size: 1.4rem;
  text-transform: uppercase;
  padding: 10px 40px; }
  .btn-red {
    background: white;
    color: #de3838;
    border: 1px solid #de3838;
    text-decoration: none; }
  .btn-black {
    background: white;
    color: black;
    text-decoration: none;
    border: 1px solid black;
    float: right; }

.navigation {
  width: 91.66667%;
  float: left;
  margin-left: auto;
  margin-right: auto;
  padding-left: 0;
  padding-right: 0;
  float: none;
  overflow: hidden;
  position: relative;
  top: 30px;
  height: 50px; }

.products {
  width: 91.66667%;
  float: left;
  float: none;
  margin: 80px auto;
  padding-left: 0;
  padding-right: 0;
  position: relative; }
  .products__opg {
    position: absolute;
    top: 0;
    left: 0;
    background: rgba(224, 37, 59, 0.9);
    padding: 5px;
    color: white;
    font-size: 1.1rem;
    line-height: 1.36364;
    width: 100%;
    text-align: center; }
  .products__item {
    width: 33.33333%;
    float: left;
    padding: 2.08333%;
    height: 400px;
    overflow: hidden; }
    .products__item:nth-child(3n + 1) {
      margin-left: 0;
      margin-right: -100%;
      clear: both; }
    .products__item:nth-child(3n + 2) {
      margin-left: 33.33333%;
      margin-right: -100%;
      clear: none; }
    .products__item:nth-child(3n + 3) {
      margin-left: 66.66667%;
      margin-right: -100%;
      clear: none; }
  .products__image {
    height: 200px;
    width: 100%;
    position: relative; }
  .products__source {
    height: 100%;
    width: 100%;
    object-fit: cover; }
  .products__title {
    font-size: 2rem;
    line-height: 1.25;
    margin-top: 20px; }
  .products__desc {
    font-size: 1.2rem;
    line-height: 1.66667;
    margin: 15px 0 10px;
    height: 20px;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis; }
  .products__buy {
    overflow: hidden;
    position: relative; }
    .products__buy .products__price {
      font-size: 2rem;
      line-height: 1;
      float: left;
      position: absolute;
      left: 0;
      top: 50%;
      -webkit-transform: translateY(-50%);
      -ms-transform: translateY(-50%);
      transform: translateY(-50%); }
    .products__buy .btn {
      float: right; }

.container {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto; }
  .container:after {
    content: " ";
    display: block;
    clear: both; }

input[type="text"], input[type="password"] {
  border-bottom: 1px solid #dddddd !important;
  height: 25px; }

html {
  font-size: 10px; }

.signup {
  background: #373737;
  position: relative; }
  .signup__container {
    width: 50%;
    float: left;
    margin-left: auto;
    margin-right: auto;
    position: absolute;
    left: 0;
    right: 0;
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
    height: 600px;
    background: white;
    overflow: hidden; }
  .signup__data {
    width: 63.63636%;
    float: left;
    padding: 13.63636% 9.09091% 9.09091%; }
    .signup__data h2 {
      font-size: 3rem; }
    .signup__data p {
      font-size: 1.2rem;
      margin-top: 12px; }
  .signup__submit:hover {
    cursor: pointer; }
  .signup__cover {
    width: 36.36364%;
    float: left; }
  .signup__source {
    width: auto;
    height: 100%;
    object-fit: cover; }
  .signup__inner {
    margin-top: 20px; }

.p-home {
  background: white; }
  .p-home .cover {
    width: 91.66667%;
    float: left;
    margin-left: auto;
    margin-right: auto;
    padding-left: 0;
    padding-right: 0;
    float: none;
    left: 0;
    right: 0;
    height: calc(100vh - 100px);
    top: 50px;
    position: relative;
    background-image: url("../../static/img/cover.jpg");
    background-size: cover;
    background-repeat: no-repeat; }
    .p-home .cover h1 {
      color: white;
      width: 45.83333%;
      float: left;
      font-size: 4.5rem;
      line-height: 1.22222;
      text-transform: uppercase;
      letter-spacing: 0.2rem;
      position: absolute;
      bottom: 12.5%;
      left: 12.5%; }

.p-bidding .cover {
  width: 91.66667%;
  float: left;
  float: none;
  margin: 0 auto; }
  .p-bidding .cover h1 {
    color: #818181;
    font-size: 5.5rem;
    line-height: 1.14545;
    margin-bottom: 20px;
    border-bottom: 1px solid #DDDDDD; }

.p-bidding .tables {
  width: 91.66667%;
  float: left;
  float: none;
  margin: 0 auto; }
  .p-bidding .tables__list {
    margin-top: 50px;
    clear: both;
    overflow: hidden;
    padding: 5px 5px; }
    .p-bidding .tables__list--offset {
      padding-left: 40px; }
  .p-bidding .tables__item {
    border-radius: 5px;
    box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.24);
    overflow: hidden;
    margin-left: 10px; }
    .p-bidding .tables__item a {
      text-decoration: none; }
    .p-bidding .tables__item:first-of-type {
      margin-left: 0; }
  .p-bidding .tables__anchor {
    transition: all 0.3s; }
  .p-bidding .tables__anchor--active .tables__order {
    background: #60b73e; }
  .p-bidding .tables__anchor--occupied .tables__order {
    background: #d0393f; }
  .p-bidding .tables__item-top {
    width: 9.09091%;
    float: left; }
  .p-bidding .tables__info {
    padding: 10px; }
  .p-bidding .tables__position {
    color: #373737;
    font-size: 1.1rem;
    line-height: 1.18182;
    text-transform: uppercase;
    margin-bottom: 5px; }
  .p-bidding .tables__pricing {
    color: #818181;
    font-size: 1.1rem;
    line-height: 1.18182;
    margin-bottom: 2px; }
  .p-bidding .tables__price {
    color: #d0393f;
    font-size: 1.1rem;
    line-height: 1.18182; }
  .p-bidding .tables__order {
    box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.24);
    background: #373737;
    color: white;
    text-align: center;
    padding: 7px 0;
    text-transform: uppercase;
    transition: all 0.3s; }

.p-bidding .offer {
  width: 37.5%;
  float: left;
  float: none;
  margin: 40px auto 0;
  overflow: hidden; }
  .p-bidding .offer__form {
    overflow: hidden; }
  .p-bidding .offer__input {
    width: 57.14286%;
    float: left;
    border: 1px solid #dddddd;
    padding: 5px 20px;
    height: 38px; }
  .p-bidding .offer__submit {
    width: 28.57143%;
    float: left; }
    .p-bidding .offer__submit:hover {
      cursor: pointer; }

.p-bidding .reset {
  width: 91.66667%;
  float: left;
  float: none;
  margin: 0 auto; }
  .p-bidding .reset__inner {
    float: right;
    margin-bottom: 10px; }
  .p-bidding .reset__anchor {
    color: #818181;
    font-size: 1.4rem;
    line-height: 1; }

.thank-you__title {
  color: #373737;
  font-size: 2.4rem;
  line-height: 1.45833; }

.thank-you__text {
  color: #818181;
  font-size: 1.3rem;
  line-height: 1.38462; }

.remodal-confirm {
  font-size: 1.3rem;
  line-height: 1.38462; }

.search {
  width: 25%;
  float: left;
  float: right; }
  .search .search__input {
    width: 66.66667%;
    float: left; }
  .search__submit {
    font-size: 1.1rem;
    text-transform: uppercase;
    padding: 5px 15px;
    width: 33.33333%;
    float: left;
    float: right;
    border: 1px solid #dddddd;
    color: #818181; }
    .search__submit:hover {
      cursor: pointer; }

.horiz {
  width: 91.66667%;
  float: left;
  float: none;
  margin: 0 auto;
  margin-top: 60px;
  padding-bottom: 40px; }
  .horiz__heading {
    font-size: 4.2rem;
    line-height: 1.30952;
    color: #818181;
    margin-bottom: 30px;
    text-transform: uppercase; }
  .horiz__price {
    width: 120px; }
  .horiz__pricing {
    float: left;
    font-size: 1.2rem;
    line-height: 2; }
  .horiz__pricing-form {
    float: left;
    width: 45px;
    margin-left: 10px; }
  .horiz .btn-red {
    color: #de3838 !important; }
  .horiz__btn {
    width: 100%;
    padding: 5px 0;
    text-align: center;
    display: block;
    margin-bottom: 15px; }
  .horiz__list {
    position: relative; }
  .horiz__basket {
    position: absolute;
    right: 0;
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%); }
  .horiz .filter {
    margin-bottom: 20px;
    float: left;
    margin-right: 20px;
    position: relative;
    z-index: 100; }
  .horiz__item {
    border-bottom: 1px solid #dddddd;
    padding: 15px 10px;
    width: 100%;
    overflow: hidden;
    position: relative; }
    .horiz__item:first-of-type {
      border-top: 1px solid #dddddd; }
  .horiz__image {
    float: left;
    width: 13.63636%;
    float: left;
    overflow: hidden; }
  .horiz__source {
    width: 100%;
    height: 100%;
    object-fit: cover; }
  .horiz__info {
    margin-left: 9.09091%;
    width: 50%;
    float: left; }
  .horiz__contact {
    width: 9.09091%;
    float: left;
    float: right;
    text-align: left; }
    .horiz__contact p {
      font-size: 1.2rem;
      line-height: 2; }
    .horiz__contact a {
      font-size: 1.2rem;
      line-height: 2;
      color: #818181; }
  .horiz__type {
    font-size: 1.1rem;
    line-height: 1.18182;
    text-transform: uppercase;
    color: #818181; }
  .horiz__title {
    font-size: 1.4rem;
    line-height: 1.14286;
    color: #e8323b;
    margin-top: 8px; }
  .horiz__desc {
    font-size: 1.2rem;
    line-height: 1.5;
    color: #373737;
    margin-top: 10px; }
  .horiz .load-more {
    width: 22.72727%;
    float: left;
    float: none;
    margin: 20px auto 0;
    overflow: hidden; }
  .horiz .basket__price {
    font-size: 1.4rem;
    line-height: 1.14286;
    color: #de3838;
    margin-bottom: 10px;
    display: block; }
  .horiz .basket__label {
    font-size: 1.2rem;
    line-height: 1.5;
    clear: both;
    display: block; }
  .horiz .basket__input {
    border: 1px solid #dddddd !important;
    margin-top: 10px;
    padding: 5px 10px;
    width: 50%;
    clear: both; }

/*# sourceMappingURL=data:application/json;base64, */
